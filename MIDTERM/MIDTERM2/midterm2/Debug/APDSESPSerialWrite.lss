
APDSESPSerialWrite.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001c2  00800100  00000e9e  00000f32  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e9e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000207  008002c2  008002c2  000010f4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001150  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00001190  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c86  00000000  00000000  00001248  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c8c  00000000  00000000  00002ece  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a08  00000000  00000000  00003b5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000248  00000000  00000000  00004564  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000671  00000000  00000000  000047ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f62  00000000  00000000  00004e1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00005d7f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	12 e0       	ldi	r17, 0x02	; 2
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	ee e9       	ldi	r30, 0x9E	; 158
  c8:	fe e0       	ldi	r31, 0x0E	; 14
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a2 3c       	cpi	r26, 0xC2	; 194
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	24 e0       	ldi	r18, 0x04	; 4
  d8:	a2 ec       	ldi	r26, 0xC2	; 194
  da:	b2 e0       	ldi	r27, 0x02	; 2
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a9 3c       	cpi	r26, 0xC9	; 201
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 82 02 	call	0x504	; 0x504 <main>
  ea:	0c 94 4d 07 	jmp	0xe9a	; 0xe9a <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <i2c_init>:
	data[(length-1)] = i2c_read_nack();
	
	i2c_stop();
	
	return 0;
}
  f2:	88 e4       	ldi	r24, 0x48	; 72
  f4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
  f8:	08 95       	ret

000000fa <i2c_start>:
  fa:	ec eb       	ldi	r30, 0xBC	; 188
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	10 82       	st	Z, r1
 100:	94 ea       	ldi	r25, 0xA4	; 164
 102:	90 83       	st	Z, r25
 104:	90 81       	ld	r25, Z
 106:	99 23       	and	r25, r25
 108:	ec f7       	brge	.-6      	; 0x104 <i2c_start+0xa>
 10a:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 10e:	98 7f       	andi	r25, 0xF8	; 248
 110:	98 30       	cpi	r25, 0x08	; 8
 112:	a1 f4       	brne	.+40     	; 0x13c <i2c_start+0x42>
 114:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 118:	84 e8       	ldi	r24, 0x84	; 132
 11a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 11e:	ec eb       	ldi	r30, 0xBC	; 188
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	88 23       	and	r24, r24
 126:	ec f7       	brge	.-6      	; 0x122 <i2c_start+0x28>
 128:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 12c:	98 7f       	andi	r25, 0xF8	; 248
 12e:	98 31       	cpi	r25, 0x18	; 24
 130:	39 f0       	breq	.+14     	; 0x140 <i2c_start+0x46>
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 34       	cpi	r25, 0x40	; 64
 136:	29 f4       	brne	.+10     	; 0x142 <i2c_start+0x48>
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	08 95       	ret
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	08 95       	ret
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	08 95       	ret

00000144 <i2c_write>:
 144:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 148:	84 e8       	ldi	r24, 0x84	; 132
 14a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 14e:	ec eb       	ldi	r30, 0xBC	; 188
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	88 23       	and	r24, r24
 156:	ec f7       	brge	.-6      	; 0x152 <i2c_write+0xe>
 158:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 15c:	98 7f       	andi	r25, 0xF8	; 248
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	98 32       	cpi	r25, 0x28	; 40
 162:	09 f4       	brne	.+2      	; 0x166 <i2c_write+0x22>
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	08 95       	ret

00000168 <i2c_read_ack>:
 168:	84 ec       	ldi	r24, 0xC4	; 196
 16a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 16e:	ec eb       	ldi	r30, 0xBC	; 188
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	80 81       	ld	r24, Z
 174:	88 23       	and	r24, r24
 176:	ec f7       	brge	.-6      	; 0x172 <i2c_read_ack+0xa>
 178:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 17c:	08 95       	ret

0000017e <i2c_read_nack>:
 17e:	84 e8       	ldi	r24, 0x84	; 132
 180:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 184:	ec eb       	ldi	r30, 0xBC	; 188
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	80 81       	ld	r24, Z
 18a:	88 23       	and	r24, r24
 18c:	ec f7       	brge	.-6      	; 0x188 <i2c_read_nack+0xa>
 18e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 192:	08 95       	ret

00000194 <i2c_writeReg>:

uint8_t i2c_writeReg(uint8_t devaddr, uint8_t regaddr, uint8_t* data, uint16_t length)
{
 194:	cf 92       	push	r12
 196:	df 92       	push	r13
 198:	ff 92       	push	r15
 19a:	0f 93       	push	r16
 19c:	1f 93       	push	r17
 19e:	cf 93       	push	r28
 1a0:	df 93       	push	r29
 1a2:	c6 2f       	mov	r28, r22
 1a4:	6a 01       	movw	r12, r20
 1a6:	89 01       	movw	r16, r18
	if (i2c_start(devaddr | 0x00)) return 1;
 1a8:	0e 94 7d 00 	call	0xfa	; 0xfa <i2c_start>
 1ac:	f8 2e       	mov	r15, r24
 1ae:	81 11       	cpse	r24, r1
 1b0:	15 c0       	rjmp	.+42     	; 0x1dc <i2c_writeReg+0x48>

	i2c_write(regaddr);
 1b2:	8c 2f       	mov	r24, r28
 1b4:	0e 94 a2 00 	call	0x144	; 0x144 <i2c_write>

	for (uint16_t i = 0; i < length; i++)
 1b8:	01 15       	cp	r16, r1
 1ba:	11 05       	cpc	r17, r1
 1bc:	59 f0       	breq	.+22     	; 0x1d4 <i2c_writeReg+0x40>
 1be:	e6 01       	movw	r28, r12
 1c0:	0c 0d       	add	r16, r12
 1c2:	1d 1d       	adc	r17, r13
	{
		if (i2c_write(data[i])) return 1;
 1c4:	89 91       	ld	r24, Y+
 1c6:	0e 94 a2 00 	call	0x144	; 0x144 <i2c_write>
 1ca:	81 11       	cpse	r24, r1
 1cc:	0a c0       	rjmp	.+20     	; 0x1e2 <i2c_writeReg+0x4e>
{
	if (i2c_start(devaddr | 0x00)) return 1;

	i2c_write(regaddr);

	for (uint16_t i = 0; i < length; i++)
 1ce:	c0 17       	cp	r28, r16
 1d0:	d1 07       	cpc	r29, r17
 1d2:	c1 f7       	brne	.-16     	; 0x1c4 <i2c_writeReg+0x30>
}

void i2c_stop(void)
{
	// transmit STOP condition
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 1d4:	84 e9       	ldi	r24, 0x94	; 148
 1d6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1da:	05 c0       	rjmp	.+10     	; 0x1e6 <i2c_writeReg+0x52>
	return 0;
}

uint8_t i2c_writeReg(uint8_t devaddr, uint8_t regaddr, uint8_t* data, uint16_t length)
{
	if (i2c_start(devaddr | 0x00)) return 1;
 1dc:	ff 24       	eor	r15, r15
 1de:	f3 94       	inc	r15
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <i2c_writeReg+0x52>

	i2c_write(regaddr);

	for (uint16_t i = 0; i < length; i++)
	{
		if (i2c_write(data[i])) return 1;
 1e2:	ff 24       	eor	r15, r15
 1e4:	f3 94       	inc	r15
	}

	i2c_stop();

	return 0;
}
 1e6:	8f 2d       	mov	r24, r15
 1e8:	df 91       	pop	r29
 1ea:	cf 91       	pop	r28
 1ec:	1f 91       	pop	r17
 1ee:	0f 91       	pop	r16
 1f0:	ff 90       	pop	r15
 1f2:	df 90       	pop	r13
 1f4:	cf 90       	pop	r12
 1f6:	08 95       	ret

000001f8 <i2c_readReg>:

uint8_t i2c_readReg(uint8_t devaddr, uint8_t regaddr, uint8_t* data, uint16_t length)
{
 1f8:	af 92       	push	r10
 1fa:	bf 92       	push	r11
 1fc:	df 92       	push	r13
 1fe:	ef 92       	push	r14
 200:	ff 92       	push	r15
 202:	0f 93       	push	r16
 204:	1f 93       	push	r17
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	18 2f       	mov	r17, r24
 20c:	06 2f       	mov	r16, r22
 20e:	5a 01       	movw	r10, r20
 210:	e9 01       	movw	r28, r18
	if (i2c_start(devaddr)) return 1;
 212:	0e 94 7d 00 	call	0xfa	; 0xfa <i2c_start>
 216:	81 11       	cpse	r24, r1
 218:	22 c0       	rjmp	.+68     	; 0x25e <i2c_readReg+0x66>

	i2c_write(regaddr);
 21a:	80 2f       	mov	r24, r16
 21c:	0e 94 a2 00 	call	0x144	; 0x144 <i2c_write>

	if (i2c_start(devaddr | 0x01)) return 1;
 220:	81 2f       	mov	r24, r17
 222:	81 60       	ori	r24, 0x01	; 1
 224:	0e 94 7d 00 	call	0xfa	; 0xfa <i2c_start>
 228:	d8 2e       	mov	r13, r24
 22a:	81 11       	cpse	r24, r1
 22c:	1b c0       	rjmp	.+54     	; 0x264 <i2c_readReg+0x6c>

	for (uint16_t i = 0; i < (length-1); i++)
 22e:	8e 01       	movw	r16, r28
 230:	01 50       	subi	r16, 0x01	; 1
 232:	11 09       	sbc	r17, r1
 234:	51 f0       	breq	.+20     	; 0x24a <i2c_readReg+0x52>
 236:	e5 01       	movw	r28, r10
 238:	75 01       	movw	r14, r10
 23a:	e0 0e       	add	r14, r16
 23c:	f1 1e       	adc	r15, r17
	{
		data[i] = i2c_read_ack();
 23e:	0e 94 b4 00 	call	0x168	; 0x168 <i2c_read_ack>
 242:	89 93       	st	Y+, r24

	i2c_write(regaddr);

	if (i2c_start(devaddr | 0x01)) return 1;

	for (uint16_t i = 0; i < (length-1); i++)
 244:	ec 16       	cp	r14, r28
 246:	fd 06       	cpc	r15, r29
 248:	d1 f7       	brne	.-12     	; 0x23e <i2c_readReg+0x46>
	{
		data[i] = i2c_read_ack();
	}
	data[(length-1)] = i2c_read_nack();
 24a:	e5 01       	movw	r28, r10
 24c:	c0 0f       	add	r28, r16
 24e:	d1 1f       	adc	r29, r17
 250:	0e 94 bf 00 	call	0x17e	; 0x17e <i2c_read_nack>
 254:	88 83       	st	Y, r24
}

void i2c_stop(void)
{
	// transmit STOP condition
	TWCR0 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 256:	84 e9       	ldi	r24, 0x94	; 148
 258:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 25c:	05 c0       	rjmp	.+10     	; 0x268 <i2c_readReg+0x70>
	return 0;
}

uint8_t i2c_readReg(uint8_t devaddr, uint8_t regaddr, uint8_t* data, uint16_t length)
{
	if (i2c_start(devaddr)) return 1;
 25e:	dd 24       	eor	r13, r13
 260:	d3 94       	inc	r13
 262:	02 c0       	rjmp	.+4      	; 0x268 <i2c_readReg+0x70>

	i2c_write(regaddr);

	if (i2c_start(devaddr | 0x01)) return 1;
 264:	dd 24       	eor	r13, r13
 266:	d3 94       	inc	r13
	data[(length-1)] = i2c_read_nack();

	i2c_stop();

	return 0;
}
 268:	8d 2d       	mov	r24, r13
 26a:	df 91       	pop	r29
 26c:	cf 91       	pop	r28
 26e:	1f 91       	pop	r17
 270:	0f 91       	pop	r16
 272:	ff 90       	pop	r15
 274:	ef 90       	pop	r14
 276:	df 90       	pop	r13
 278:	bf 90       	pop	r11
 27a:	af 90       	pop	r10
 27c:	08 95       	ret

0000027e <uart_putchar>:
	
	//Enable receiver and transmitter
	UCSR0B = ( 1 <<RXEN0)|( 1 <<TXEN0);
	
	// Set frame format: 8data, 1stop bit
	UCSR0C = (3 <<UCSZ00);
 27e:	e0 ec       	ldi	r30, 0xC0	; 192
 280:	f0 e0       	ldi	r31, 0x00	; 0
 282:	90 81       	ld	r25, Z
 284:	95 ff       	sbrs	r25, 5
 286:	fd cf       	rjmp	.-6      	; 0x282 <uart_putchar+0x4>
 288:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	08 95       	ret

00000292 <apds_init>:
 292:	cf 93       	push	r28
 294:	df 93       	push	r29
 296:	1f 92       	push	r1
 298:	cd b7       	in	r28, 0x3d	; 61
 29a:	de b7       	in	r29, 0x3e	; 62
 29c:	21 e0       	ldi	r18, 0x01	; 1
 29e:	30 e0       	ldi	r19, 0x00	; 0
 2a0:	ae 01       	movw	r20, r28
 2a2:	4f 5f       	subi	r20, 0xFF	; 255
 2a4:	5f 4f       	sbci	r21, 0xFF	; 255
 2a6:	62 e9       	ldi	r22, 0x92	; 146
 2a8:	82 e7       	ldi	r24, 0x72	; 114
 2aa:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <i2c_readReg>
 2ae:	89 81       	ldd	r24, Y+1	; 0x01
 2b0:	8b 3a       	cpi	r24, 0xAB	; 171
 2b2:	09 f0       	breq	.+2      	; 0x2b6 <apds_init+0x24>
 2b4:	ff cf       	rjmp	.-2      	; 0x2b4 <apds_init+0x22>
 2b6:	8b e1       	ldi	r24, 0x1B	; 27
 2b8:	89 83       	std	Y+1, r24	; 0x01
 2ba:	21 e0       	ldi	r18, 0x01	; 1
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	ae 01       	movw	r20, r28
 2c0:	4f 5f       	subi	r20, 0xFF	; 255
 2c2:	5f 4f       	sbci	r21, 0xFF	; 255
 2c4:	60 e8       	ldi	r22, 0x80	; 128
 2c6:	82 e7       	ldi	r24, 0x72	; 114
 2c8:	0e 94 ca 00 	call	0x194	; 0x194 <i2c_writeReg>
 2cc:	8b ed       	ldi	r24, 0xDB	; 219
 2ce:	89 83       	std	Y+1, r24	; 0x01
 2d0:	21 e0       	ldi	r18, 0x01	; 1
 2d2:	30 e0       	ldi	r19, 0x00	; 0
 2d4:	ae 01       	movw	r20, r28
 2d6:	4f 5f       	subi	r20, 0xFF	; 255
 2d8:	5f 4f       	sbci	r21, 0xFF	; 255
 2da:	61 e8       	ldi	r22, 0x81	; 129
 2dc:	82 e7       	ldi	r24, 0x72	; 114
 2de:	0e 94 ca 00 	call	0x194	; 0x194 <i2c_writeReg>
 2e2:	86 ef       	ldi	r24, 0xF6	; 246
 2e4:	89 83       	std	Y+1, r24	; 0x01
 2e6:	21 e0       	ldi	r18, 0x01	; 1
 2e8:	30 e0       	ldi	r19, 0x00	; 0
 2ea:	ae 01       	movw	r20, r28
 2ec:	4f 5f       	subi	r20, 0xFF	; 255
 2ee:	5f 4f       	sbci	r21, 0xFF	; 255
 2f0:	63 e8       	ldi	r22, 0x83	; 131
 2f2:	82 e7       	ldi	r24, 0x72	; 114
 2f4:	0e 94 ca 00 	call	0x194	; 0x194 <i2c_writeReg>
 2f8:	87 e8       	ldi	r24, 0x87	; 135
 2fa:	89 83       	std	Y+1, r24	; 0x01
 2fc:	21 e0       	ldi	r18, 0x01	; 1
 2fe:	30 e0       	ldi	r19, 0x00	; 0
 300:	ae 01       	movw	r20, r28
 302:	4f 5f       	subi	r20, 0xFF	; 255
 304:	5f 4f       	sbci	r21, 0xFF	; 255
 306:	6e e8       	ldi	r22, 0x8E	; 142
 308:	82 e7       	ldi	r24, 0x72	; 114
 30a:	0e 94 ca 00 	call	0x194	; 0x194 <i2c_writeReg>
 30e:	19 82       	std	Y+1, r1	; 0x01
 310:	21 e0       	ldi	r18, 0x01	; 1
 312:	30 e0       	ldi	r19, 0x00	; 0
 314:	ae 01       	movw	r20, r28
 316:	4f 5f       	subi	r20, 0xFF	; 255
 318:	5f 4f       	sbci	r21, 0xFF	; 255
 31a:	6d e9       	ldi	r22, 0x9D	; 157
 31c:	82 e7       	ldi	r24, 0x72	; 114
 31e:	0e 94 ca 00 	call	0x194	; 0x194 <i2c_writeReg>
 322:	19 82       	std	Y+1, r1	; 0x01
 324:	21 e0       	ldi	r18, 0x01	; 1
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	ae 01       	movw	r20, r28
 32a:	4f 5f       	subi	r20, 0xFF	; 255
 32c:	5f 4f       	sbci	r21, 0xFF	; 255
 32e:	6e e9       	ldi	r22, 0x9E	; 158
 330:	82 e7       	ldi	r24, 0x72	; 114
 332:	0e 94 ca 00 	call	0x194	; 0x194 <i2c_writeReg>
 336:	80 e6       	ldi	r24, 0x60	; 96
 338:	89 83       	std	Y+1, r24	; 0x01
 33a:	21 e0       	ldi	r18, 0x01	; 1
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	ae 01       	movw	r20, r28
 340:	4f 5f       	subi	r20, 0xFF	; 255
 342:	5f 4f       	sbci	r21, 0xFF	; 255
 344:	6d e8       	ldi	r22, 0x8D	; 141
 346:	82 e7       	ldi	r24, 0x72	; 114
 348:	0e 94 ca 00 	call	0x194	; 0x194 <i2c_writeReg>
 34c:	81 e1       	ldi	r24, 0x11	; 17
 34e:	89 83       	std	Y+1, r24	; 0x01
 350:	21 e0       	ldi	r18, 0x01	; 1
 352:	30 e0       	ldi	r19, 0x00	; 0
 354:	ae 01       	movw	r20, r28
 356:	4f 5f       	subi	r20, 0xFF	; 255
 358:	5f 4f       	sbci	r21, 0xFF	; 255
 35a:	6c e8       	ldi	r22, 0x8C	; 140
 35c:	82 e7       	ldi	r24, 0x72	; 114
 35e:	0e 94 ca 00 	call	0x194	; 0x194 <i2c_writeReg>
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	89 83       	std	Y+1, r24	; 0x01
 366:	21 e0       	ldi	r18, 0x01	; 1
 368:	30 e0       	ldi	r19, 0x00	; 0
 36a:	ae 01       	movw	r20, r28
 36c:	4f 5f       	subi	r20, 0xFF	; 255
 36e:	5f 4f       	sbci	r21, 0xFF	; 255
 370:	60 e9       	ldi	r22, 0x90	; 144
 372:	82 e7       	ldi	r24, 0x72	; 114
 374:	0e 94 ca 00 	call	0x194	; 0x194 <i2c_writeReg>
 378:	19 82       	std	Y+1, r1	; 0x01
 37a:	21 e0       	ldi	r18, 0x01	; 1
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	ae 01       	movw	r20, r28
 380:	4f 5f       	subi	r20, 0xFF	; 255
 382:	5f 4f       	sbci	r21, 0xFF	; 255
 384:	6f e9       	ldi	r22, 0x9F	; 159
 386:	82 e7       	ldi	r24, 0x72	; 114
 388:	0e 94 ca 00 	call	0x194	; 0x194 <i2c_writeReg>
 38c:	0f 90       	pop	r0
 38e:	df 91       	pop	r29
 390:	cf 91       	pop	r28
 392:	08 95       	ret

00000394 <readColor>:
 394:	af 92       	push	r10
 396:	bf 92       	push	r11
 398:	cf 92       	push	r12
 39a:	df 92       	push	r13
 39c:	ef 92       	push	r14
 39e:	ff 92       	push	r15
 3a0:	0f 93       	push	r16
 3a2:	1f 93       	push	r17
 3a4:	cf 93       	push	r28
 3a6:	df 93       	push	r29
 3a8:	cd b7       	in	r28, 0x3d	; 61
 3aa:	de b7       	in	r29, 0x3e	; 62
 3ac:	28 97       	sbiw	r28, 0x08	; 8
 3ae:	0f b6       	in	r0, 0x3f	; 63
 3b0:	f8 94       	cli
 3b2:	de bf       	out	0x3e, r29	; 62
 3b4:	0f be       	out	0x3f, r0	; 63
 3b6:	cd bf       	out	0x3d, r28	; 61
 3b8:	6c 01       	movw	r12, r24
 3ba:	7b 01       	movw	r14, r22
 3bc:	8a 01       	movw	r16, r20
 3be:	59 01       	movw	r10, r18
 3c0:	21 e0       	ldi	r18, 0x01	; 1
 3c2:	30 e0       	ldi	r19, 0x00	; 0
 3c4:	ae 01       	movw	r20, r28
 3c6:	4f 5f       	subi	r20, 0xFF	; 255
 3c8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ca:	64 e9       	ldi	r22, 0x94	; 148
 3cc:	82 e7       	ldi	r24, 0x72	; 114
 3ce:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <i2c_readReg>
 3d2:	21 e0       	ldi	r18, 0x01	; 1
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	ae 01       	movw	r20, r28
 3d8:	4e 5f       	subi	r20, 0xFE	; 254
 3da:	5f 4f       	sbci	r21, 0xFF	; 255
 3dc:	65 e9       	ldi	r22, 0x95	; 149
 3de:	82 e7       	ldi	r24, 0x72	; 114
 3e0:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <i2c_readReg>
 3e4:	21 e0       	ldi	r18, 0x01	; 1
 3e6:	30 e0       	ldi	r19, 0x00	; 0
 3e8:	ae 01       	movw	r20, r28
 3ea:	4d 5f       	subi	r20, 0xFD	; 253
 3ec:	5f 4f       	sbci	r21, 0xFF	; 255
 3ee:	66 e9       	ldi	r22, 0x96	; 150
 3f0:	82 e7       	ldi	r24, 0x72	; 114
 3f2:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <i2c_readReg>
 3f6:	21 e0       	ldi	r18, 0x01	; 1
 3f8:	30 e0       	ldi	r19, 0x00	; 0
 3fa:	ae 01       	movw	r20, r28
 3fc:	4c 5f       	subi	r20, 0xFC	; 252
 3fe:	5f 4f       	sbci	r21, 0xFF	; 255
 400:	67 e9       	ldi	r22, 0x97	; 151
 402:	82 e7       	ldi	r24, 0x72	; 114
 404:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <i2c_readReg>
 408:	21 e0       	ldi	r18, 0x01	; 1
 40a:	30 e0       	ldi	r19, 0x00	; 0
 40c:	ae 01       	movw	r20, r28
 40e:	4b 5f       	subi	r20, 0xFB	; 251
 410:	5f 4f       	sbci	r21, 0xFF	; 255
 412:	68 e9       	ldi	r22, 0x98	; 152
 414:	82 e7       	ldi	r24, 0x72	; 114
 416:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <i2c_readReg>
 41a:	21 e0       	ldi	r18, 0x01	; 1
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	ae 01       	movw	r20, r28
 420:	4a 5f       	subi	r20, 0xFA	; 250
 422:	5f 4f       	sbci	r21, 0xFF	; 255
 424:	69 e9       	ldi	r22, 0x99	; 153
 426:	82 e7       	ldi	r24, 0x72	; 114
 428:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <i2c_readReg>
 42c:	21 e0       	ldi	r18, 0x01	; 1
 42e:	30 e0       	ldi	r19, 0x00	; 0
 430:	ae 01       	movw	r20, r28
 432:	49 5f       	subi	r20, 0xF9	; 249
 434:	5f 4f       	sbci	r21, 0xFF	; 255
 436:	6a e9       	ldi	r22, 0x9A	; 154
 438:	82 e7       	ldi	r24, 0x72	; 114
 43a:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <i2c_readReg>
 43e:	21 e0       	ldi	r18, 0x01	; 1
 440:	30 e0       	ldi	r19, 0x00	; 0
 442:	ae 01       	movw	r20, r28
 444:	48 5f       	subi	r20, 0xF8	; 248
 446:	5f 4f       	sbci	r21, 0xFF	; 255
 448:	6b e9       	ldi	r22, 0x9B	; 155
 44a:	82 e7       	ldi	r24, 0x72	; 114
 44c:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <i2c_readReg>
 450:	8a 81       	ldd	r24, Y+2	; 0x02
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	38 2f       	mov	r19, r24
 456:	22 27       	eor	r18, r18
 458:	82 2b       	or	r24, r18
 45a:	93 2b       	or	r25, r19
 45c:	f5 01       	movw	r30, r10
 45e:	91 83       	std	Z+1, r25	; 0x01
 460:	80 83       	st	Z, r24
 462:	8c 81       	ldd	r24, Y+4	; 0x04
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	98 2f       	mov	r25, r24
 468:	88 27       	eor	r24, r24
 46a:	2b 81       	ldd	r18, Y+3	; 0x03
 46c:	82 2b       	or	r24, r18
 46e:	f6 01       	movw	r30, r12
 470:	91 83       	std	Z+1, r25	; 0x01
 472:	80 83       	st	Z, r24
 474:	8e 81       	ldd	r24, Y+6	; 0x06
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	98 2f       	mov	r25, r24
 47a:	88 27       	eor	r24, r24
 47c:	2d 81       	ldd	r18, Y+5	; 0x05
 47e:	82 2b       	or	r24, r18
 480:	f7 01       	movw	r30, r14
 482:	91 83       	std	Z+1, r25	; 0x01
 484:	80 83       	st	Z, r24
 486:	88 85       	ldd	r24, Y+8	; 0x08
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	98 2f       	mov	r25, r24
 48c:	88 27       	eor	r24, r24
 48e:	2f 81       	ldd	r18, Y+7	; 0x07
 490:	82 2b       	or	r24, r18
 492:	f8 01       	movw	r30, r16
 494:	91 83       	std	Z+1, r25	; 0x01
 496:	80 83       	st	Z, r24
 498:	28 96       	adiw	r28, 0x08	; 8
 49a:	0f b6       	in	r0, 0x3f	; 63
 49c:	f8 94       	cli
 49e:	de bf       	out	0x3e, r29	; 62
 4a0:	0f be       	out	0x3f, r0	; 63
 4a2:	cd bf       	out	0x3d, r28	; 61
 4a4:	df 91       	pop	r29
 4a6:	cf 91       	pop	r28
 4a8:	1f 91       	pop	r17
 4aa:	0f 91       	pop	r16
 4ac:	ff 90       	pop	r15
 4ae:	ef 90       	pop	r14
 4b0:	df 90       	pop	r13
 4b2:	cf 90       	pop	r12
 4b4:	bf 90       	pop	r11
 4b6:	af 90       	pop	r10
 4b8:	08 95       	ret

000004ba <USART_init>:
	return 0;
}

/* Initialize USART communication (RS-232) */
void USART_init( unsigned int ubrr ) {
	UBRR0H = (unsigned char)(ubrr>>8);
 4ba:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
 4be:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0)| ( 1 << RXCIE0); // Enable receiver, transmitter & RX interrupt
 4c2:	e1 ec       	ldi	r30, 0xC1	; 193
 4c4:	f0 e0       	ldi	r31, 0x00	; 0
 4c6:	80 81       	ld	r24, Z
 4c8:	88 69       	ori	r24, 0x98	; 152
 4ca:	80 83       	st	Z, r24
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
 4cc:	e2 ec       	ldi	r30, 0xC2	; 194
 4ce:	f0 e0       	ldi	r31, 0x00	; 0
 4d0:	80 81       	ld	r24, Z
 4d2:	86 60       	ori	r24, 0x06	; 6
 4d4:	80 83       	st	Z, r24
 4d6:	08 95       	ret

000004d8 <USART_tx_string>:
}

/* USART string sender (RS-232) */
void USART_tx_string( char *data ) {
 4d8:	cf 93       	push	r28
 4da:	df 93       	push	r29
	while ((*data != '\0')) {
 4dc:	fc 01       	movw	r30, r24
 4de:	20 81       	ld	r18, Z
 4e0:	22 23       	and	r18, r18
 4e2:	69 f0       	breq	.+26     	; 0x4fe <USART_tx_string+0x26>
 4e4:	dc 01       	movw	r26, r24
 4e6:	11 96       	adiw	r26, 0x01	; 1
		while (!(UCSR0A & (1 <<UDRE0)));
 4e8:	e0 ec       	ldi	r30, 0xC0	; 192
 4ea:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;
 4ec:	c6 ec       	ldi	r28, 0xC6	; 198
 4ee:	d0 e0       	ldi	r29, 0x00	; 0
}

/* USART string sender (RS-232) */
void USART_tx_string( char *data ) {
	while ((*data != '\0')) {
		while (!(UCSR0A & (1 <<UDRE0)));
 4f0:	90 81       	ld	r25, Z
 4f2:	95 ff       	sbrs	r25, 5
 4f4:	fd cf       	rjmp	.-6      	; 0x4f0 <USART_tx_string+0x18>
		UDR0 = *data;
 4f6:	28 83       	st	Y, r18
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
}

/* USART string sender (RS-232) */
void USART_tx_string( char *data ) {
	while ((*data != '\0')) {
 4f8:	2d 91       	ld	r18, X+
 4fa:	21 11       	cpse	r18, r1
 4fc:	f9 cf       	rjmp	.-14     	; 0x4f0 <USART_tx_string+0x18>
		while (!(UCSR0A & (1 <<UDRE0)));
		UDR0 = *data;
		data++;
	}
}
 4fe:	df 91       	pop	r29
 500:	cf 91       	pop	r28
 502:	08 95       	ret

00000504 <main>:
int uart_putchar( char c, FILE *stream);
void USART_init( unsigned int ubrr ); // Initialize USART communication
void USART_tx_string(char *data); //Print String USART


int main(void){
 504:	cf 93       	push	r28
 506:	df 93       	push	r29
 508:	cd b7       	in	r28, 0x3d	; 61
 50a:	de b7       	in	r29, 0x3e	; 62
 50c:	cb 58       	subi	r28, 0x8B	; 139
 50e:	d1 09       	sbc	r29, r1
 510:	0f b6       	in	r0, 0x3f	; 63
 512:	f8 94       	cli
 514:	de bf       	out	0x3e, r29	; 62
 516:	0f be       	out	0x3f, r0	; 63
 518:	cd bf       	out	0x3d, r28	; 61
	uint16_t red = 0, green = 0, blue = 0, white = 0;
 51a:	1a 82       	std	Y+2, r1	; 0x02
 51c:	19 82       	std	Y+1, r1	; 0x01
 51e:	1c 82       	std	Y+4, r1	; 0x04
 520:	1b 82       	std	Y+3, r1	; 0x03
 522:	1e 82       	std	Y+6, r1	; 0x06
 524:	1d 82       	std	Y+5, r1	; 0x05
 526:	18 86       	std	Y+8, r1	; 0x08
 528:	1f 82       	std	Y+7, r1	; 0x07
	
	i2c_init();
 52a:	0e 94 79 00 	call	0xf2	; 0xf2 <i2c_init>
	USART_init(BAUD_PRESCALLER); // Initialize the USART (RS232 interface)
 52e:	87 e6       	ldi	r24, 0x67	; 103
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	0e 94 5d 02 	call	0x4ba	; 0x4ba <USART_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 536:	2f ef       	ldi	r18, 0xFF	; 255
 538:	39 e6       	ldi	r19, 0x69	; 105
 53a:	88 e1       	ldi	r24, 0x18	; 24
 53c:	21 50       	subi	r18, 0x01	; 1
 53e:	30 40       	sbci	r19, 0x00	; 0
 540:	80 40       	sbci	r24, 0x00	; 0
 542:	e1 f7       	brne	.-8      	; 0x53c <main+0x38>
 544:	00 c0       	rjmp	.+0      	; 0x546 <main+0x42>
 546:	00 00       	nop
	_delay_ms(500); // Delay to allow hardware to initialize
	stdout = &str_uart;
 548:	80 e0       	ldi	r24, 0x00	; 0
 54a:	91 e0       	ldi	r25, 0x01	; 1
 54c:	90 93 c6 04 	sts	0x04C6, r25	; 0x8004c6 <__iob+0x3>
 550:	80 93 c5 04 	sts	0x04C5, r24	; 0x8004c5 <__iob+0x2>
	apds_init();
 554:	0e 94 49 01 	call	0x292	; 0x292 <apds_init>
		// Read the next colors
		readColor(&red, &green, &blue, &white);
		
		// Print Data to Thingspeak using provided link, website channel key, and field location
		// Send Red
		snprintf(outs,sizeof(outs),"GET https://api.thingspeak.com/update?api_key=IKAXX2LP9LJMS0IU&field1=%3d\r\n", red);
 558:	0f 2e       	mov	r0, r31
 55a:	fe e0       	ldi	r31, 0x0E	; 14
 55c:	af 2e       	mov	r10, r31
 55e:	f1 e0       	ldi	r31, 0x01	; 1
 560:	bf 2e       	mov	r11, r31
 562:	f0 2d       	mov	r31, r0
 564:	02 ec       	ldi	r16, 0xC2	; 194
 566:	12 e0       	ldi	r17, 0x02	; 2
		_delay_ms(10000);
		USART_tx_string(AT_CIPSTART);
		_delay_ms(10000);
		USART_tx_string(AT_CIPSEND);
		_delay_ms(5000);
		snprintf(outs,sizeof(outs),"GET https://api.thingspeak.com/update?api_key=IKAXX2LP9LJMS0IU&field2=%3d\r\n", green);
 568:	0f 2e       	mov	r0, r31
 56a:	fa e5       	ldi	r31, 0x5A	; 90
 56c:	cf 2e       	mov	r12, r31
 56e:	f1 e0       	ldi	r31, 0x01	; 1
 570:	df 2e       	mov	r13, r31
 572:	f0 2d       	mov	r31, r0
	
    while (1) {
		
		/* Initialize AT commands */
		//AT connect check
		unsigned char AT[] = "AT\r\n";
 574:	85 e0       	ldi	r24, 0x05	; 5
 576:	ee e3       	ldi	r30, 0x3E	; 62
 578:	f2 e0       	ldi	r31, 0x02	; 2
 57a:	de 01       	movw	r26, r28
 57c:	a9 57       	subi	r26, 0x79	; 121
 57e:	bf 4f       	sbci	r27, 0xFF	; 255
 580:	01 90       	ld	r0, Z+
 582:	0d 92       	st	X+, r0
 584:	8a 95       	dec	r24
 586:	e1 f7       	brne	.-8      	; 0x580 <main+0x7c>
		//Set device mode, 1 = Station mode
		unsigned char AT_CWMODE[] = "AT+CWMODE=1\r\n";
 588:	8e e0       	ldi	r24, 0x0E	; 14
 58a:	e3 e4       	ldi	r30, 0x43	; 67
 58c:	f2 e0       	ldi	r31, 0x02	; 2
 58e:	de 01       	movw	r26, r28
 590:	a7 58       	subi	r26, 0x87	; 135
 592:	bf 4f       	sbci	r27, 0xFF	; 255
 594:	01 90       	ld	r0, Z+
 596:	0d 92       	st	X+, r0
 598:	8a 95       	dec	r24
 59a:	e1 f7       	brne	.-8      	; 0x594 <main+0x90>
		//Perform Wifi connection, provide SSID and Password
		unsigned char AT_CWJAP[] = "AT+CWJAP=\"Higbee_Pixel\",\"Higbee19\"\r\n";
 59c:	85 e2       	ldi	r24, 0x25	; 37
 59e:	e1 e5       	ldi	r30, 0x51	; 81
 5a0:	f2 e0       	ldi	r31, 0x02	; 2
 5a2:	de 01       	movw	r26, r28
 5a4:	d5 96       	adiw	r26, 0x35	; 53
 5a6:	01 90       	ld	r0, Z+
 5a8:	0d 92       	st	X+, r0
 5aa:	8a 95       	dec	r24
 5ac:	e1 f7       	brne	.-8      	; 0x5a6 <main+0xa2>
		//Set device for single IP Address Mode
		unsigned char AT_CIPMUX[] = "AT+CIPMUX=0\r\n";
 5ae:	8e e0       	ldi	r24, 0x0E	; 14
 5b0:	e6 e7       	ldi	r30, 0x76	; 118
 5b2:	f2 e0       	ldi	r31, 0x02	; 2
 5b4:	de 01       	movw	r26, r28
 5b6:	a5 59       	subi	r26, 0x95	; 149
 5b8:	bf 4f       	sbci	r27, 0xFF	; 255
 5ba:	01 90       	ld	r0, Z+
 5bc:	0d 92       	st	X+, r0
 5be:	8a 95       	dec	r24
 5c0:	e1 f7       	brne	.-8      	; 0x5ba <main+0xb6>
		// Start TCP connection to Thingspeak.com at port 80
		unsigned char AT_CIPSTART[] = "AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n";
 5c2:	8c e2       	ldi	r24, 0x2C	; 44
 5c4:	e4 e8       	ldi	r30, 0x84	; 132
 5c6:	f2 e0       	ldi	r31, 0x02	; 2
 5c8:	de 01       	movw	r26, r28
 5ca:	19 96       	adiw	r26, 0x09	; 9
 5cc:	01 90       	ld	r0, Z+
 5ce:	0d 92       	st	X+, r0
 5d0:	8a 95       	dec	r24
 5d2:	e1 f7       	brne	.-8      	; 0x5cc <main+0xc8>
		// Give upcoming string length
		unsigned char AT_CIPSEND[] = "AT+CIPSEND=130\r\n";
 5d4:	81 e1       	ldi	r24, 0x11	; 17
 5d6:	e0 eb       	ldi	r30, 0xB0	; 176
 5d8:	f2 e0       	ldi	r31, 0x02	; 2
 5da:	de 01       	movw	r26, r28
 5dc:	a6 5a       	subi	r26, 0xA6	; 166
 5de:	bf 4f       	sbci	r27, 0xFF	; 255
 5e0:	01 90       	ld	r0, Z+
 5e2:	0d 92       	st	X+, r0
 5e4:	8a 95       	dec	r24
 5e6:	e1 f7       	brne	.-8      	; 0x5e0 <main+0xdc>
 5e8:	9f ef       	ldi	r25, 0xFF	; 255
 5ea:	23 ec       	ldi	r18, 0xC3	; 195
 5ec:	39 e0       	ldi	r19, 0x09	; 9
 5ee:	91 50       	subi	r25, 0x01	; 1
 5f0:	20 40       	sbci	r18, 0x00	; 0
 5f2:	30 40       	sbci	r19, 0x00	; 0
 5f4:	e1 f7       	brne	.-8      	; 0x5ee <main+0xea>
 5f6:	00 c0       	rjmp	.+0      	; 0x5f8 <main+0xf4>
 5f8:	00 00       	nop
		
		// Send commands listed from above
		_delay_ms(200);
		USART_tx_string(AT);
 5fa:	ce 01       	movw	r24, r28
 5fc:	89 57       	subi	r24, 0x79	; 121
 5fe:	9f 4f       	sbci	r25, 0xFF	; 255
 600:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 604:	8f ef       	ldi	r24, 0xFF	; 255
 606:	93 e2       	ldi	r25, 0x23	; 35
 608:	24 ef       	ldi	r18, 0xF4	; 244
 60a:	81 50       	subi	r24, 0x01	; 1
 60c:	90 40       	sbci	r25, 0x00	; 0
 60e:	20 40       	sbci	r18, 0x00	; 0
 610:	e1 f7       	brne	.-8      	; 0x60a <main+0x106>
 612:	00 c0       	rjmp	.+0      	; 0x614 <main+0x110>
 614:	00 00       	nop
		_delay_ms(5000);
		USART_tx_string(AT_CWMODE);
 616:	ce 01       	movw	r24, r28
 618:	87 58       	subi	r24, 0x87	; 135
 61a:	9f 4f       	sbci	r25, 0xFF	; 255
 61c:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 620:	3f ef       	ldi	r19, 0xFF	; 255
 622:	83 e2       	ldi	r24, 0x23	; 35
 624:	94 ef       	ldi	r25, 0xF4	; 244
 626:	31 50       	subi	r19, 0x01	; 1
 628:	80 40       	sbci	r24, 0x00	; 0
 62a:	90 40       	sbci	r25, 0x00	; 0
 62c:	e1 f7       	brne	.-8      	; 0x626 <main+0x122>
 62e:	00 c0       	rjmp	.+0      	; 0x630 <main+0x12c>
 630:	00 00       	nop
		_delay_ms(5000);
		USART_tx_string(AT_CWJAP);
 632:	ce 01       	movw	r24, r28
 634:	c5 96       	adiw	r24, 0x35	; 53
 636:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 63a:	2f ef       	ldi	r18, 0xFF	; 255
 63c:	39 e5       	ldi	r19, 0x59	; 89
 63e:	82 e6       	ldi	r24, 0x62	; 98
 640:	92 e0       	ldi	r25, 0x02	; 2
 642:	21 50       	subi	r18, 0x01	; 1
 644:	30 40       	sbci	r19, 0x00	; 0
 646:	80 40       	sbci	r24, 0x00	; 0
 648:	90 40       	sbci	r25, 0x00	; 0
 64a:	d9 f7       	brne	.-10     	; 0x642 <main+0x13e>
 64c:	00 c0       	rjmp	.+0      	; 0x64e <main+0x14a>
 64e:	00 00       	nop
		_delay_ms(15000);
		USART_tx_string(AT_CIPMUX);
 650:	ce 01       	movw	r24, r28
 652:	85 59       	subi	r24, 0x95	; 149
 654:	9f 4f       	sbci	r25, 0xFF	; 255
 656:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 65a:	2a ea       	ldi	r18, 0xAA	; 170
 65c:	36 ee       	ldi	r19, 0xE6	; 230
 65e:	86 e9       	ldi	r24, 0x96	; 150
 660:	91 e0       	ldi	r25, 0x01	; 1
 662:	21 50       	subi	r18, 0x01	; 1
 664:	30 40       	sbci	r19, 0x00	; 0
 666:	80 40       	sbci	r24, 0x00	; 0
 668:	90 40       	sbci	r25, 0x00	; 0
 66a:	d9 f7       	brne	.-10     	; 0x662 <main+0x15e>
 66c:	00 00       	nop
		_delay_ms(10000);
		USART_tx_string(AT_CIPSTART);
 66e:	ce 01       	movw	r24, r28
 670:	09 96       	adiw	r24, 0x09	; 9
 672:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 676:	2a ea       	ldi	r18, 0xAA	; 170
 678:	36 ee       	ldi	r19, 0xE6	; 230
 67a:	86 e9       	ldi	r24, 0x96	; 150
 67c:	91 e0       	ldi	r25, 0x01	; 1
 67e:	21 50       	subi	r18, 0x01	; 1
 680:	30 40       	sbci	r19, 0x00	; 0
 682:	80 40       	sbci	r24, 0x00	; 0
 684:	90 40       	sbci	r25, 0x00	; 0
 686:	d9 f7       	brne	.-10     	; 0x67e <main+0x17a>
 688:	00 00       	nop
		_delay_ms(10000);
		USART_tx_string(AT_CIPSEND);
 68a:	ce 01       	movw	r24, r28
 68c:	86 5a       	subi	r24, 0xA6	; 166
 68e:	9f 4f       	sbci	r25, 0xFF	; 255
 690:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 694:	2f ef       	ldi	r18, 0xFF	; 255
 696:	33 e2       	ldi	r19, 0x23	; 35
 698:	84 ef       	ldi	r24, 0xF4	; 244
 69a:	21 50       	subi	r18, 0x01	; 1
 69c:	30 40       	sbci	r19, 0x00	; 0
 69e:	80 40       	sbci	r24, 0x00	; 0
 6a0:	e1 f7       	brne	.-8      	; 0x69a <main+0x196>
 6a2:	00 c0       	rjmp	.+0      	; 0x6a4 <main+0x1a0>
 6a4:	00 00       	nop
		_delay_ms(5000);
		
		// Read the next colors
		readColor(&red, &green, &blue, &white);
 6a6:	9e 01       	movw	r18, r28
 6a8:	29 5f       	subi	r18, 0xF9	; 249
 6aa:	3f 4f       	sbci	r19, 0xFF	; 255
 6ac:	ae 01       	movw	r20, r28
 6ae:	4b 5f       	subi	r20, 0xFB	; 251
 6b0:	5f 4f       	sbci	r21, 0xFF	; 255
 6b2:	be 01       	movw	r22, r28
 6b4:	6d 5f       	subi	r22, 0xFD	; 253
 6b6:	7f 4f       	sbci	r23, 0xFF	; 255
 6b8:	ce 01       	movw	r24, r28
 6ba:	01 96       	adiw	r24, 0x01	; 1
 6bc:	0e 94 ca 01 	call	0x394	; 0x394 <readColor>
		
		// Print Data to Thingspeak using provided link, website channel key, and field location
		// Send Red
		snprintf(outs,sizeof(outs),"GET https://api.thingspeak.com/update?api_key=IKAXX2LP9LJMS0IU&field1=%3d\r\n", red);
 6c0:	8a 81       	ldd	r24, Y+2	; 0x02
 6c2:	8f 93       	push	r24
 6c4:	89 81       	ldd	r24, Y+1	; 0x01
 6c6:	8f 93       	push	r24
 6c8:	bf 92       	push	r11
 6ca:	af 92       	push	r10
 6cc:	ff 24       	eor	r15, r15
 6ce:	f3 94       	inc	r15
 6d0:	ff 92       	push	r15
 6d2:	1f 92       	push	r1
 6d4:	1f 93       	push	r17
 6d6:	0f 93       	push	r16
 6d8:	0e 94 55 04 	call	0x8aa	; 0x8aa <snprintf>
		USART_tx_string(outs);//send data
 6dc:	c8 01       	movw	r24, r16
 6de:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 6e2:	9f ef       	ldi	r25, 0xFF	; 255
 6e4:	29 e5       	ldi	r18, 0x59	; 89
 6e6:	32 e6       	ldi	r19, 0x62	; 98
 6e8:	82 e0       	ldi	r24, 0x02	; 2
 6ea:	91 50       	subi	r25, 0x01	; 1
 6ec:	20 40       	sbci	r18, 0x00	; 0
 6ee:	30 40       	sbci	r19, 0x00	; 0
 6f0:	80 40       	sbci	r24, 0x00	; 0
 6f2:	d9 f7       	brne	.-10     	; 0x6ea <main+0x1e6>
 6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <main+0x1f2>
 6f6:	00 00       	nop
		_delay_ms(15000);
		
		// Send Green
		USART_tx_string(AT_CIPMUX);
 6f8:	ce 01       	movw	r24, r28
 6fa:	85 59       	subi	r24, 0x95	; 149
 6fc:	9f 4f       	sbci	r25, 0xFF	; 255
 6fe:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 702:	9a ea       	ldi	r25, 0xAA	; 170
 704:	26 ee       	ldi	r18, 0xE6	; 230
 706:	36 e9       	ldi	r19, 0x96	; 150
 708:	81 e0       	ldi	r24, 0x01	; 1
 70a:	91 50       	subi	r25, 0x01	; 1
 70c:	20 40       	sbci	r18, 0x00	; 0
 70e:	30 40       	sbci	r19, 0x00	; 0
 710:	80 40       	sbci	r24, 0x00	; 0
 712:	d9 f7       	brne	.-10     	; 0x70a <main+0x206>
 714:	00 00       	nop
		_delay_ms(10000);
		USART_tx_string(AT_CIPSTART);
 716:	ce 01       	movw	r24, r28
 718:	09 96       	adiw	r24, 0x09	; 9
 71a:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 71e:	9a ea       	ldi	r25, 0xAA	; 170
 720:	26 ee       	ldi	r18, 0xE6	; 230
 722:	36 e9       	ldi	r19, 0x96	; 150
 724:	81 e0       	ldi	r24, 0x01	; 1
 726:	91 50       	subi	r25, 0x01	; 1
 728:	20 40       	sbci	r18, 0x00	; 0
 72a:	30 40       	sbci	r19, 0x00	; 0
 72c:	80 40       	sbci	r24, 0x00	; 0
 72e:	d9 f7       	brne	.-10     	; 0x726 <main+0x222>
 730:	00 00       	nop
		_delay_ms(10000);
		USART_tx_string(AT_CIPSEND);
 732:	ce 01       	movw	r24, r28
 734:	86 5a       	subi	r24, 0xA6	; 166
 736:	9f 4f       	sbci	r25, 0xFF	; 255
 738:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 73c:	9f ef       	ldi	r25, 0xFF	; 255
 73e:	23 e2       	ldi	r18, 0x23	; 35
 740:	34 ef       	ldi	r19, 0xF4	; 244
 742:	91 50       	subi	r25, 0x01	; 1
 744:	20 40       	sbci	r18, 0x00	; 0
 746:	30 40       	sbci	r19, 0x00	; 0
 748:	e1 f7       	brne	.-8      	; 0x742 <main+0x23e>
 74a:	00 c0       	rjmp	.+0      	; 0x74c <main+0x248>
 74c:	00 00       	nop
		_delay_ms(5000);
		snprintf(outs,sizeof(outs),"GET https://api.thingspeak.com/update?api_key=IKAXX2LP9LJMS0IU&field2=%3d\r\n", green);
 74e:	8c 81       	ldd	r24, Y+4	; 0x04
 750:	8f 93       	push	r24
 752:	8b 81       	ldd	r24, Y+3	; 0x03
 754:	8f 93       	push	r24
 756:	df 92       	push	r13
 758:	cf 92       	push	r12
 75a:	ff 92       	push	r15
 75c:	1f 92       	push	r1
 75e:	1f 93       	push	r17
 760:	0f 93       	push	r16
 762:	0e 94 55 04 	call	0x8aa	; 0x8aa <snprintf>
		USART_tx_string(outs);//send data
 766:	c8 01       	movw	r24, r16
 768:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 76c:	8f ef       	ldi	r24, 0xFF	; 255
 76e:	99 e5       	ldi	r25, 0x59	; 89
 770:	22 e6       	ldi	r18, 0x62	; 98
 772:	32 e0       	ldi	r19, 0x02	; 2
 774:	81 50       	subi	r24, 0x01	; 1
 776:	90 40       	sbci	r25, 0x00	; 0
 778:	20 40       	sbci	r18, 0x00	; 0
 77a:	30 40       	sbci	r19, 0x00	; 0
 77c:	d9 f7       	brne	.-10     	; 0x774 <main+0x270>
 77e:	00 c0       	rjmp	.+0      	; 0x780 <main+0x27c>
 780:	00 00       	nop
		_delay_ms(15000);
		
		// Send Green
		USART_tx_string(AT_CIPMUX);
 782:	ce 01       	movw	r24, r28
 784:	85 59       	subi	r24, 0x95	; 149
 786:	9f 4f       	sbci	r25, 0xFF	; 255
 788:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 78c:	8a ea       	ldi	r24, 0xAA	; 170
 78e:	96 ee       	ldi	r25, 0xE6	; 230
 790:	26 e9       	ldi	r18, 0x96	; 150
 792:	31 e0       	ldi	r19, 0x01	; 1
 794:	81 50       	subi	r24, 0x01	; 1
 796:	90 40       	sbci	r25, 0x00	; 0
 798:	20 40       	sbci	r18, 0x00	; 0
 79a:	30 40       	sbci	r19, 0x00	; 0
 79c:	d9 f7       	brne	.-10     	; 0x794 <main+0x290>
 79e:	00 00       	nop
		_delay_ms(10000);
		USART_tx_string(AT_CIPSTART);
 7a0:	ce 01       	movw	r24, r28
 7a2:	09 96       	adiw	r24, 0x09	; 9
 7a4:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 7a8:	8a ea       	ldi	r24, 0xAA	; 170
 7aa:	96 ee       	ldi	r25, 0xE6	; 230
 7ac:	26 e9       	ldi	r18, 0x96	; 150
 7ae:	31 e0       	ldi	r19, 0x01	; 1
 7b0:	81 50       	subi	r24, 0x01	; 1
 7b2:	90 40       	sbci	r25, 0x00	; 0
 7b4:	20 40       	sbci	r18, 0x00	; 0
 7b6:	30 40       	sbci	r19, 0x00	; 0
 7b8:	d9 f7       	brne	.-10     	; 0x7b0 <main+0x2ac>
 7ba:	00 00       	nop
		_delay_ms(10000);
		USART_tx_string(AT_CIPSEND);
 7bc:	ce 01       	movw	r24, r28
 7be:	86 5a       	subi	r24, 0xA6	; 166
 7c0:	9f 4f       	sbci	r25, 0xFF	; 255
 7c2:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 7c6:	8f ef       	ldi	r24, 0xFF	; 255
 7c8:	93 e2       	ldi	r25, 0x23	; 35
 7ca:	24 ef       	ldi	r18, 0xF4	; 244
 7cc:	81 50       	subi	r24, 0x01	; 1
 7ce:	90 40       	sbci	r25, 0x00	; 0
 7d0:	20 40       	sbci	r18, 0x00	; 0
 7d2:	e1 f7       	brne	.-8      	; 0x7cc <main+0x2c8>
 7d4:	00 c0       	rjmp	.+0      	; 0x7d6 <main+0x2d2>
 7d6:	00 00       	nop
		_delay_ms(5000);
		snprintf(outs,sizeof(outs),"GET https://api.thingspeak.com/update?api_key=IKAXX2LP9LJMS0IU&field3=%3d\r\n", blue);
 7d8:	8e 81       	ldd	r24, Y+6	; 0x06
 7da:	8f 93       	push	r24
 7dc:	8d 81       	ldd	r24, Y+5	; 0x05
 7de:	8f 93       	push	r24
 7e0:	86 ea       	ldi	r24, 0xA6	; 166
 7e2:	91 e0       	ldi	r25, 0x01	; 1
 7e4:	9f 93       	push	r25
 7e6:	8f 93       	push	r24
 7e8:	ff 92       	push	r15
 7ea:	1f 92       	push	r1
 7ec:	1f 93       	push	r17
 7ee:	0f 93       	push	r16
 7f0:	0e 94 55 04 	call	0x8aa	; 0x8aa <snprintf>
		USART_tx_string(outs);//send data
 7f4:	c8 01       	movw	r24, r16
 7f6:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 7fa:	3f ef       	ldi	r19, 0xFF	; 255
 7fc:	89 e5       	ldi	r24, 0x59	; 89
 7fe:	92 e6       	ldi	r25, 0x62	; 98
 800:	22 e0       	ldi	r18, 0x02	; 2
 802:	31 50       	subi	r19, 0x01	; 1
 804:	80 40       	sbci	r24, 0x00	; 0
 806:	90 40       	sbci	r25, 0x00	; 0
 808:	20 40       	sbci	r18, 0x00	; 0
 80a:	d9 f7       	brne	.-10     	; 0x802 <main+0x2fe>
 80c:	00 c0       	rjmp	.+0      	; 0x80e <main+0x30a>
 80e:	00 00       	nop
		_delay_ms(15000);
		
		// Send White
		USART_tx_string(AT_CIPMUX);
 810:	ce 01       	movw	r24, r28
 812:	85 59       	subi	r24, 0x95	; 149
 814:	9f 4f       	sbci	r25, 0xFF	; 255
 816:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 81a:	3a ea       	ldi	r19, 0xAA	; 170
 81c:	86 ee       	ldi	r24, 0xE6	; 230
 81e:	96 e9       	ldi	r25, 0x96	; 150
 820:	21 e0       	ldi	r18, 0x01	; 1
 822:	31 50       	subi	r19, 0x01	; 1
 824:	80 40       	sbci	r24, 0x00	; 0
 826:	90 40       	sbci	r25, 0x00	; 0
 828:	20 40       	sbci	r18, 0x00	; 0
 82a:	d9 f7       	brne	.-10     	; 0x822 <main+0x31e>
 82c:	00 00       	nop
		_delay_ms(10000);
		USART_tx_string(AT_CIPSTART);
 82e:	ce 01       	movw	r24, r28
 830:	09 96       	adiw	r24, 0x09	; 9
 832:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 836:	3a ea       	ldi	r19, 0xAA	; 170
 838:	86 ee       	ldi	r24, 0xE6	; 230
 83a:	96 e9       	ldi	r25, 0x96	; 150
 83c:	21 e0       	ldi	r18, 0x01	; 1
 83e:	31 50       	subi	r19, 0x01	; 1
 840:	80 40       	sbci	r24, 0x00	; 0
 842:	90 40       	sbci	r25, 0x00	; 0
 844:	20 40       	sbci	r18, 0x00	; 0
 846:	d9 f7       	brne	.-10     	; 0x83e <main+0x33a>
 848:	00 00       	nop
		_delay_ms(10000);
		USART_tx_string(AT_CIPSEND);
 84a:	ce 01       	movw	r24, r28
 84c:	86 5a       	subi	r24, 0xA6	; 166
 84e:	9f 4f       	sbci	r25, 0xFF	; 255
 850:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 854:	3f ef       	ldi	r19, 0xFF	; 255
 856:	83 e2       	ldi	r24, 0x23	; 35
 858:	94 ef       	ldi	r25, 0xF4	; 244
 85a:	31 50       	subi	r19, 0x01	; 1
 85c:	80 40       	sbci	r24, 0x00	; 0
 85e:	90 40       	sbci	r25, 0x00	; 0
 860:	e1 f7       	brne	.-8      	; 0x85a <main+0x356>
 862:	00 c0       	rjmp	.+0      	; 0x864 <main+0x360>
 864:	00 00       	nop
		_delay_ms(5000);
		snprintf(outs,sizeof(outs),"GET https://api.thingspeak.com/update?api_key=IKAXX2LP9LJMS0IU&field4=%3d\r\n", white);
 866:	88 85       	ldd	r24, Y+8	; 0x08
 868:	8f 93       	push	r24
 86a:	8f 81       	ldd	r24, Y+7	; 0x07
 86c:	8f 93       	push	r24
 86e:	82 ef       	ldi	r24, 0xF2	; 242
 870:	91 e0       	ldi	r25, 0x01	; 1
 872:	9f 93       	push	r25
 874:	8f 93       	push	r24
 876:	ff 92       	push	r15
 878:	1f 92       	push	r1
 87a:	1f 93       	push	r17
 87c:	0f 93       	push	r16
 87e:	0e 94 55 04 	call	0x8aa	; 0x8aa <snprintf>
		USART_tx_string(outs);//send data
 882:	0f b6       	in	r0, 0x3f	; 63
 884:	f8 94       	cli
 886:	de bf       	out	0x3e, r29	; 62
 888:	0f be       	out	0x3f, r0	; 63
 88a:	cd bf       	out	0x3d, r28	; 61
 88c:	c8 01       	movw	r24, r16
 88e:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <USART_tx_string>
 892:	3f ef       	ldi	r19, 0xFF	; 255
 894:	89 e5       	ldi	r24, 0x59	; 89
 896:	92 e6       	ldi	r25, 0x62	; 98
 898:	22 e0       	ldi	r18, 0x02	; 2
 89a:	31 50       	subi	r19, 0x01	; 1
 89c:	80 40       	sbci	r24, 0x00	; 0
 89e:	90 40       	sbci	r25, 0x00	; 0
 8a0:	20 40       	sbci	r18, 0x00	; 0
 8a2:	d9 f7       	brne	.-10     	; 0x89a <main+0x396>
 8a4:	00 c0       	rjmp	.+0      	; 0x8a6 <main+0x3a2>
 8a6:	00 00       	nop
 8a8:	65 ce       	rjmp	.-822    	; 0x574 <main+0x70>

000008aa <snprintf>:
 8aa:	ae e0       	ldi	r26, 0x0E	; 14
 8ac:	b0 e0       	ldi	r27, 0x00	; 0
 8ae:	eb e5       	ldi	r30, 0x5B	; 91
 8b0:	f4 e0       	ldi	r31, 0x04	; 4
 8b2:	0c 94 24 07 	jmp	0xe48	; 0xe48 <__prologue_saves__+0x1c>
 8b6:	0d 89       	ldd	r16, Y+21	; 0x15
 8b8:	1e 89       	ldd	r17, Y+22	; 0x16
 8ba:	8f 89       	ldd	r24, Y+23	; 0x17
 8bc:	98 8d       	ldd	r25, Y+24	; 0x18
 8be:	26 e0       	ldi	r18, 0x06	; 6
 8c0:	2c 83       	std	Y+4, r18	; 0x04
 8c2:	1a 83       	std	Y+2, r17	; 0x02
 8c4:	09 83       	std	Y+1, r16	; 0x01
 8c6:	97 ff       	sbrs	r25, 7
 8c8:	02 c0       	rjmp	.+4      	; 0x8ce <snprintf+0x24>
 8ca:	80 e0       	ldi	r24, 0x00	; 0
 8cc:	90 e8       	ldi	r25, 0x80	; 128
 8ce:	01 97       	sbiw	r24, 0x01	; 1
 8d0:	9e 83       	std	Y+6, r25	; 0x06
 8d2:	8d 83       	std	Y+5, r24	; 0x05
 8d4:	ae 01       	movw	r20, r28
 8d6:	45 5e       	subi	r20, 0xE5	; 229
 8d8:	5f 4f       	sbci	r21, 0xFF	; 255
 8da:	69 8d       	ldd	r22, Y+25	; 0x19
 8dc:	7a 8d       	ldd	r23, Y+26	; 0x1a
 8de:	ce 01       	movw	r24, r28
 8e0:	01 96       	adiw	r24, 0x01	; 1
 8e2:	0e 94 85 04 	call	0x90a	; 0x90a <vfprintf>
 8e6:	4d 81       	ldd	r20, Y+5	; 0x05
 8e8:	5e 81       	ldd	r21, Y+6	; 0x06
 8ea:	57 fd       	sbrc	r21, 7
 8ec:	0a c0       	rjmp	.+20     	; 0x902 <__stack+0x3>
 8ee:	2f 81       	ldd	r18, Y+7	; 0x07
 8f0:	38 85       	ldd	r19, Y+8	; 0x08
 8f2:	42 17       	cp	r20, r18
 8f4:	53 07       	cpc	r21, r19
 8f6:	0c f4       	brge	.+2      	; 0x8fa <snprintf+0x50>
 8f8:	9a 01       	movw	r18, r20
 8fa:	f8 01       	movw	r30, r16
 8fc:	e2 0f       	add	r30, r18
 8fe:	f3 1f       	adc	r31, r19
 900:	10 82       	st	Z, r1
 902:	2e 96       	adiw	r28, 0x0e	; 14
 904:	e4 e0       	ldi	r30, 0x04	; 4
 906:	0c 94 40 07 	jmp	0xe80	; 0xe80 <__epilogue_restores__+0x1c>

0000090a <vfprintf>:
 90a:	ab e0       	ldi	r26, 0x0B	; 11
 90c:	b0 e0       	ldi	r27, 0x00	; 0
 90e:	eb e8       	ldi	r30, 0x8B	; 139
 910:	f4 e0       	ldi	r31, 0x04	; 4
 912:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__prologue_saves__>
 916:	6c 01       	movw	r12, r24
 918:	7b 01       	movw	r14, r22
 91a:	8a 01       	movw	r16, r20
 91c:	fc 01       	movw	r30, r24
 91e:	17 82       	std	Z+7, r1	; 0x07
 920:	16 82       	std	Z+6, r1	; 0x06
 922:	83 81       	ldd	r24, Z+3	; 0x03
 924:	81 ff       	sbrs	r24, 1
 926:	cc c1       	rjmp	.+920    	; 0xcc0 <vfprintf+0x3b6>
 928:	ce 01       	movw	r24, r28
 92a:	01 96       	adiw	r24, 0x01	; 1
 92c:	3c 01       	movw	r6, r24
 92e:	f6 01       	movw	r30, r12
 930:	93 81       	ldd	r25, Z+3	; 0x03
 932:	f7 01       	movw	r30, r14
 934:	93 fd       	sbrc	r25, 3
 936:	85 91       	lpm	r24, Z+
 938:	93 ff       	sbrs	r25, 3
 93a:	81 91       	ld	r24, Z+
 93c:	7f 01       	movw	r14, r30
 93e:	88 23       	and	r24, r24
 940:	09 f4       	brne	.+2      	; 0x944 <vfprintf+0x3a>
 942:	ba c1       	rjmp	.+884    	; 0xcb8 <vfprintf+0x3ae>
 944:	85 32       	cpi	r24, 0x25	; 37
 946:	39 f4       	brne	.+14     	; 0x956 <vfprintf+0x4c>
 948:	93 fd       	sbrc	r25, 3
 94a:	85 91       	lpm	r24, Z+
 94c:	93 ff       	sbrs	r25, 3
 94e:	81 91       	ld	r24, Z+
 950:	7f 01       	movw	r14, r30
 952:	85 32       	cpi	r24, 0x25	; 37
 954:	29 f4       	brne	.+10     	; 0x960 <vfprintf+0x56>
 956:	b6 01       	movw	r22, r12
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <fputc>
 95e:	e7 cf       	rjmp	.-50     	; 0x92e <vfprintf+0x24>
 960:	91 2c       	mov	r9, r1
 962:	21 2c       	mov	r2, r1
 964:	31 2c       	mov	r3, r1
 966:	ff e1       	ldi	r31, 0x1F	; 31
 968:	f3 15       	cp	r31, r3
 96a:	d8 f0       	brcs	.+54     	; 0x9a2 <vfprintf+0x98>
 96c:	8b 32       	cpi	r24, 0x2B	; 43
 96e:	79 f0       	breq	.+30     	; 0x98e <vfprintf+0x84>
 970:	38 f4       	brcc	.+14     	; 0x980 <vfprintf+0x76>
 972:	80 32       	cpi	r24, 0x20	; 32
 974:	79 f0       	breq	.+30     	; 0x994 <vfprintf+0x8a>
 976:	83 32       	cpi	r24, 0x23	; 35
 978:	a1 f4       	brne	.+40     	; 0x9a2 <vfprintf+0x98>
 97a:	23 2d       	mov	r18, r3
 97c:	20 61       	ori	r18, 0x10	; 16
 97e:	1d c0       	rjmp	.+58     	; 0x9ba <vfprintf+0xb0>
 980:	8d 32       	cpi	r24, 0x2D	; 45
 982:	61 f0       	breq	.+24     	; 0x99c <vfprintf+0x92>
 984:	80 33       	cpi	r24, 0x30	; 48
 986:	69 f4       	brne	.+26     	; 0x9a2 <vfprintf+0x98>
 988:	23 2d       	mov	r18, r3
 98a:	21 60       	ori	r18, 0x01	; 1
 98c:	16 c0       	rjmp	.+44     	; 0x9ba <vfprintf+0xb0>
 98e:	83 2d       	mov	r24, r3
 990:	82 60       	ori	r24, 0x02	; 2
 992:	38 2e       	mov	r3, r24
 994:	e3 2d       	mov	r30, r3
 996:	e4 60       	ori	r30, 0x04	; 4
 998:	3e 2e       	mov	r3, r30
 99a:	2a c0       	rjmp	.+84     	; 0x9f0 <vfprintf+0xe6>
 99c:	f3 2d       	mov	r31, r3
 99e:	f8 60       	ori	r31, 0x08	; 8
 9a0:	1d c0       	rjmp	.+58     	; 0x9dc <vfprintf+0xd2>
 9a2:	37 fc       	sbrc	r3, 7
 9a4:	2d c0       	rjmp	.+90     	; 0xa00 <vfprintf+0xf6>
 9a6:	20 ed       	ldi	r18, 0xD0	; 208
 9a8:	28 0f       	add	r18, r24
 9aa:	2a 30       	cpi	r18, 0x0A	; 10
 9ac:	40 f0       	brcs	.+16     	; 0x9be <vfprintf+0xb4>
 9ae:	8e 32       	cpi	r24, 0x2E	; 46
 9b0:	b9 f4       	brne	.+46     	; 0x9e0 <vfprintf+0xd6>
 9b2:	36 fc       	sbrc	r3, 6
 9b4:	81 c1       	rjmp	.+770    	; 0xcb8 <vfprintf+0x3ae>
 9b6:	23 2d       	mov	r18, r3
 9b8:	20 64       	ori	r18, 0x40	; 64
 9ba:	32 2e       	mov	r3, r18
 9bc:	19 c0       	rjmp	.+50     	; 0x9f0 <vfprintf+0xe6>
 9be:	36 fe       	sbrs	r3, 6
 9c0:	06 c0       	rjmp	.+12     	; 0x9ce <vfprintf+0xc4>
 9c2:	8a e0       	ldi	r24, 0x0A	; 10
 9c4:	98 9e       	mul	r9, r24
 9c6:	20 0d       	add	r18, r0
 9c8:	11 24       	eor	r1, r1
 9ca:	92 2e       	mov	r9, r18
 9cc:	11 c0       	rjmp	.+34     	; 0x9f0 <vfprintf+0xe6>
 9ce:	ea e0       	ldi	r30, 0x0A	; 10
 9d0:	2e 9e       	mul	r2, r30
 9d2:	20 0d       	add	r18, r0
 9d4:	11 24       	eor	r1, r1
 9d6:	22 2e       	mov	r2, r18
 9d8:	f3 2d       	mov	r31, r3
 9da:	f0 62       	ori	r31, 0x20	; 32
 9dc:	3f 2e       	mov	r3, r31
 9de:	08 c0       	rjmp	.+16     	; 0x9f0 <vfprintf+0xe6>
 9e0:	8c 36       	cpi	r24, 0x6C	; 108
 9e2:	21 f4       	brne	.+8      	; 0x9ec <vfprintf+0xe2>
 9e4:	83 2d       	mov	r24, r3
 9e6:	80 68       	ori	r24, 0x80	; 128
 9e8:	38 2e       	mov	r3, r24
 9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <vfprintf+0xe6>
 9ec:	88 36       	cpi	r24, 0x68	; 104
 9ee:	41 f4       	brne	.+16     	; 0xa00 <vfprintf+0xf6>
 9f0:	f7 01       	movw	r30, r14
 9f2:	93 fd       	sbrc	r25, 3
 9f4:	85 91       	lpm	r24, Z+
 9f6:	93 ff       	sbrs	r25, 3
 9f8:	81 91       	ld	r24, Z+
 9fa:	7f 01       	movw	r14, r30
 9fc:	81 11       	cpse	r24, r1
 9fe:	b3 cf       	rjmp	.-154    	; 0x966 <vfprintf+0x5c>
 a00:	98 2f       	mov	r25, r24
 a02:	9f 7d       	andi	r25, 0xDF	; 223
 a04:	95 54       	subi	r25, 0x45	; 69
 a06:	93 30       	cpi	r25, 0x03	; 3
 a08:	28 f4       	brcc	.+10     	; 0xa14 <vfprintf+0x10a>
 a0a:	0c 5f       	subi	r16, 0xFC	; 252
 a0c:	1f 4f       	sbci	r17, 0xFF	; 255
 a0e:	9f e3       	ldi	r25, 0x3F	; 63
 a10:	99 83       	std	Y+1, r25	; 0x01
 a12:	0d c0       	rjmp	.+26     	; 0xa2e <vfprintf+0x124>
 a14:	83 36       	cpi	r24, 0x63	; 99
 a16:	31 f0       	breq	.+12     	; 0xa24 <vfprintf+0x11a>
 a18:	83 37       	cpi	r24, 0x73	; 115
 a1a:	71 f0       	breq	.+28     	; 0xa38 <vfprintf+0x12e>
 a1c:	83 35       	cpi	r24, 0x53	; 83
 a1e:	09 f0       	breq	.+2      	; 0xa22 <vfprintf+0x118>
 a20:	59 c0       	rjmp	.+178    	; 0xad4 <vfprintf+0x1ca>
 a22:	21 c0       	rjmp	.+66     	; 0xa66 <vfprintf+0x15c>
 a24:	f8 01       	movw	r30, r16
 a26:	80 81       	ld	r24, Z
 a28:	89 83       	std	Y+1, r24	; 0x01
 a2a:	0e 5f       	subi	r16, 0xFE	; 254
 a2c:	1f 4f       	sbci	r17, 0xFF	; 255
 a2e:	88 24       	eor	r8, r8
 a30:	83 94       	inc	r8
 a32:	91 2c       	mov	r9, r1
 a34:	53 01       	movw	r10, r6
 a36:	13 c0       	rjmp	.+38     	; 0xa5e <vfprintf+0x154>
 a38:	28 01       	movw	r4, r16
 a3a:	f2 e0       	ldi	r31, 0x02	; 2
 a3c:	4f 0e       	add	r4, r31
 a3e:	51 1c       	adc	r5, r1
 a40:	f8 01       	movw	r30, r16
 a42:	a0 80       	ld	r10, Z
 a44:	b1 80       	ldd	r11, Z+1	; 0x01
 a46:	36 fe       	sbrs	r3, 6
 a48:	03 c0       	rjmp	.+6      	; 0xa50 <vfprintf+0x146>
 a4a:	69 2d       	mov	r22, r9
 a4c:	70 e0       	ldi	r23, 0x00	; 0
 a4e:	02 c0       	rjmp	.+4      	; 0xa54 <vfprintf+0x14a>
 a50:	6f ef       	ldi	r22, 0xFF	; 255
 a52:	7f ef       	ldi	r23, 0xFF	; 255
 a54:	c5 01       	movw	r24, r10
 a56:	0e 94 71 06 	call	0xce2	; 0xce2 <strnlen>
 a5a:	4c 01       	movw	r8, r24
 a5c:	82 01       	movw	r16, r4
 a5e:	f3 2d       	mov	r31, r3
 a60:	ff 77       	andi	r31, 0x7F	; 127
 a62:	3f 2e       	mov	r3, r31
 a64:	16 c0       	rjmp	.+44     	; 0xa92 <vfprintf+0x188>
 a66:	28 01       	movw	r4, r16
 a68:	22 e0       	ldi	r18, 0x02	; 2
 a6a:	42 0e       	add	r4, r18
 a6c:	51 1c       	adc	r5, r1
 a6e:	f8 01       	movw	r30, r16
 a70:	a0 80       	ld	r10, Z
 a72:	b1 80       	ldd	r11, Z+1	; 0x01
 a74:	36 fe       	sbrs	r3, 6
 a76:	03 c0       	rjmp	.+6      	; 0xa7e <vfprintf+0x174>
 a78:	69 2d       	mov	r22, r9
 a7a:	70 e0       	ldi	r23, 0x00	; 0
 a7c:	02 c0       	rjmp	.+4      	; 0xa82 <vfprintf+0x178>
 a7e:	6f ef       	ldi	r22, 0xFF	; 255
 a80:	7f ef       	ldi	r23, 0xFF	; 255
 a82:	c5 01       	movw	r24, r10
 a84:	0e 94 66 06 	call	0xccc	; 0xccc <strnlen_P>
 a88:	4c 01       	movw	r8, r24
 a8a:	f3 2d       	mov	r31, r3
 a8c:	f0 68       	ori	r31, 0x80	; 128
 a8e:	3f 2e       	mov	r3, r31
 a90:	82 01       	movw	r16, r4
 a92:	33 fc       	sbrc	r3, 3
 a94:	1b c0       	rjmp	.+54     	; 0xacc <vfprintf+0x1c2>
 a96:	82 2d       	mov	r24, r2
 a98:	90 e0       	ldi	r25, 0x00	; 0
 a9a:	88 16       	cp	r8, r24
 a9c:	99 06       	cpc	r9, r25
 a9e:	b0 f4       	brcc	.+44     	; 0xacc <vfprintf+0x1c2>
 aa0:	b6 01       	movw	r22, r12
 aa2:	80 e2       	ldi	r24, 0x20	; 32
 aa4:	90 e0       	ldi	r25, 0x00	; 0
 aa6:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <fputc>
 aaa:	2a 94       	dec	r2
 aac:	f4 cf       	rjmp	.-24     	; 0xa96 <vfprintf+0x18c>
 aae:	f5 01       	movw	r30, r10
 ab0:	37 fc       	sbrc	r3, 7
 ab2:	85 91       	lpm	r24, Z+
 ab4:	37 fe       	sbrs	r3, 7
 ab6:	81 91       	ld	r24, Z+
 ab8:	5f 01       	movw	r10, r30
 aba:	b6 01       	movw	r22, r12
 abc:	90 e0       	ldi	r25, 0x00	; 0
 abe:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <fputc>
 ac2:	21 10       	cpse	r2, r1
 ac4:	2a 94       	dec	r2
 ac6:	21 e0       	ldi	r18, 0x01	; 1
 ac8:	82 1a       	sub	r8, r18
 aca:	91 08       	sbc	r9, r1
 acc:	81 14       	cp	r8, r1
 ace:	91 04       	cpc	r9, r1
 ad0:	71 f7       	brne	.-36     	; 0xaae <vfprintf+0x1a4>
 ad2:	e8 c0       	rjmp	.+464    	; 0xca4 <vfprintf+0x39a>
 ad4:	84 36       	cpi	r24, 0x64	; 100
 ad6:	11 f0       	breq	.+4      	; 0xadc <vfprintf+0x1d2>
 ad8:	89 36       	cpi	r24, 0x69	; 105
 ada:	41 f5       	brne	.+80     	; 0xb2c <vfprintf+0x222>
 adc:	f8 01       	movw	r30, r16
 ade:	37 fe       	sbrs	r3, 7
 ae0:	07 c0       	rjmp	.+14     	; 0xaf0 <vfprintf+0x1e6>
 ae2:	60 81       	ld	r22, Z
 ae4:	71 81       	ldd	r23, Z+1	; 0x01
 ae6:	82 81       	ldd	r24, Z+2	; 0x02
 ae8:	93 81       	ldd	r25, Z+3	; 0x03
 aea:	0c 5f       	subi	r16, 0xFC	; 252
 aec:	1f 4f       	sbci	r17, 0xFF	; 255
 aee:	08 c0       	rjmp	.+16     	; 0xb00 <vfprintf+0x1f6>
 af0:	60 81       	ld	r22, Z
 af2:	71 81       	ldd	r23, Z+1	; 0x01
 af4:	07 2e       	mov	r0, r23
 af6:	00 0c       	add	r0, r0
 af8:	88 0b       	sbc	r24, r24
 afa:	99 0b       	sbc	r25, r25
 afc:	0e 5f       	subi	r16, 0xFE	; 254
 afe:	1f 4f       	sbci	r17, 0xFF	; 255
 b00:	f3 2d       	mov	r31, r3
 b02:	ff 76       	andi	r31, 0x6F	; 111
 b04:	3f 2e       	mov	r3, r31
 b06:	97 ff       	sbrs	r25, 7
 b08:	09 c0       	rjmp	.+18     	; 0xb1c <vfprintf+0x212>
 b0a:	90 95       	com	r25
 b0c:	80 95       	com	r24
 b0e:	70 95       	com	r23
 b10:	61 95       	neg	r22
 b12:	7f 4f       	sbci	r23, 0xFF	; 255
 b14:	8f 4f       	sbci	r24, 0xFF	; 255
 b16:	9f 4f       	sbci	r25, 0xFF	; 255
 b18:	f0 68       	ori	r31, 0x80	; 128
 b1a:	3f 2e       	mov	r3, r31
 b1c:	2a e0       	ldi	r18, 0x0A	; 10
 b1e:	30 e0       	ldi	r19, 0x00	; 0
 b20:	a3 01       	movw	r20, r6
 b22:	0e 94 b8 06 	call	0xd70	; 0xd70 <__ultoa_invert>
 b26:	88 2e       	mov	r8, r24
 b28:	86 18       	sub	r8, r6
 b2a:	45 c0       	rjmp	.+138    	; 0xbb6 <vfprintf+0x2ac>
 b2c:	85 37       	cpi	r24, 0x75	; 117
 b2e:	31 f4       	brne	.+12     	; 0xb3c <vfprintf+0x232>
 b30:	23 2d       	mov	r18, r3
 b32:	2f 7e       	andi	r18, 0xEF	; 239
 b34:	b2 2e       	mov	r11, r18
 b36:	2a e0       	ldi	r18, 0x0A	; 10
 b38:	30 e0       	ldi	r19, 0x00	; 0
 b3a:	25 c0       	rjmp	.+74     	; 0xb86 <vfprintf+0x27c>
 b3c:	93 2d       	mov	r25, r3
 b3e:	99 7f       	andi	r25, 0xF9	; 249
 b40:	b9 2e       	mov	r11, r25
 b42:	8f 36       	cpi	r24, 0x6F	; 111
 b44:	c1 f0       	breq	.+48     	; 0xb76 <vfprintf+0x26c>
 b46:	18 f4       	brcc	.+6      	; 0xb4e <vfprintf+0x244>
 b48:	88 35       	cpi	r24, 0x58	; 88
 b4a:	79 f0       	breq	.+30     	; 0xb6a <vfprintf+0x260>
 b4c:	b5 c0       	rjmp	.+362    	; 0xcb8 <vfprintf+0x3ae>
 b4e:	80 37       	cpi	r24, 0x70	; 112
 b50:	19 f0       	breq	.+6      	; 0xb58 <vfprintf+0x24e>
 b52:	88 37       	cpi	r24, 0x78	; 120
 b54:	21 f0       	breq	.+8      	; 0xb5e <vfprintf+0x254>
 b56:	b0 c0       	rjmp	.+352    	; 0xcb8 <vfprintf+0x3ae>
 b58:	e9 2f       	mov	r30, r25
 b5a:	e0 61       	ori	r30, 0x10	; 16
 b5c:	be 2e       	mov	r11, r30
 b5e:	b4 fe       	sbrs	r11, 4
 b60:	0d c0       	rjmp	.+26     	; 0xb7c <vfprintf+0x272>
 b62:	fb 2d       	mov	r31, r11
 b64:	f4 60       	ori	r31, 0x04	; 4
 b66:	bf 2e       	mov	r11, r31
 b68:	09 c0       	rjmp	.+18     	; 0xb7c <vfprintf+0x272>
 b6a:	34 fe       	sbrs	r3, 4
 b6c:	0a c0       	rjmp	.+20     	; 0xb82 <vfprintf+0x278>
 b6e:	29 2f       	mov	r18, r25
 b70:	26 60       	ori	r18, 0x06	; 6
 b72:	b2 2e       	mov	r11, r18
 b74:	06 c0       	rjmp	.+12     	; 0xb82 <vfprintf+0x278>
 b76:	28 e0       	ldi	r18, 0x08	; 8
 b78:	30 e0       	ldi	r19, 0x00	; 0
 b7a:	05 c0       	rjmp	.+10     	; 0xb86 <vfprintf+0x27c>
 b7c:	20 e1       	ldi	r18, 0x10	; 16
 b7e:	30 e0       	ldi	r19, 0x00	; 0
 b80:	02 c0       	rjmp	.+4      	; 0xb86 <vfprintf+0x27c>
 b82:	20 e1       	ldi	r18, 0x10	; 16
 b84:	32 e0       	ldi	r19, 0x02	; 2
 b86:	f8 01       	movw	r30, r16
 b88:	b7 fe       	sbrs	r11, 7
 b8a:	07 c0       	rjmp	.+14     	; 0xb9a <vfprintf+0x290>
 b8c:	60 81       	ld	r22, Z
 b8e:	71 81       	ldd	r23, Z+1	; 0x01
 b90:	82 81       	ldd	r24, Z+2	; 0x02
 b92:	93 81       	ldd	r25, Z+3	; 0x03
 b94:	0c 5f       	subi	r16, 0xFC	; 252
 b96:	1f 4f       	sbci	r17, 0xFF	; 255
 b98:	06 c0       	rjmp	.+12     	; 0xba6 <vfprintf+0x29c>
 b9a:	60 81       	ld	r22, Z
 b9c:	71 81       	ldd	r23, Z+1	; 0x01
 b9e:	80 e0       	ldi	r24, 0x00	; 0
 ba0:	90 e0       	ldi	r25, 0x00	; 0
 ba2:	0e 5f       	subi	r16, 0xFE	; 254
 ba4:	1f 4f       	sbci	r17, 0xFF	; 255
 ba6:	a3 01       	movw	r20, r6
 ba8:	0e 94 b8 06 	call	0xd70	; 0xd70 <__ultoa_invert>
 bac:	88 2e       	mov	r8, r24
 bae:	86 18       	sub	r8, r6
 bb0:	fb 2d       	mov	r31, r11
 bb2:	ff 77       	andi	r31, 0x7F	; 127
 bb4:	3f 2e       	mov	r3, r31
 bb6:	36 fe       	sbrs	r3, 6
 bb8:	0d c0       	rjmp	.+26     	; 0xbd4 <vfprintf+0x2ca>
 bba:	23 2d       	mov	r18, r3
 bbc:	2e 7f       	andi	r18, 0xFE	; 254
 bbe:	a2 2e       	mov	r10, r18
 bc0:	89 14       	cp	r8, r9
 bc2:	58 f4       	brcc	.+22     	; 0xbda <vfprintf+0x2d0>
 bc4:	34 fe       	sbrs	r3, 4
 bc6:	0b c0       	rjmp	.+22     	; 0xbde <vfprintf+0x2d4>
 bc8:	32 fc       	sbrc	r3, 2
 bca:	09 c0       	rjmp	.+18     	; 0xbde <vfprintf+0x2d4>
 bcc:	83 2d       	mov	r24, r3
 bce:	8e 7e       	andi	r24, 0xEE	; 238
 bd0:	a8 2e       	mov	r10, r24
 bd2:	05 c0       	rjmp	.+10     	; 0xbde <vfprintf+0x2d4>
 bd4:	b8 2c       	mov	r11, r8
 bd6:	a3 2c       	mov	r10, r3
 bd8:	03 c0       	rjmp	.+6      	; 0xbe0 <vfprintf+0x2d6>
 bda:	b8 2c       	mov	r11, r8
 bdc:	01 c0       	rjmp	.+2      	; 0xbe0 <vfprintf+0x2d6>
 bde:	b9 2c       	mov	r11, r9
 be0:	a4 fe       	sbrs	r10, 4
 be2:	0f c0       	rjmp	.+30     	; 0xc02 <vfprintf+0x2f8>
 be4:	fe 01       	movw	r30, r28
 be6:	e8 0d       	add	r30, r8
 be8:	f1 1d       	adc	r31, r1
 bea:	80 81       	ld	r24, Z
 bec:	80 33       	cpi	r24, 0x30	; 48
 bee:	21 f4       	brne	.+8      	; 0xbf8 <vfprintf+0x2ee>
 bf0:	9a 2d       	mov	r25, r10
 bf2:	99 7e       	andi	r25, 0xE9	; 233
 bf4:	a9 2e       	mov	r10, r25
 bf6:	09 c0       	rjmp	.+18     	; 0xc0a <vfprintf+0x300>
 bf8:	a2 fe       	sbrs	r10, 2
 bfa:	06 c0       	rjmp	.+12     	; 0xc08 <vfprintf+0x2fe>
 bfc:	b3 94       	inc	r11
 bfe:	b3 94       	inc	r11
 c00:	04 c0       	rjmp	.+8      	; 0xc0a <vfprintf+0x300>
 c02:	8a 2d       	mov	r24, r10
 c04:	86 78       	andi	r24, 0x86	; 134
 c06:	09 f0       	breq	.+2      	; 0xc0a <vfprintf+0x300>
 c08:	b3 94       	inc	r11
 c0a:	a3 fc       	sbrc	r10, 3
 c0c:	11 c0       	rjmp	.+34     	; 0xc30 <vfprintf+0x326>
 c0e:	a0 fe       	sbrs	r10, 0
 c10:	06 c0       	rjmp	.+12     	; 0xc1e <vfprintf+0x314>
 c12:	b2 14       	cp	r11, r2
 c14:	88 f4       	brcc	.+34     	; 0xc38 <vfprintf+0x32e>
 c16:	28 0c       	add	r2, r8
 c18:	92 2c       	mov	r9, r2
 c1a:	9b 18       	sub	r9, r11
 c1c:	0e c0       	rjmp	.+28     	; 0xc3a <vfprintf+0x330>
 c1e:	b2 14       	cp	r11, r2
 c20:	60 f4       	brcc	.+24     	; 0xc3a <vfprintf+0x330>
 c22:	b6 01       	movw	r22, r12
 c24:	80 e2       	ldi	r24, 0x20	; 32
 c26:	90 e0       	ldi	r25, 0x00	; 0
 c28:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <fputc>
 c2c:	b3 94       	inc	r11
 c2e:	f7 cf       	rjmp	.-18     	; 0xc1e <vfprintf+0x314>
 c30:	b2 14       	cp	r11, r2
 c32:	18 f4       	brcc	.+6      	; 0xc3a <vfprintf+0x330>
 c34:	2b 18       	sub	r2, r11
 c36:	02 c0       	rjmp	.+4      	; 0xc3c <vfprintf+0x332>
 c38:	98 2c       	mov	r9, r8
 c3a:	21 2c       	mov	r2, r1
 c3c:	a4 fe       	sbrs	r10, 4
 c3e:	10 c0       	rjmp	.+32     	; 0xc60 <vfprintf+0x356>
 c40:	b6 01       	movw	r22, r12
 c42:	80 e3       	ldi	r24, 0x30	; 48
 c44:	90 e0       	ldi	r25, 0x00	; 0
 c46:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <fputc>
 c4a:	a2 fe       	sbrs	r10, 2
 c4c:	17 c0       	rjmp	.+46     	; 0xc7c <vfprintf+0x372>
 c4e:	a1 fc       	sbrc	r10, 1
 c50:	03 c0       	rjmp	.+6      	; 0xc58 <vfprintf+0x34e>
 c52:	88 e7       	ldi	r24, 0x78	; 120
 c54:	90 e0       	ldi	r25, 0x00	; 0
 c56:	02 c0       	rjmp	.+4      	; 0xc5c <vfprintf+0x352>
 c58:	88 e5       	ldi	r24, 0x58	; 88
 c5a:	90 e0       	ldi	r25, 0x00	; 0
 c5c:	b6 01       	movw	r22, r12
 c5e:	0c c0       	rjmp	.+24     	; 0xc78 <vfprintf+0x36e>
 c60:	8a 2d       	mov	r24, r10
 c62:	86 78       	andi	r24, 0x86	; 134
 c64:	59 f0       	breq	.+22     	; 0xc7c <vfprintf+0x372>
 c66:	a1 fe       	sbrs	r10, 1
 c68:	02 c0       	rjmp	.+4      	; 0xc6e <vfprintf+0x364>
 c6a:	8b e2       	ldi	r24, 0x2B	; 43
 c6c:	01 c0       	rjmp	.+2      	; 0xc70 <vfprintf+0x366>
 c6e:	80 e2       	ldi	r24, 0x20	; 32
 c70:	a7 fc       	sbrc	r10, 7
 c72:	8d e2       	ldi	r24, 0x2D	; 45
 c74:	b6 01       	movw	r22, r12
 c76:	90 e0       	ldi	r25, 0x00	; 0
 c78:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <fputc>
 c7c:	89 14       	cp	r8, r9
 c7e:	38 f4       	brcc	.+14     	; 0xc8e <vfprintf+0x384>
 c80:	b6 01       	movw	r22, r12
 c82:	80 e3       	ldi	r24, 0x30	; 48
 c84:	90 e0       	ldi	r25, 0x00	; 0
 c86:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <fputc>
 c8a:	9a 94       	dec	r9
 c8c:	f7 cf       	rjmp	.-18     	; 0xc7c <vfprintf+0x372>
 c8e:	8a 94       	dec	r8
 c90:	f3 01       	movw	r30, r6
 c92:	e8 0d       	add	r30, r8
 c94:	f1 1d       	adc	r31, r1
 c96:	80 81       	ld	r24, Z
 c98:	b6 01       	movw	r22, r12
 c9a:	90 e0       	ldi	r25, 0x00	; 0
 c9c:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <fputc>
 ca0:	81 10       	cpse	r8, r1
 ca2:	f5 cf       	rjmp	.-22     	; 0xc8e <vfprintf+0x384>
 ca4:	22 20       	and	r2, r2
 ca6:	09 f4       	brne	.+2      	; 0xcaa <vfprintf+0x3a0>
 ca8:	42 ce       	rjmp	.-892    	; 0x92e <vfprintf+0x24>
 caa:	b6 01       	movw	r22, r12
 cac:	80 e2       	ldi	r24, 0x20	; 32
 cae:	90 e0       	ldi	r25, 0x00	; 0
 cb0:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <fputc>
 cb4:	2a 94       	dec	r2
 cb6:	f6 cf       	rjmp	.-20     	; 0xca4 <vfprintf+0x39a>
 cb8:	f6 01       	movw	r30, r12
 cba:	86 81       	ldd	r24, Z+6	; 0x06
 cbc:	97 81       	ldd	r25, Z+7	; 0x07
 cbe:	02 c0       	rjmp	.+4      	; 0xcc4 <vfprintf+0x3ba>
 cc0:	8f ef       	ldi	r24, 0xFF	; 255
 cc2:	9f ef       	ldi	r25, 0xFF	; 255
 cc4:	2b 96       	adiw	r28, 0x0b	; 11
 cc6:	e2 e1       	ldi	r30, 0x12	; 18
 cc8:	0c 94 32 07 	jmp	0xe64	; 0xe64 <__epilogue_restores__>

00000ccc <strnlen_P>:
 ccc:	fc 01       	movw	r30, r24
 cce:	05 90       	lpm	r0, Z+
 cd0:	61 50       	subi	r22, 0x01	; 1
 cd2:	70 40       	sbci	r23, 0x00	; 0
 cd4:	01 10       	cpse	r0, r1
 cd6:	d8 f7       	brcc	.-10     	; 0xcce <strnlen_P+0x2>
 cd8:	80 95       	com	r24
 cda:	90 95       	com	r25
 cdc:	8e 0f       	add	r24, r30
 cde:	9f 1f       	adc	r25, r31
 ce0:	08 95       	ret

00000ce2 <strnlen>:
 ce2:	fc 01       	movw	r30, r24
 ce4:	61 50       	subi	r22, 0x01	; 1
 ce6:	70 40       	sbci	r23, 0x00	; 0
 ce8:	01 90       	ld	r0, Z+
 cea:	01 10       	cpse	r0, r1
 cec:	d8 f7       	brcc	.-10     	; 0xce4 <strnlen+0x2>
 cee:	80 95       	com	r24
 cf0:	90 95       	com	r25
 cf2:	8e 0f       	add	r24, r30
 cf4:	9f 1f       	adc	r25, r31
 cf6:	08 95       	ret

00000cf8 <fputc>:
 cf8:	0f 93       	push	r16
 cfa:	1f 93       	push	r17
 cfc:	cf 93       	push	r28
 cfe:	df 93       	push	r29
 d00:	fb 01       	movw	r30, r22
 d02:	23 81       	ldd	r18, Z+3	; 0x03
 d04:	21 fd       	sbrc	r18, 1
 d06:	03 c0       	rjmp	.+6      	; 0xd0e <fputc+0x16>
 d08:	8f ef       	ldi	r24, 0xFF	; 255
 d0a:	9f ef       	ldi	r25, 0xFF	; 255
 d0c:	2c c0       	rjmp	.+88     	; 0xd66 <fputc+0x6e>
 d0e:	22 ff       	sbrs	r18, 2
 d10:	16 c0       	rjmp	.+44     	; 0xd3e <fputc+0x46>
 d12:	46 81       	ldd	r20, Z+6	; 0x06
 d14:	57 81       	ldd	r21, Z+7	; 0x07
 d16:	24 81       	ldd	r18, Z+4	; 0x04
 d18:	35 81       	ldd	r19, Z+5	; 0x05
 d1a:	42 17       	cp	r20, r18
 d1c:	53 07       	cpc	r21, r19
 d1e:	44 f4       	brge	.+16     	; 0xd30 <fputc+0x38>
 d20:	a0 81       	ld	r26, Z
 d22:	b1 81       	ldd	r27, Z+1	; 0x01
 d24:	9d 01       	movw	r18, r26
 d26:	2f 5f       	subi	r18, 0xFF	; 255
 d28:	3f 4f       	sbci	r19, 0xFF	; 255
 d2a:	31 83       	std	Z+1, r19	; 0x01
 d2c:	20 83       	st	Z, r18
 d2e:	8c 93       	st	X, r24
 d30:	26 81       	ldd	r18, Z+6	; 0x06
 d32:	37 81       	ldd	r19, Z+7	; 0x07
 d34:	2f 5f       	subi	r18, 0xFF	; 255
 d36:	3f 4f       	sbci	r19, 0xFF	; 255
 d38:	37 83       	std	Z+7, r19	; 0x07
 d3a:	26 83       	std	Z+6, r18	; 0x06
 d3c:	14 c0       	rjmp	.+40     	; 0xd66 <fputc+0x6e>
 d3e:	8b 01       	movw	r16, r22
 d40:	ec 01       	movw	r28, r24
 d42:	fb 01       	movw	r30, r22
 d44:	00 84       	ldd	r0, Z+8	; 0x08
 d46:	f1 85       	ldd	r31, Z+9	; 0x09
 d48:	e0 2d       	mov	r30, r0
 d4a:	09 95       	icall
 d4c:	89 2b       	or	r24, r25
 d4e:	e1 f6       	brne	.-72     	; 0xd08 <fputc+0x10>
 d50:	d8 01       	movw	r26, r16
 d52:	16 96       	adiw	r26, 0x06	; 6
 d54:	8d 91       	ld	r24, X+
 d56:	9c 91       	ld	r25, X
 d58:	17 97       	sbiw	r26, 0x07	; 7
 d5a:	01 96       	adiw	r24, 0x01	; 1
 d5c:	17 96       	adiw	r26, 0x07	; 7
 d5e:	9c 93       	st	X, r25
 d60:	8e 93       	st	-X, r24
 d62:	16 97       	sbiw	r26, 0x06	; 6
 d64:	ce 01       	movw	r24, r28
 d66:	df 91       	pop	r29
 d68:	cf 91       	pop	r28
 d6a:	1f 91       	pop	r17
 d6c:	0f 91       	pop	r16
 d6e:	08 95       	ret

00000d70 <__ultoa_invert>:
 d70:	fa 01       	movw	r30, r20
 d72:	aa 27       	eor	r26, r26
 d74:	28 30       	cpi	r18, 0x08	; 8
 d76:	51 f1       	breq	.+84     	; 0xdcc <__ultoa_invert+0x5c>
 d78:	20 31       	cpi	r18, 0x10	; 16
 d7a:	81 f1       	breq	.+96     	; 0xddc <__ultoa_invert+0x6c>
 d7c:	e8 94       	clt
 d7e:	6f 93       	push	r22
 d80:	6e 7f       	andi	r22, 0xFE	; 254
 d82:	6e 5f       	subi	r22, 0xFE	; 254
 d84:	7f 4f       	sbci	r23, 0xFF	; 255
 d86:	8f 4f       	sbci	r24, 0xFF	; 255
 d88:	9f 4f       	sbci	r25, 0xFF	; 255
 d8a:	af 4f       	sbci	r26, 0xFF	; 255
 d8c:	b1 e0       	ldi	r27, 0x01	; 1
 d8e:	3e d0       	rcall	.+124    	; 0xe0c <__ultoa_invert+0x9c>
 d90:	b4 e0       	ldi	r27, 0x04	; 4
 d92:	3c d0       	rcall	.+120    	; 0xe0c <__ultoa_invert+0x9c>
 d94:	67 0f       	add	r22, r23
 d96:	78 1f       	adc	r23, r24
 d98:	89 1f       	adc	r24, r25
 d9a:	9a 1f       	adc	r25, r26
 d9c:	a1 1d       	adc	r26, r1
 d9e:	68 0f       	add	r22, r24
 da0:	79 1f       	adc	r23, r25
 da2:	8a 1f       	adc	r24, r26
 da4:	91 1d       	adc	r25, r1
 da6:	a1 1d       	adc	r26, r1
 da8:	6a 0f       	add	r22, r26
 daa:	71 1d       	adc	r23, r1
 dac:	81 1d       	adc	r24, r1
 dae:	91 1d       	adc	r25, r1
 db0:	a1 1d       	adc	r26, r1
 db2:	20 d0       	rcall	.+64     	; 0xdf4 <__ultoa_invert+0x84>
 db4:	09 f4       	brne	.+2      	; 0xdb8 <__ultoa_invert+0x48>
 db6:	68 94       	set
 db8:	3f 91       	pop	r19
 dba:	2a e0       	ldi	r18, 0x0A	; 10
 dbc:	26 9f       	mul	r18, r22
 dbe:	11 24       	eor	r1, r1
 dc0:	30 19       	sub	r19, r0
 dc2:	30 5d       	subi	r19, 0xD0	; 208
 dc4:	31 93       	st	Z+, r19
 dc6:	de f6       	brtc	.-74     	; 0xd7e <__ultoa_invert+0xe>
 dc8:	cf 01       	movw	r24, r30
 dca:	08 95       	ret
 dcc:	46 2f       	mov	r20, r22
 dce:	47 70       	andi	r20, 0x07	; 7
 dd0:	40 5d       	subi	r20, 0xD0	; 208
 dd2:	41 93       	st	Z+, r20
 dd4:	b3 e0       	ldi	r27, 0x03	; 3
 dd6:	0f d0       	rcall	.+30     	; 0xdf6 <__ultoa_invert+0x86>
 dd8:	c9 f7       	brne	.-14     	; 0xdcc <__ultoa_invert+0x5c>
 dda:	f6 cf       	rjmp	.-20     	; 0xdc8 <__ultoa_invert+0x58>
 ddc:	46 2f       	mov	r20, r22
 dde:	4f 70       	andi	r20, 0x0F	; 15
 de0:	40 5d       	subi	r20, 0xD0	; 208
 de2:	4a 33       	cpi	r20, 0x3A	; 58
 de4:	18 f0       	brcs	.+6      	; 0xdec <__ultoa_invert+0x7c>
 de6:	49 5d       	subi	r20, 0xD9	; 217
 de8:	31 fd       	sbrc	r19, 1
 dea:	40 52       	subi	r20, 0x20	; 32
 dec:	41 93       	st	Z+, r20
 dee:	02 d0       	rcall	.+4      	; 0xdf4 <__ultoa_invert+0x84>
 df0:	a9 f7       	brne	.-22     	; 0xddc <__ultoa_invert+0x6c>
 df2:	ea cf       	rjmp	.-44     	; 0xdc8 <__ultoa_invert+0x58>
 df4:	b4 e0       	ldi	r27, 0x04	; 4
 df6:	a6 95       	lsr	r26
 df8:	97 95       	ror	r25
 dfa:	87 95       	ror	r24
 dfc:	77 95       	ror	r23
 dfe:	67 95       	ror	r22
 e00:	ba 95       	dec	r27
 e02:	c9 f7       	brne	.-14     	; 0xdf6 <__ultoa_invert+0x86>
 e04:	00 97       	sbiw	r24, 0x00	; 0
 e06:	61 05       	cpc	r22, r1
 e08:	71 05       	cpc	r23, r1
 e0a:	08 95       	ret
 e0c:	9b 01       	movw	r18, r22
 e0e:	ac 01       	movw	r20, r24
 e10:	0a 2e       	mov	r0, r26
 e12:	06 94       	lsr	r0
 e14:	57 95       	ror	r21
 e16:	47 95       	ror	r20
 e18:	37 95       	ror	r19
 e1a:	27 95       	ror	r18
 e1c:	ba 95       	dec	r27
 e1e:	c9 f7       	brne	.-14     	; 0xe12 <__ultoa_invert+0xa2>
 e20:	62 0f       	add	r22, r18
 e22:	73 1f       	adc	r23, r19
 e24:	84 1f       	adc	r24, r20
 e26:	95 1f       	adc	r25, r21
 e28:	a0 1d       	adc	r26, r0
 e2a:	08 95       	ret

00000e2c <__prologue_saves__>:
 e2c:	2f 92       	push	r2
 e2e:	3f 92       	push	r3
 e30:	4f 92       	push	r4
 e32:	5f 92       	push	r5
 e34:	6f 92       	push	r6
 e36:	7f 92       	push	r7
 e38:	8f 92       	push	r8
 e3a:	9f 92       	push	r9
 e3c:	af 92       	push	r10
 e3e:	bf 92       	push	r11
 e40:	cf 92       	push	r12
 e42:	df 92       	push	r13
 e44:	ef 92       	push	r14
 e46:	ff 92       	push	r15
 e48:	0f 93       	push	r16
 e4a:	1f 93       	push	r17
 e4c:	cf 93       	push	r28
 e4e:	df 93       	push	r29
 e50:	cd b7       	in	r28, 0x3d	; 61
 e52:	de b7       	in	r29, 0x3e	; 62
 e54:	ca 1b       	sub	r28, r26
 e56:	db 0b       	sbc	r29, r27
 e58:	0f b6       	in	r0, 0x3f	; 63
 e5a:	f8 94       	cli
 e5c:	de bf       	out	0x3e, r29	; 62
 e5e:	0f be       	out	0x3f, r0	; 63
 e60:	cd bf       	out	0x3d, r28	; 61
 e62:	09 94       	ijmp

00000e64 <__epilogue_restores__>:
 e64:	2a 88       	ldd	r2, Y+18	; 0x12
 e66:	39 88       	ldd	r3, Y+17	; 0x11
 e68:	48 88       	ldd	r4, Y+16	; 0x10
 e6a:	5f 84       	ldd	r5, Y+15	; 0x0f
 e6c:	6e 84       	ldd	r6, Y+14	; 0x0e
 e6e:	7d 84       	ldd	r7, Y+13	; 0x0d
 e70:	8c 84       	ldd	r8, Y+12	; 0x0c
 e72:	9b 84       	ldd	r9, Y+11	; 0x0b
 e74:	aa 84       	ldd	r10, Y+10	; 0x0a
 e76:	b9 84       	ldd	r11, Y+9	; 0x09
 e78:	c8 84       	ldd	r12, Y+8	; 0x08
 e7a:	df 80       	ldd	r13, Y+7	; 0x07
 e7c:	ee 80       	ldd	r14, Y+6	; 0x06
 e7e:	fd 80       	ldd	r15, Y+5	; 0x05
 e80:	0c 81       	ldd	r16, Y+4	; 0x04
 e82:	1b 81       	ldd	r17, Y+3	; 0x03
 e84:	aa 81       	ldd	r26, Y+2	; 0x02
 e86:	b9 81       	ldd	r27, Y+1	; 0x01
 e88:	ce 0f       	add	r28, r30
 e8a:	d1 1d       	adc	r29, r1
 e8c:	0f b6       	in	r0, 0x3f	; 63
 e8e:	f8 94       	cli
 e90:	de bf       	out	0x3e, r29	; 62
 e92:	0f be       	out	0x3f, r0	; 63
 e94:	cd bf       	out	0x3d, r28	; 61
 e96:	ed 01       	movw	r28, r26
 e98:	08 95       	ret

00000e9a <_exit>:
 e9a:	f8 94       	cli

00000e9c <__stop_program>:
 e9c:	ff cf       	rjmp	.-2      	; 0xe9c <__stop_program>
