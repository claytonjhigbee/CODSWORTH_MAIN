
SerialADCESP01PrinterV2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d0  00800100  000009e0  00000a74  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000103  008001d0  008001d0  00000b44  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b44  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ba0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000be0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ef9  00000000  00000000  00000c38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a7d  00000000  00000000  00001b31  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004da  00000000  00000000  000025ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  00002a88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000057e  00000000  00000000  00002b80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000457  00000000  00000000  000030fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00003555  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__vector_13>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e0 ee       	ldi	r30, 0xE0	; 224
  c8:	f9 e0       	ldi	r31, 0x09	; 9
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a0 3d       	cpi	r26, 0xD0	; 208
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	22 e0       	ldi	r18, 0x02	; 2
  d8:	a0 ed       	ldi	r26, 0xD0	; 208
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a3 3d       	cpi	r26, 0xD3	; 211
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 d5 00 	call	0x1aa	; 0x1aa <main>
  ea:	0c 94 ee 04 	jmp	0x9dc	; 0x9dc <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <adc_init>:


void adc_init(void) //initialize ADC
{
	
	ADMUX = (0<<REFS1)| // Reference Selection Bits
  f2:	82 e4       	ldi	r24, 0x42	; 66
  f4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(0<<ADLAR)| // ADC Left Adjust Result
	(0<<MUX2)| // ANalog Channel Selection Bits
	(1<<MUX1)| // ADC2 (PC2 PIN25)
	(0<<MUX0);

	ADCSRA = (1<<ADEN)| // ADC ENable
  f8:	85 e8       	ldi	r24, 0x85	; 133
  fa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	(0<<ADPS1)|
	(1<<ADPS0);

	// Timer/Counter1 Interrupt Mask Register

	TIMSK1 |= (1<<TOIE1); // enable overflow interrupt
  fe:	ef e6       	ldi	r30, 0x6F	; 111
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	81 60       	ori	r24, 0x01	; 1
 106:	80 83       	st	Z, r24
	TCCR1B |= (1<<CS12)|(1<<CS10); // native clock
 108:	e1 e8       	ldi	r30, 0x81	; 129
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	85 60       	ori	r24, 0x05	; 5
 110:	80 83       	st	Z, r24
	TCNT1 = 49911; //((16MHz/1024)*1)-1 = 15624
 112:	87 ef       	ldi	r24, 0xF7	; 247
 114:	92 ec       	ldi	r25, 0xC2	; 194
 116:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 11a:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 11e:	08 95       	ret

00000120 <read_adc>:
}


void read_adc(void) {
	unsigned char i =4;
	adc_temp = 0; //initialize
 120:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <adc_temp+0x1>
 124:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <adc_temp>
 128:	24 e0       	ldi	r18, 0x04	; 4
	while (i--) {
		ADCSRA |= (1<<ADSC);
 12a:	ea e7       	ldi	r30, 0x7A	; 122
 12c:	f0 e0       	ldi	r31, 0x00	; 0
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
 12e:	a8 e7       	ldi	r26, 0x78	; 120
 130:	b0 e0       	ldi	r27, 0x00	; 0

void read_adc(void) {
	unsigned char i =4;
	adc_temp = 0; //initialize
	while (i--) {
		ADCSRA |= (1<<ADSC);
 132:	80 81       	ld	r24, Z
 134:	80 64       	ori	r24, 0x40	; 64
 136:	80 83       	st	Z, r24
		while(ADCSRA & (1<<ADSC));
 138:	80 81       	ld	r24, Z
 13a:	86 fd       	sbrc	r24, 6
 13c:	fd cf       	rjmp	.-6      	; 0x138 <read_adc+0x18>
		adc_temp+= ADC;
 13e:	4d 91       	ld	r20, X+
 140:	5c 91       	ld	r21, X
 142:	11 97       	sbiw	r26, 0x01	; 1
 144:	80 91 d0 02 	lds	r24, 0x02D0	; 0x8002d0 <adc_temp>
 148:	90 91 d1 02 	lds	r25, 0x02D1	; 0x8002d1 <adc_temp+0x1>
 14c:	84 0f       	add	r24, r20
 14e:	95 1f       	adc	r25, r21
 150:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <adc_temp+0x1>
 154:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <adc_temp>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 158:	3f ef       	ldi	r19, 0xFF	; 255
 15a:	80 e7       	ldi	r24, 0x70	; 112
 15c:	92 e0       	ldi	r25, 0x02	; 2
 15e:	31 50       	subi	r19, 0x01	; 1
 160:	80 40       	sbci	r24, 0x00	; 0
 162:	90 40       	sbci	r25, 0x00	; 0
 164:	e1 f7       	brne	.-8      	; 0x15e <read_adc+0x3e>
 166:	00 c0       	rjmp	.+0      	; 0x168 <read_adc+0x48>
 168:	00 00       	nop
 16a:	21 50       	subi	r18, 0x01	; 1


void read_adc(void) {
	unsigned char i =4;
	adc_temp = 0; //initialize
	while (i--) {
 16c:	11 f7       	brne	.-60     	; 0x132 <read_adc+0x12>
		ADCSRA |= (1<<ADSC);
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
		_delay_ms(50);
	}
	adc_temp = adc_temp / 8; // Average a few samples
 16e:	80 91 d0 02 	lds	r24, 0x02D0	; 0x8002d0 <adc_temp>
 172:	90 91 d1 02 	lds	r25, 0x02D1	; 0x8002d1 <adc_temp+0x1>
 176:	96 95       	lsr	r25
 178:	87 95       	ror	r24
 17a:	96 95       	lsr	r25
 17c:	87 95       	ror	r24
 17e:	96 95       	lsr	r25
 180:	87 95       	ror	r24
 182:	90 93 d1 02 	sts	0x02D1, r25	; 0x8002d1 <adc_temp+0x1>
 186:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <adc_temp>
 18a:	08 95       	ret

0000018c <USART_init>:

}

/* INIT USART (RS-232) */
void USART_init( unsigned int ubrr ) {
	UBRR0H = (unsigned char)(ubrr>>8);
 18c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
 190:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0)| ( 1 << RXCIE0); // Enable receiver, transmitter & RX interrupt
 194:	e1 ec       	ldi	r30, 0xC1	; 193
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	88 69       	ori	r24, 0x98	; 152
 19c:	80 83       	st	Z, r24
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
 19e:	e2 ec       	ldi	r30, 0xC2	; 194
 1a0:	f0 e0       	ldi	r31, 0x00	; 0
 1a2:	80 81       	ld	r24, Z
 1a4:	86 60       	ori	r24, 0x06	; 6
 1a6:	80 83       	st	Z, r24
 1a8:	08 95       	ret

000001aa <main>:
	return received_data;
}

int main(void) {

	adc_init(); // Initialize the ADC (Analog / Digital Converter)
 1aa:	0e 94 79 00 	call	0xf2	; 0xf2 <adc_init>
	USART_init(MYUBRR); // Initialize the USART (RS232 interface)
 1ae:	87 e6       	ldi	r24, 0x67	; 103
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	0e 94 c6 00 	call	0x18c	; 0x18c <USART_init>
 1b6:	2f ef       	ldi	r18, 0xFF	; 255
 1b8:	89 e6       	ldi	r24, 0x69	; 105
 1ba:	98 e1       	ldi	r25, 0x18	; 24
 1bc:	21 50       	subi	r18, 0x01	; 1
 1be:	80 40       	sbci	r24, 0x00	; 0
 1c0:	90 40       	sbci	r25, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <main+0x12>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0x1c>
 1c6:	00 00       	nop
	_delay_ms(500); // wait a bit
	sei(); //interrupt
 1c8:	78 94       	sei
 1ca:	ff cf       	rjmp	.-2      	; 0x1ca <main+0x20>

000001cc <USART_tx_string>:
	UBRR0L = (unsigned char)ubrr;
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0)| ( 1 << RXCIE0); // Enable receiver, transmitter & RX interrupt
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
}

void USART_tx_string( char *data ) {
 1cc:	cf 93       	push	r28
 1ce:	df 93       	push	r29
	while ((*data != '\0')) {
 1d0:	fc 01       	movw	r30, r24
 1d2:	20 81       	ld	r18, Z
 1d4:	22 23       	and	r18, r18
 1d6:	69 f0       	breq	.+26     	; 0x1f2 <USART_tx_string+0x26>
 1d8:	dc 01       	movw	r26, r24
 1da:	11 96       	adiw	r26, 0x01	; 1
		while (!(UCSR0A & (1 <<UDRE0)));
 1dc:	e0 ec       	ldi	r30, 0xC0	; 192
 1de:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;
 1e0:	c6 ec       	ldi	r28, 0xC6	; 198
 1e2:	d0 e0       	ldi	r29, 0x00	; 0
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
}

void USART_tx_string( char *data ) {
	while ((*data != '\0')) {
		while (!(UCSR0A & (1 <<UDRE0)));
 1e4:	90 81       	ld	r25, Z
 1e6:	95 ff       	sbrs	r25, 5
 1e8:	fd cf       	rjmp	.-6      	; 0x1e4 <USART_tx_string+0x18>
		UDR0 = *data;
 1ea:	28 83       	st	Y, r18
	UCSR0B |= (1 << TXEN0) | (1 << RXEN0)| ( 1 << RXCIE0); // Enable receiver, transmitter & RX interrupt
	UCSR0C |= (1<<UCSZ01) | (1 << UCSZ00);
}

void USART_tx_string( char *data ) {
	while ((*data != '\0')) {
 1ec:	2d 91       	ld	r18, X+
 1ee:	21 11       	cpse	r18, r1
 1f0:	f9 cf       	rjmp	.-14     	; 0x1e4 <USART_tx_string+0x18>
		while (!(UCSR0A & (1 <<UDRE0)));
		UDR0 = *data;
		data++;
	}
}
 1f2:	df 91       	pop	r29
 1f4:	cf 91       	pop	r28
 1f6:	08 95       	ret

000001f8 <__vector_13>:


ISR(TIMER1_OVF_vect) //timer overflow interrupt to delay for 1 second
{
 1f8:	1f 92       	push	r1
 1fa:	0f 92       	push	r0
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	0f 92       	push	r0
 200:	11 24       	eor	r1, r1
 202:	2f 93       	push	r18
 204:	3f 93       	push	r19
 206:	4f 93       	push	r20
 208:	5f 93       	push	r21
 20a:	6f 93       	push	r22
 20c:	7f 93       	push	r23
 20e:	8f 93       	push	r24
 210:	9f 93       	push	r25
 212:	af 93       	push	r26
 214:	bf 93       	push	r27
 216:	ef 93       	push	r30
 218:	ff 93       	push	r31
 21a:	cf 93       	push	r28
 21c:	df 93       	push	r29
 21e:	cd b7       	in	r28, 0x3d	; 61
 220:	de b7       	in	r29, 0x3e	; 62
 222:	c3 58       	subi	r28, 0x83	; 131
 224:	d1 09       	sbc	r29, r1
 226:	de bf       	out	0x3e, r29	; 62
 228:	cd bf       	out	0x3d, r28	; 61
	char TEMP[256];
	unsigned char AT[] = "AT\r\n"; //AT Commands
 22a:	85 e0       	ldi	r24, 0x05	; 5
 22c:	ec e4       	ldi	r30, 0x4C	; 76
 22e:	f1 e0       	ldi	r31, 0x01	; 1
 230:	de 01       	movw	r26, r28
 232:	11 96       	adiw	r26, 0x01	; 1
 234:	01 90       	ld	r0, Z+
 236:	0d 92       	st	X+, r0
 238:	8a 95       	dec	r24
 23a:	e1 f7       	brne	.-8      	; 0x234 <__vector_13+0x3c>
	unsigned char CWMODE[] = "AT+CWMODE=1\r\n"; //Set MODE
 23c:	8e e0       	ldi	r24, 0x0E	; 14
 23e:	e1 e5       	ldi	r30, 0x51	; 81
 240:	f1 e0       	ldi	r31, 0x01	; 1
 242:	de 01       	movw	r26, r28
 244:	16 96       	adiw	r26, 0x06	; 6
 246:	01 90       	ld	r0, Z+
 248:	0d 92       	st	X+, r0
 24a:	8a 95       	dec	r24
 24c:	e1 f7       	brne	.-8      	; 0x246 <__vector_13+0x4e>
	unsigned char CWJAP[] = "AT+CWJAP=\"Beehive 2.4G\",\"03182016\"\r\n"; //MUST CHANGE WIFI AND PASSWORD
 24e:	85 e2       	ldi	r24, 0x25	; 37
 250:	ef e5       	ldi	r30, 0x5F	; 95
 252:	f1 e0       	ldi	r31, 0x01	; 1
 254:	de 01       	movw	r26, r28
 256:	54 96       	adiw	r26, 0x14	; 20
 258:	01 90       	ld	r0, Z+
 25a:	0d 92       	st	X+, r0
 25c:	8a 95       	dec	r24
 25e:	e1 f7       	brne	.-8      	; 0x258 <__vector_13+0x60>
	unsigned char CIPMUX[] = "AT+CIPMUX=0\r\n";
 260:	8e e0       	ldi	r24, 0x0E	; 14
 262:	e4 e8       	ldi	r30, 0x84	; 132
 264:	f1 e0       	ldi	r31, 0x01	; 1
 266:	de 01       	movw	r26, r28
 268:	d9 96       	adiw	r26, 0x39	; 57
 26a:	01 90       	ld	r0, Z+
 26c:	0d 92       	st	X+, r0
 26e:	8a 95       	dec	r24
 270:	e1 f7       	brne	.-8      	; 0x26a <__vector_13+0x72>
	unsigned char CIPSTART[] = "AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n";
 272:	8c e2       	ldi	r24, 0x2C	; 44
 274:	e2 e9       	ldi	r30, 0x92	; 146
 276:	f1 e0       	ldi	r31, 0x01	; 1
 278:	de 01       	movw	r26, r28
 27a:	a9 5b       	subi	r26, 0xB9	; 185
 27c:	bf 4f       	sbci	r27, 0xFF	; 255
 27e:	01 90       	ld	r0, Z+
 280:	0d 92       	st	X+, r0
 282:	8a 95       	dec	r24
 284:	e1 f7       	brne	.-8      	; 0x27e <__vector_13+0x86>
	unsigned char CIPSEND[] = "AT+CIPSEND=100\r\n";
 286:	81 e1       	ldi	r24, 0x11	; 17
 288:	ee eb       	ldi	r30, 0xBE	; 190
 28a:	f1 e0       	ldi	r31, 0x01	; 1
 28c:	de 01       	movw	r26, r28
 28e:	ad 58       	subi	r26, 0x8D	; 141
 290:	bf 4f       	sbci	r27, 0xFF	; 255
 292:	01 90       	ld	r0, Z+
 294:	0d 92       	st	X+, r0
 296:	8a 95       	dec	r24
 298:	e1 f7       	brne	.-8      	; 0x292 <__vector_13+0x9a>
 29a:	2f ef       	ldi	r18, 0xFF	; 255
 29c:	33 ec       	ldi	r19, 0xC3	; 195
 29e:	89 e0       	ldi	r24, 0x09	; 9
 2a0:	21 50       	subi	r18, 0x01	; 1
 2a2:	30 40       	sbci	r19, 0x00	; 0
 2a4:	80 40       	sbci	r24, 0x00	; 0
 2a6:	e1 f7       	brne	.-8      	; 0x2a0 <__vector_13+0xa8>
 2a8:	00 c0       	rjmp	.+0      	; 0x2aa <__vector_13+0xb2>
 2aa:	00 00       	nop

	_delay_ms(200);
	USART_tx_string(AT); //send commands
 2ac:	ce 01       	movw	r24, r28
 2ae:	01 96       	adiw	r24, 0x01	; 1
 2b0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <USART_tx_string>
 2b4:	9f ef       	ldi	r25, 0xFF	; 255
 2b6:	23 e2       	ldi	r18, 0x23	; 35
 2b8:	34 ef       	ldi	r19, 0xF4	; 244
 2ba:	91 50       	subi	r25, 0x01	; 1
 2bc:	20 40       	sbci	r18, 0x00	; 0
 2be:	30 40       	sbci	r19, 0x00	; 0
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <__vector_13+0xc2>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <__vector_13+0xcc>
 2c4:	00 00       	nop
	
	_delay_ms(5000);
	USART_tx_string(CWMODE); //set mode
 2c6:	ce 01       	movw	r24, r28
 2c8:	06 96       	adiw	r24, 0x06	; 6
 2ca:	0e 94 e6 00 	call	0x1cc	; 0x1cc <USART_tx_string>
 2ce:	8f ef       	ldi	r24, 0xFF	; 255
 2d0:	93 e2       	ldi	r25, 0x23	; 35
 2d2:	24 ef       	ldi	r18, 0xF4	; 244
 2d4:	81 50       	subi	r24, 0x01	; 1
 2d6:	90 40       	sbci	r25, 0x00	; 0
 2d8:	20 40       	sbci	r18, 0x00	; 0
 2da:	e1 f7       	brne	.-8      	; 0x2d4 <__vector_13+0xdc>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <__vector_13+0xe6>
 2de:	00 00       	nop
	
	_delay_ms(5000);
	USART_tx_string(CWJAP); //connect to Wifi
 2e0:	ce 01       	movw	r24, r28
 2e2:	44 96       	adiw	r24, 0x14	; 20
 2e4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <USART_tx_string>
 2e8:	3f ef       	ldi	r19, 0xFF	; 255
 2ea:	89 e5       	ldi	r24, 0x59	; 89
 2ec:	92 e6       	ldi	r25, 0x62	; 98
 2ee:	22 e0       	ldi	r18, 0x02	; 2
 2f0:	31 50       	subi	r19, 0x01	; 1
 2f2:	80 40       	sbci	r24, 0x00	; 0
 2f4:	90 40       	sbci	r25, 0x00	; 0
 2f6:	20 40       	sbci	r18, 0x00	; 0
 2f8:	d9 f7       	brne	.-10     	; 0x2f0 <__vector_13+0xf8>
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <__vector_13+0x104>
 2fc:	00 00       	nop
	
	_delay_ms(15000);
	USART_tx_string(CIPMUX); //select MUX
 2fe:	ce 01       	movw	r24, r28
 300:	c9 96       	adiw	r24, 0x39	; 57
 302:	0e 94 e6 00 	call	0x1cc	; 0x1cc <USART_tx_string>
 306:	3a ea       	ldi	r19, 0xAA	; 170
 308:	86 ee       	ldi	r24, 0xE6	; 230
 30a:	96 e9       	ldi	r25, 0x96	; 150
 30c:	21 e0       	ldi	r18, 0x01	; 1
 30e:	31 50       	subi	r19, 0x01	; 1
 310:	80 40       	sbci	r24, 0x00	; 0
 312:	90 40       	sbci	r25, 0x00	; 0
 314:	20 40       	sbci	r18, 0x00	; 0
 316:	d9 f7       	brne	.-10     	; 0x30e <__vector_13+0x116>
 318:	00 00       	nop
	
	_delay_ms(10000);
	USART_tx_string(CIPSTART);//connect TCP
 31a:	ce 01       	movw	r24, r28
 31c:	89 5b       	subi	r24, 0xB9	; 185
 31e:	9f 4f       	sbci	r25, 0xFF	; 255
 320:	0e 94 e6 00 	call	0x1cc	; 0x1cc <USART_tx_string>
 324:	3a ea       	ldi	r19, 0xAA	; 170
 326:	86 ee       	ldi	r24, 0xE6	; 230
 328:	96 e9       	ldi	r25, 0x96	; 150
 32a:	21 e0       	ldi	r18, 0x01	; 1
 32c:	31 50       	subi	r19, 0x01	; 1
 32e:	80 40       	sbci	r24, 0x00	; 0
 330:	90 40       	sbci	r25, 0x00	; 0
 332:	20 40       	sbci	r18, 0x00	; 0
 334:	d9 f7       	brne	.-10     	; 0x32c <__vector_13+0x134>
 336:	00 00       	nop
	
	_delay_ms(10000);
	USART_tx_string(CIPSEND);//send size
 338:	ce 01       	movw	r24, r28
 33a:	8d 58       	subi	r24, 0x8D	; 141
 33c:	9f 4f       	sbci	r25, 0xFF	; 255
 33e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <USART_tx_string>
 342:	3f ef       	ldi	r19, 0xFF	; 255
 344:	83 e2       	ldi	r24, 0x23	; 35
 346:	94 ef       	ldi	r25, 0xF4	; 244
 348:	31 50       	subi	r19, 0x01	; 1
 34a:	80 40       	sbci	r24, 0x00	; 0
 34c:	90 40       	sbci	r25, 0x00	; 0
 34e:	e1 f7       	brne	.-8      	; 0x348 <__vector_13+0x150>
 350:	00 c0       	rjmp	.+0      	; 0x352 <__vector_13+0x15a>
 352:	00 00       	nop
	
	_delay_ms(5000);
	
	
	PORTC^=(1<<5);
 354:	98 b1       	in	r25, 0x08	; 8
 356:	80 e2       	ldi	r24, 0x20	; 32
 358:	89 27       	eor	r24, r25
 35a:	88 b9       	out	0x08, r24	; 8
	read_adc(); //read ADC
 35c:	0e 94 90 00 	call	0x120	; 0x120 <read_adc>
	snprintf(outs,sizeof(outs),"GET https://api.thingspeak.com/update?api_key=DTJWRPL9C5AEE0YQ&field1=%3d\r\n", adc_temp);// print it
 360:	80 91 d0 02 	lds	r24, 0x02D0	; 0x8002d0 <adc_temp>
 364:	90 91 d1 02 	lds	r25, 0x02D1	; 0x8002d1 <adc_temp+0x1>
 368:	9f 93       	push	r25
 36a:	8f 93       	push	r24
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	91 e0       	ldi	r25, 0x01	; 1
 370:	9f 93       	push	r25
 372:	8f 93       	push	r24
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	8f 93       	push	r24
 378:	1f 92       	push	r1
 37a:	80 ed       	ldi	r24, 0xD0	; 208
 37c:	91 e0       	ldi	r25, 0x01	; 1
 37e:	9f 93       	push	r25
 380:	8f 93       	push	r24
 382:	0e 94 f6 01 	call	0x3ec	; 0x3ec <snprintf>
	USART_tx_string(outs);//send data
 386:	80 ed       	ldi	r24, 0xD0	; 208
 388:	91 e0       	ldi	r25, 0x01	; 1
 38a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <USART_tx_string>
 38e:	2a ea       	ldi	r18, 0xAA	; 170
 390:	36 ee       	ldi	r19, 0xE6	; 230
 392:	86 e9       	ldi	r24, 0x96	; 150
 394:	91 e0       	ldi	r25, 0x01	; 1
 396:	21 50       	subi	r18, 0x01	; 1
 398:	30 40       	sbci	r19, 0x00	; 0
 39a:	80 40       	sbci	r24, 0x00	; 0
 39c:	90 40       	sbci	r25, 0x00	; 0
 39e:	d9 f7       	brne	.-10     	; 0x396 <__vector_13+0x19e>
 3a0:	00 00       	nop
	_delay_ms(10000);
	TCNT1 = 49911; //reset
 3a2:	87 ef       	ldi	r24, 0xF7	; 247
 3a4:	92 ec       	ldi	r25, 0xC2	; 194
 3a6:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 3aa:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
}
 3ae:	0f b6       	in	r0, 0x3f	; 63
 3b0:	f8 94       	cli
 3b2:	de bf       	out	0x3e, r29	; 62
 3b4:	0f be       	out	0x3f, r0	; 63
 3b6:	cd bf       	out	0x3d, r28	; 61
 3b8:	cd 57       	subi	r28, 0x7D	; 125
 3ba:	df 4f       	sbci	r29, 0xFF	; 255
 3bc:	0f b6       	in	r0, 0x3f	; 63
 3be:	f8 94       	cli
 3c0:	de bf       	out	0x3e, r29	; 62
 3c2:	0f be       	out	0x3f, r0	; 63
 3c4:	cd bf       	out	0x3d, r28	; 61
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	ff 91       	pop	r31
 3cc:	ef 91       	pop	r30
 3ce:	bf 91       	pop	r27
 3d0:	af 91       	pop	r26
 3d2:	9f 91       	pop	r25
 3d4:	8f 91       	pop	r24
 3d6:	7f 91       	pop	r23
 3d8:	6f 91       	pop	r22
 3da:	5f 91       	pop	r21
 3dc:	4f 91       	pop	r20
 3de:	3f 91       	pop	r19
 3e0:	2f 91       	pop	r18
 3e2:	0f 90       	pop	r0
 3e4:	0f be       	out	0x3f, r0	; 63
 3e6:	0f 90       	pop	r0
 3e8:	1f 90       	pop	r1
 3ea:	18 95       	reti

000003ec <snprintf>:
 3ec:	ae e0       	ldi	r26, 0x0E	; 14
 3ee:	b0 e0       	ldi	r27, 0x00	; 0
 3f0:	ec ef       	ldi	r30, 0xFC	; 252
 3f2:	f1 e0       	ldi	r31, 0x01	; 1
 3f4:	0c 94 c5 04 	jmp	0x98a	; 0x98a <__prologue_saves__+0x1c>
 3f8:	0d 89       	ldd	r16, Y+21	; 0x15
 3fa:	1e 89       	ldd	r17, Y+22	; 0x16
 3fc:	8f 89       	ldd	r24, Y+23	; 0x17
 3fe:	98 8d       	ldd	r25, Y+24	; 0x18
 400:	26 e0       	ldi	r18, 0x06	; 6
 402:	2c 83       	std	Y+4, r18	; 0x04
 404:	1a 83       	std	Y+2, r17	; 0x02
 406:	09 83       	std	Y+1, r16	; 0x01
 408:	97 ff       	sbrs	r25, 7
 40a:	02 c0       	rjmp	.+4      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	90 e8       	ldi	r25, 0x80	; 128
 410:	01 97       	sbiw	r24, 0x01	; 1
 412:	9e 83       	std	Y+6, r25	; 0x06
 414:	8d 83       	std	Y+5, r24	; 0x05
 416:	ae 01       	movw	r20, r28
 418:	45 5e       	subi	r20, 0xE5	; 229
 41a:	5f 4f       	sbci	r21, 0xFF	; 255
 41c:	69 8d       	ldd	r22, Y+25	; 0x19
 41e:	7a 8d       	ldd	r23, Y+26	; 0x1a
 420:	ce 01       	movw	r24, r28
 422:	01 96       	adiw	r24, 0x01	; 1
 424:	0e 94 26 02 	call	0x44c	; 0x44c <vfprintf>
 428:	4d 81       	ldd	r20, Y+5	; 0x05
 42a:	5e 81       	ldd	r21, Y+6	; 0x06
 42c:	57 fd       	sbrc	r21, 7
 42e:	0a c0       	rjmp	.+20     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 430:	2f 81       	ldd	r18, Y+7	; 0x07
 432:	38 85       	ldd	r19, Y+8	; 0x08
 434:	42 17       	cp	r20, r18
 436:	53 07       	cpc	r21, r19
 438:	0c f4       	brge	.+2      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 43a:	9a 01       	movw	r18, r20
 43c:	f8 01       	movw	r30, r16
 43e:	e2 0f       	add	r30, r18
 440:	f3 1f       	adc	r31, r19
 442:	10 82       	st	Z, r1
 444:	2e 96       	adiw	r28, 0x0e	; 14
 446:	e4 e0       	ldi	r30, 0x04	; 4
 448:	0c 94 e1 04 	jmp	0x9c2	; 0x9c2 <__epilogue_restores__+0x1c>

0000044c <vfprintf>:
 44c:	ab e0       	ldi	r26, 0x0B	; 11
 44e:	b0 e0       	ldi	r27, 0x00	; 0
 450:	ec e2       	ldi	r30, 0x2C	; 44
 452:	f2 e0       	ldi	r31, 0x02	; 2
 454:	0c 94 b7 04 	jmp	0x96e	; 0x96e <__prologue_saves__>
 458:	6c 01       	movw	r12, r24
 45a:	7b 01       	movw	r14, r22
 45c:	8a 01       	movw	r16, r20
 45e:	fc 01       	movw	r30, r24
 460:	17 82       	std	Z+7, r1	; 0x07
 462:	16 82       	std	Z+6, r1	; 0x06
 464:	83 81       	ldd	r24, Z+3	; 0x03
 466:	81 ff       	sbrs	r24, 1
 468:	cc c1       	rjmp	.+920    	; 0x802 <vfprintf+0x3b6>
 46a:	ce 01       	movw	r24, r28
 46c:	01 96       	adiw	r24, 0x01	; 1
 46e:	3c 01       	movw	r6, r24
 470:	f6 01       	movw	r30, r12
 472:	93 81       	ldd	r25, Z+3	; 0x03
 474:	f7 01       	movw	r30, r14
 476:	93 fd       	sbrc	r25, 3
 478:	85 91       	lpm	r24, Z+
 47a:	93 ff       	sbrs	r25, 3
 47c:	81 91       	ld	r24, Z+
 47e:	7f 01       	movw	r14, r30
 480:	88 23       	and	r24, r24
 482:	09 f4       	brne	.+2      	; 0x486 <vfprintf+0x3a>
 484:	ba c1       	rjmp	.+884    	; 0x7fa <vfprintf+0x3ae>
 486:	85 32       	cpi	r24, 0x25	; 37
 488:	39 f4       	brne	.+14     	; 0x498 <vfprintf+0x4c>
 48a:	93 fd       	sbrc	r25, 3
 48c:	85 91       	lpm	r24, Z+
 48e:	93 ff       	sbrs	r25, 3
 490:	81 91       	ld	r24, Z+
 492:	7f 01       	movw	r14, r30
 494:	85 32       	cpi	r24, 0x25	; 37
 496:	29 f4       	brne	.+10     	; 0x4a2 <vfprintf+0x56>
 498:	b6 01       	movw	r22, r12
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	0e 94 1d 04 	call	0x83a	; 0x83a <fputc>
 4a0:	e7 cf       	rjmp	.-50     	; 0x470 <vfprintf+0x24>
 4a2:	91 2c       	mov	r9, r1
 4a4:	21 2c       	mov	r2, r1
 4a6:	31 2c       	mov	r3, r1
 4a8:	ff e1       	ldi	r31, 0x1F	; 31
 4aa:	f3 15       	cp	r31, r3
 4ac:	d8 f0       	brcs	.+54     	; 0x4e4 <vfprintf+0x98>
 4ae:	8b 32       	cpi	r24, 0x2B	; 43
 4b0:	79 f0       	breq	.+30     	; 0x4d0 <vfprintf+0x84>
 4b2:	38 f4       	brcc	.+14     	; 0x4c2 <vfprintf+0x76>
 4b4:	80 32       	cpi	r24, 0x20	; 32
 4b6:	79 f0       	breq	.+30     	; 0x4d6 <vfprintf+0x8a>
 4b8:	83 32       	cpi	r24, 0x23	; 35
 4ba:	a1 f4       	brne	.+40     	; 0x4e4 <vfprintf+0x98>
 4bc:	23 2d       	mov	r18, r3
 4be:	20 61       	ori	r18, 0x10	; 16
 4c0:	1d c0       	rjmp	.+58     	; 0x4fc <vfprintf+0xb0>
 4c2:	8d 32       	cpi	r24, 0x2D	; 45
 4c4:	61 f0       	breq	.+24     	; 0x4de <vfprintf+0x92>
 4c6:	80 33       	cpi	r24, 0x30	; 48
 4c8:	69 f4       	brne	.+26     	; 0x4e4 <vfprintf+0x98>
 4ca:	23 2d       	mov	r18, r3
 4cc:	21 60       	ori	r18, 0x01	; 1
 4ce:	16 c0       	rjmp	.+44     	; 0x4fc <vfprintf+0xb0>
 4d0:	83 2d       	mov	r24, r3
 4d2:	82 60       	ori	r24, 0x02	; 2
 4d4:	38 2e       	mov	r3, r24
 4d6:	e3 2d       	mov	r30, r3
 4d8:	e4 60       	ori	r30, 0x04	; 4
 4da:	3e 2e       	mov	r3, r30
 4dc:	2a c0       	rjmp	.+84     	; 0x532 <vfprintf+0xe6>
 4de:	f3 2d       	mov	r31, r3
 4e0:	f8 60       	ori	r31, 0x08	; 8
 4e2:	1d c0       	rjmp	.+58     	; 0x51e <vfprintf+0xd2>
 4e4:	37 fc       	sbrc	r3, 7
 4e6:	2d c0       	rjmp	.+90     	; 0x542 <vfprintf+0xf6>
 4e8:	20 ed       	ldi	r18, 0xD0	; 208
 4ea:	28 0f       	add	r18, r24
 4ec:	2a 30       	cpi	r18, 0x0A	; 10
 4ee:	40 f0       	brcs	.+16     	; 0x500 <vfprintf+0xb4>
 4f0:	8e 32       	cpi	r24, 0x2E	; 46
 4f2:	b9 f4       	brne	.+46     	; 0x522 <vfprintf+0xd6>
 4f4:	36 fc       	sbrc	r3, 6
 4f6:	81 c1       	rjmp	.+770    	; 0x7fa <vfprintf+0x3ae>
 4f8:	23 2d       	mov	r18, r3
 4fa:	20 64       	ori	r18, 0x40	; 64
 4fc:	32 2e       	mov	r3, r18
 4fe:	19 c0       	rjmp	.+50     	; 0x532 <vfprintf+0xe6>
 500:	36 fe       	sbrs	r3, 6
 502:	06 c0       	rjmp	.+12     	; 0x510 <vfprintf+0xc4>
 504:	8a e0       	ldi	r24, 0x0A	; 10
 506:	98 9e       	mul	r9, r24
 508:	20 0d       	add	r18, r0
 50a:	11 24       	eor	r1, r1
 50c:	92 2e       	mov	r9, r18
 50e:	11 c0       	rjmp	.+34     	; 0x532 <vfprintf+0xe6>
 510:	ea e0       	ldi	r30, 0x0A	; 10
 512:	2e 9e       	mul	r2, r30
 514:	20 0d       	add	r18, r0
 516:	11 24       	eor	r1, r1
 518:	22 2e       	mov	r2, r18
 51a:	f3 2d       	mov	r31, r3
 51c:	f0 62       	ori	r31, 0x20	; 32
 51e:	3f 2e       	mov	r3, r31
 520:	08 c0       	rjmp	.+16     	; 0x532 <vfprintf+0xe6>
 522:	8c 36       	cpi	r24, 0x6C	; 108
 524:	21 f4       	brne	.+8      	; 0x52e <vfprintf+0xe2>
 526:	83 2d       	mov	r24, r3
 528:	80 68       	ori	r24, 0x80	; 128
 52a:	38 2e       	mov	r3, r24
 52c:	02 c0       	rjmp	.+4      	; 0x532 <vfprintf+0xe6>
 52e:	88 36       	cpi	r24, 0x68	; 104
 530:	41 f4       	brne	.+16     	; 0x542 <vfprintf+0xf6>
 532:	f7 01       	movw	r30, r14
 534:	93 fd       	sbrc	r25, 3
 536:	85 91       	lpm	r24, Z+
 538:	93 ff       	sbrs	r25, 3
 53a:	81 91       	ld	r24, Z+
 53c:	7f 01       	movw	r14, r30
 53e:	81 11       	cpse	r24, r1
 540:	b3 cf       	rjmp	.-154    	; 0x4a8 <vfprintf+0x5c>
 542:	98 2f       	mov	r25, r24
 544:	9f 7d       	andi	r25, 0xDF	; 223
 546:	95 54       	subi	r25, 0x45	; 69
 548:	93 30       	cpi	r25, 0x03	; 3
 54a:	28 f4       	brcc	.+10     	; 0x556 <vfprintf+0x10a>
 54c:	0c 5f       	subi	r16, 0xFC	; 252
 54e:	1f 4f       	sbci	r17, 0xFF	; 255
 550:	9f e3       	ldi	r25, 0x3F	; 63
 552:	99 83       	std	Y+1, r25	; 0x01
 554:	0d c0       	rjmp	.+26     	; 0x570 <vfprintf+0x124>
 556:	83 36       	cpi	r24, 0x63	; 99
 558:	31 f0       	breq	.+12     	; 0x566 <vfprintf+0x11a>
 55a:	83 37       	cpi	r24, 0x73	; 115
 55c:	71 f0       	breq	.+28     	; 0x57a <vfprintf+0x12e>
 55e:	83 35       	cpi	r24, 0x53	; 83
 560:	09 f0       	breq	.+2      	; 0x564 <vfprintf+0x118>
 562:	59 c0       	rjmp	.+178    	; 0x616 <vfprintf+0x1ca>
 564:	21 c0       	rjmp	.+66     	; 0x5a8 <vfprintf+0x15c>
 566:	f8 01       	movw	r30, r16
 568:	80 81       	ld	r24, Z
 56a:	89 83       	std	Y+1, r24	; 0x01
 56c:	0e 5f       	subi	r16, 0xFE	; 254
 56e:	1f 4f       	sbci	r17, 0xFF	; 255
 570:	88 24       	eor	r8, r8
 572:	83 94       	inc	r8
 574:	91 2c       	mov	r9, r1
 576:	53 01       	movw	r10, r6
 578:	13 c0       	rjmp	.+38     	; 0x5a0 <vfprintf+0x154>
 57a:	28 01       	movw	r4, r16
 57c:	f2 e0       	ldi	r31, 0x02	; 2
 57e:	4f 0e       	add	r4, r31
 580:	51 1c       	adc	r5, r1
 582:	f8 01       	movw	r30, r16
 584:	a0 80       	ld	r10, Z
 586:	b1 80       	ldd	r11, Z+1	; 0x01
 588:	36 fe       	sbrs	r3, 6
 58a:	03 c0       	rjmp	.+6      	; 0x592 <vfprintf+0x146>
 58c:	69 2d       	mov	r22, r9
 58e:	70 e0       	ldi	r23, 0x00	; 0
 590:	02 c0       	rjmp	.+4      	; 0x596 <vfprintf+0x14a>
 592:	6f ef       	ldi	r22, 0xFF	; 255
 594:	7f ef       	ldi	r23, 0xFF	; 255
 596:	c5 01       	movw	r24, r10
 598:	0e 94 12 04 	call	0x824	; 0x824 <strnlen>
 59c:	4c 01       	movw	r8, r24
 59e:	82 01       	movw	r16, r4
 5a0:	f3 2d       	mov	r31, r3
 5a2:	ff 77       	andi	r31, 0x7F	; 127
 5a4:	3f 2e       	mov	r3, r31
 5a6:	16 c0       	rjmp	.+44     	; 0x5d4 <vfprintf+0x188>
 5a8:	28 01       	movw	r4, r16
 5aa:	22 e0       	ldi	r18, 0x02	; 2
 5ac:	42 0e       	add	r4, r18
 5ae:	51 1c       	adc	r5, r1
 5b0:	f8 01       	movw	r30, r16
 5b2:	a0 80       	ld	r10, Z
 5b4:	b1 80       	ldd	r11, Z+1	; 0x01
 5b6:	36 fe       	sbrs	r3, 6
 5b8:	03 c0       	rjmp	.+6      	; 0x5c0 <vfprintf+0x174>
 5ba:	69 2d       	mov	r22, r9
 5bc:	70 e0       	ldi	r23, 0x00	; 0
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <vfprintf+0x178>
 5c0:	6f ef       	ldi	r22, 0xFF	; 255
 5c2:	7f ef       	ldi	r23, 0xFF	; 255
 5c4:	c5 01       	movw	r24, r10
 5c6:	0e 94 07 04 	call	0x80e	; 0x80e <strnlen_P>
 5ca:	4c 01       	movw	r8, r24
 5cc:	f3 2d       	mov	r31, r3
 5ce:	f0 68       	ori	r31, 0x80	; 128
 5d0:	3f 2e       	mov	r3, r31
 5d2:	82 01       	movw	r16, r4
 5d4:	33 fc       	sbrc	r3, 3
 5d6:	1b c0       	rjmp	.+54     	; 0x60e <vfprintf+0x1c2>
 5d8:	82 2d       	mov	r24, r2
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	88 16       	cp	r8, r24
 5de:	99 06       	cpc	r9, r25
 5e0:	b0 f4       	brcc	.+44     	; 0x60e <vfprintf+0x1c2>
 5e2:	b6 01       	movw	r22, r12
 5e4:	80 e2       	ldi	r24, 0x20	; 32
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	0e 94 1d 04 	call	0x83a	; 0x83a <fputc>
 5ec:	2a 94       	dec	r2
 5ee:	f4 cf       	rjmp	.-24     	; 0x5d8 <vfprintf+0x18c>
 5f0:	f5 01       	movw	r30, r10
 5f2:	37 fc       	sbrc	r3, 7
 5f4:	85 91       	lpm	r24, Z+
 5f6:	37 fe       	sbrs	r3, 7
 5f8:	81 91       	ld	r24, Z+
 5fa:	5f 01       	movw	r10, r30
 5fc:	b6 01       	movw	r22, r12
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	0e 94 1d 04 	call	0x83a	; 0x83a <fputc>
 604:	21 10       	cpse	r2, r1
 606:	2a 94       	dec	r2
 608:	21 e0       	ldi	r18, 0x01	; 1
 60a:	82 1a       	sub	r8, r18
 60c:	91 08       	sbc	r9, r1
 60e:	81 14       	cp	r8, r1
 610:	91 04       	cpc	r9, r1
 612:	71 f7       	brne	.-36     	; 0x5f0 <vfprintf+0x1a4>
 614:	e8 c0       	rjmp	.+464    	; 0x7e6 <vfprintf+0x39a>
 616:	84 36       	cpi	r24, 0x64	; 100
 618:	11 f0       	breq	.+4      	; 0x61e <vfprintf+0x1d2>
 61a:	89 36       	cpi	r24, 0x69	; 105
 61c:	41 f5       	brne	.+80     	; 0x66e <vfprintf+0x222>
 61e:	f8 01       	movw	r30, r16
 620:	37 fe       	sbrs	r3, 7
 622:	07 c0       	rjmp	.+14     	; 0x632 <vfprintf+0x1e6>
 624:	60 81       	ld	r22, Z
 626:	71 81       	ldd	r23, Z+1	; 0x01
 628:	82 81       	ldd	r24, Z+2	; 0x02
 62a:	93 81       	ldd	r25, Z+3	; 0x03
 62c:	0c 5f       	subi	r16, 0xFC	; 252
 62e:	1f 4f       	sbci	r17, 0xFF	; 255
 630:	08 c0       	rjmp	.+16     	; 0x642 <vfprintf+0x1f6>
 632:	60 81       	ld	r22, Z
 634:	71 81       	ldd	r23, Z+1	; 0x01
 636:	07 2e       	mov	r0, r23
 638:	00 0c       	add	r0, r0
 63a:	88 0b       	sbc	r24, r24
 63c:	99 0b       	sbc	r25, r25
 63e:	0e 5f       	subi	r16, 0xFE	; 254
 640:	1f 4f       	sbci	r17, 0xFF	; 255
 642:	f3 2d       	mov	r31, r3
 644:	ff 76       	andi	r31, 0x6F	; 111
 646:	3f 2e       	mov	r3, r31
 648:	97 ff       	sbrs	r25, 7
 64a:	09 c0       	rjmp	.+18     	; 0x65e <vfprintf+0x212>
 64c:	90 95       	com	r25
 64e:	80 95       	com	r24
 650:	70 95       	com	r23
 652:	61 95       	neg	r22
 654:	7f 4f       	sbci	r23, 0xFF	; 255
 656:	8f 4f       	sbci	r24, 0xFF	; 255
 658:	9f 4f       	sbci	r25, 0xFF	; 255
 65a:	f0 68       	ori	r31, 0x80	; 128
 65c:	3f 2e       	mov	r3, r31
 65e:	2a e0       	ldi	r18, 0x0A	; 10
 660:	30 e0       	ldi	r19, 0x00	; 0
 662:	a3 01       	movw	r20, r6
 664:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__ultoa_invert>
 668:	88 2e       	mov	r8, r24
 66a:	86 18       	sub	r8, r6
 66c:	45 c0       	rjmp	.+138    	; 0x6f8 <vfprintf+0x2ac>
 66e:	85 37       	cpi	r24, 0x75	; 117
 670:	31 f4       	brne	.+12     	; 0x67e <vfprintf+0x232>
 672:	23 2d       	mov	r18, r3
 674:	2f 7e       	andi	r18, 0xEF	; 239
 676:	b2 2e       	mov	r11, r18
 678:	2a e0       	ldi	r18, 0x0A	; 10
 67a:	30 e0       	ldi	r19, 0x00	; 0
 67c:	25 c0       	rjmp	.+74     	; 0x6c8 <vfprintf+0x27c>
 67e:	93 2d       	mov	r25, r3
 680:	99 7f       	andi	r25, 0xF9	; 249
 682:	b9 2e       	mov	r11, r25
 684:	8f 36       	cpi	r24, 0x6F	; 111
 686:	c1 f0       	breq	.+48     	; 0x6b8 <vfprintf+0x26c>
 688:	18 f4       	brcc	.+6      	; 0x690 <vfprintf+0x244>
 68a:	88 35       	cpi	r24, 0x58	; 88
 68c:	79 f0       	breq	.+30     	; 0x6ac <vfprintf+0x260>
 68e:	b5 c0       	rjmp	.+362    	; 0x7fa <vfprintf+0x3ae>
 690:	80 37       	cpi	r24, 0x70	; 112
 692:	19 f0       	breq	.+6      	; 0x69a <vfprintf+0x24e>
 694:	88 37       	cpi	r24, 0x78	; 120
 696:	21 f0       	breq	.+8      	; 0x6a0 <vfprintf+0x254>
 698:	b0 c0       	rjmp	.+352    	; 0x7fa <vfprintf+0x3ae>
 69a:	e9 2f       	mov	r30, r25
 69c:	e0 61       	ori	r30, 0x10	; 16
 69e:	be 2e       	mov	r11, r30
 6a0:	b4 fe       	sbrs	r11, 4
 6a2:	0d c0       	rjmp	.+26     	; 0x6be <vfprintf+0x272>
 6a4:	fb 2d       	mov	r31, r11
 6a6:	f4 60       	ori	r31, 0x04	; 4
 6a8:	bf 2e       	mov	r11, r31
 6aa:	09 c0       	rjmp	.+18     	; 0x6be <vfprintf+0x272>
 6ac:	34 fe       	sbrs	r3, 4
 6ae:	0a c0       	rjmp	.+20     	; 0x6c4 <vfprintf+0x278>
 6b0:	29 2f       	mov	r18, r25
 6b2:	26 60       	ori	r18, 0x06	; 6
 6b4:	b2 2e       	mov	r11, r18
 6b6:	06 c0       	rjmp	.+12     	; 0x6c4 <vfprintf+0x278>
 6b8:	28 e0       	ldi	r18, 0x08	; 8
 6ba:	30 e0       	ldi	r19, 0x00	; 0
 6bc:	05 c0       	rjmp	.+10     	; 0x6c8 <vfprintf+0x27c>
 6be:	20 e1       	ldi	r18, 0x10	; 16
 6c0:	30 e0       	ldi	r19, 0x00	; 0
 6c2:	02 c0       	rjmp	.+4      	; 0x6c8 <vfprintf+0x27c>
 6c4:	20 e1       	ldi	r18, 0x10	; 16
 6c6:	32 e0       	ldi	r19, 0x02	; 2
 6c8:	f8 01       	movw	r30, r16
 6ca:	b7 fe       	sbrs	r11, 7
 6cc:	07 c0       	rjmp	.+14     	; 0x6dc <vfprintf+0x290>
 6ce:	60 81       	ld	r22, Z
 6d0:	71 81       	ldd	r23, Z+1	; 0x01
 6d2:	82 81       	ldd	r24, Z+2	; 0x02
 6d4:	93 81       	ldd	r25, Z+3	; 0x03
 6d6:	0c 5f       	subi	r16, 0xFC	; 252
 6d8:	1f 4f       	sbci	r17, 0xFF	; 255
 6da:	06 c0       	rjmp	.+12     	; 0x6e8 <vfprintf+0x29c>
 6dc:	60 81       	ld	r22, Z
 6de:	71 81       	ldd	r23, Z+1	; 0x01
 6e0:	80 e0       	ldi	r24, 0x00	; 0
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	0e 5f       	subi	r16, 0xFE	; 254
 6e6:	1f 4f       	sbci	r17, 0xFF	; 255
 6e8:	a3 01       	movw	r20, r6
 6ea:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__ultoa_invert>
 6ee:	88 2e       	mov	r8, r24
 6f0:	86 18       	sub	r8, r6
 6f2:	fb 2d       	mov	r31, r11
 6f4:	ff 77       	andi	r31, 0x7F	; 127
 6f6:	3f 2e       	mov	r3, r31
 6f8:	36 fe       	sbrs	r3, 6
 6fa:	0d c0       	rjmp	.+26     	; 0x716 <vfprintf+0x2ca>
 6fc:	23 2d       	mov	r18, r3
 6fe:	2e 7f       	andi	r18, 0xFE	; 254
 700:	a2 2e       	mov	r10, r18
 702:	89 14       	cp	r8, r9
 704:	58 f4       	brcc	.+22     	; 0x71c <vfprintf+0x2d0>
 706:	34 fe       	sbrs	r3, 4
 708:	0b c0       	rjmp	.+22     	; 0x720 <vfprintf+0x2d4>
 70a:	32 fc       	sbrc	r3, 2
 70c:	09 c0       	rjmp	.+18     	; 0x720 <vfprintf+0x2d4>
 70e:	83 2d       	mov	r24, r3
 710:	8e 7e       	andi	r24, 0xEE	; 238
 712:	a8 2e       	mov	r10, r24
 714:	05 c0       	rjmp	.+10     	; 0x720 <vfprintf+0x2d4>
 716:	b8 2c       	mov	r11, r8
 718:	a3 2c       	mov	r10, r3
 71a:	03 c0       	rjmp	.+6      	; 0x722 <vfprintf+0x2d6>
 71c:	b8 2c       	mov	r11, r8
 71e:	01 c0       	rjmp	.+2      	; 0x722 <vfprintf+0x2d6>
 720:	b9 2c       	mov	r11, r9
 722:	a4 fe       	sbrs	r10, 4
 724:	0f c0       	rjmp	.+30     	; 0x744 <vfprintf+0x2f8>
 726:	fe 01       	movw	r30, r28
 728:	e8 0d       	add	r30, r8
 72a:	f1 1d       	adc	r31, r1
 72c:	80 81       	ld	r24, Z
 72e:	80 33       	cpi	r24, 0x30	; 48
 730:	21 f4       	brne	.+8      	; 0x73a <vfprintf+0x2ee>
 732:	9a 2d       	mov	r25, r10
 734:	99 7e       	andi	r25, 0xE9	; 233
 736:	a9 2e       	mov	r10, r25
 738:	09 c0       	rjmp	.+18     	; 0x74c <vfprintf+0x300>
 73a:	a2 fe       	sbrs	r10, 2
 73c:	06 c0       	rjmp	.+12     	; 0x74a <vfprintf+0x2fe>
 73e:	b3 94       	inc	r11
 740:	b3 94       	inc	r11
 742:	04 c0       	rjmp	.+8      	; 0x74c <vfprintf+0x300>
 744:	8a 2d       	mov	r24, r10
 746:	86 78       	andi	r24, 0x86	; 134
 748:	09 f0       	breq	.+2      	; 0x74c <vfprintf+0x300>
 74a:	b3 94       	inc	r11
 74c:	a3 fc       	sbrc	r10, 3
 74e:	11 c0       	rjmp	.+34     	; 0x772 <vfprintf+0x326>
 750:	a0 fe       	sbrs	r10, 0
 752:	06 c0       	rjmp	.+12     	; 0x760 <vfprintf+0x314>
 754:	b2 14       	cp	r11, r2
 756:	88 f4       	brcc	.+34     	; 0x77a <vfprintf+0x32e>
 758:	28 0c       	add	r2, r8
 75a:	92 2c       	mov	r9, r2
 75c:	9b 18       	sub	r9, r11
 75e:	0e c0       	rjmp	.+28     	; 0x77c <vfprintf+0x330>
 760:	b2 14       	cp	r11, r2
 762:	60 f4       	brcc	.+24     	; 0x77c <vfprintf+0x330>
 764:	b6 01       	movw	r22, r12
 766:	80 e2       	ldi	r24, 0x20	; 32
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	0e 94 1d 04 	call	0x83a	; 0x83a <fputc>
 76e:	b3 94       	inc	r11
 770:	f7 cf       	rjmp	.-18     	; 0x760 <vfprintf+0x314>
 772:	b2 14       	cp	r11, r2
 774:	18 f4       	brcc	.+6      	; 0x77c <vfprintf+0x330>
 776:	2b 18       	sub	r2, r11
 778:	02 c0       	rjmp	.+4      	; 0x77e <vfprintf+0x332>
 77a:	98 2c       	mov	r9, r8
 77c:	21 2c       	mov	r2, r1
 77e:	a4 fe       	sbrs	r10, 4
 780:	10 c0       	rjmp	.+32     	; 0x7a2 <vfprintf+0x356>
 782:	b6 01       	movw	r22, r12
 784:	80 e3       	ldi	r24, 0x30	; 48
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	0e 94 1d 04 	call	0x83a	; 0x83a <fputc>
 78c:	a2 fe       	sbrs	r10, 2
 78e:	17 c0       	rjmp	.+46     	; 0x7be <vfprintf+0x372>
 790:	a1 fc       	sbrc	r10, 1
 792:	03 c0       	rjmp	.+6      	; 0x79a <vfprintf+0x34e>
 794:	88 e7       	ldi	r24, 0x78	; 120
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	02 c0       	rjmp	.+4      	; 0x79e <vfprintf+0x352>
 79a:	88 e5       	ldi	r24, 0x58	; 88
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	b6 01       	movw	r22, r12
 7a0:	0c c0       	rjmp	.+24     	; 0x7ba <vfprintf+0x36e>
 7a2:	8a 2d       	mov	r24, r10
 7a4:	86 78       	andi	r24, 0x86	; 134
 7a6:	59 f0       	breq	.+22     	; 0x7be <vfprintf+0x372>
 7a8:	a1 fe       	sbrs	r10, 1
 7aa:	02 c0       	rjmp	.+4      	; 0x7b0 <vfprintf+0x364>
 7ac:	8b e2       	ldi	r24, 0x2B	; 43
 7ae:	01 c0       	rjmp	.+2      	; 0x7b2 <vfprintf+0x366>
 7b0:	80 e2       	ldi	r24, 0x20	; 32
 7b2:	a7 fc       	sbrc	r10, 7
 7b4:	8d e2       	ldi	r24, 0x2D	; 45
 7b6:	b6 01       	movw	r22, r12
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	0e 94 1d 04 	call	0x83a	; 0x83a <fputc>
 7be:	89 14       	cp	r8, r9
 7c0:	38 f4       	brcc	.+14     	; 0x7d0 <vfprintf+0x384>
 7c2:	b6 01       	movw	r22, r12
 7c4:	80 e3       	ldi	r24, 0x30	; 48
 7c6:	90 e0       	ldi	r25, 0x00	; 0
 7c8:	0e 94 1d 04 	call	0x83a	; 0x83a <fputc>
 7cc:	9a 94       	dec	r9
 7ce:	f7 cf       	rjmp	.-18     	; 0x7be <vfprintf+0x372>
 7d0:	8a 94       	dec	r8
 7d2:	f3 01       	movw	r30, r6
 7d4:	e8 0d       	add	r30, r8
 7d6:	f1 1d       	adc	r31, r1
 7d8:	80 81       	ld	r24, Z
 7da:	b6 01       	movw	r22, r12
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	0e 94 1d 04 	call	0x83a	; 0x83a <fputc>
 7e2:	81 10       	cpse	r8, r1
 7e4:	f5 cf       	rjmp	.-22     	; 0x7d0 <vfprintf+0x384>
 7e6:	22 20       	and	r2, r2
 7e8:	09 f4       	brne	.+2      	; 0x7ec <vfprintf+0x3a0>
 7ea:	42 ce       	rjmp	.-892    	; 0x470 <vfprintf+0x24>
 7ec:	b6 01       	movw	r22, r12
 7ee:	80 e2       	ldi	r24, 0x20	; 32
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	0e 94 1d 04 	call	0x83a	; 0x83a <fputc>
 7f6:	2a 94       	dec	r2
 7f8:	f6 cf       	rjmp	.-20     	; 0x7e6 <vfprintf+0x39a>
 7fa:	f6 01       	movw	r30, r12
 7fc:	86 81       	ldd	r24, Z+6	; 0x06
 7fe:	97 81       	ldd	r25, Z+7	; 0x07
 800:	02 c0       	rjmp	.+4      	; 0x806 <vfprintf+0x3ba>
 802:	8f ef       	ldi	r24, 0xFF	; 255
 804:	9f ef       	ldi	r25, 0xFF	; 255
 806:	2b 96       	adiw	r28, 0x0b	; 11
 808:	e2 e1       	ldi	r30, 0x12	; 18
 80a:	0c 94 d3 04 	jmp	0x9a6	; 0x9a6 <__epilogue_restores__>

0000080e <strnlen_P>:
 80e:	fc 01       	movw	r30, r24
 810:	05 90       	lpm	r0, Z+
 812:	61 50       	subi	r22, 0x01	; 1
 814:	70 40       	sbci	r23, 0x00	; 0
 816:	01 10       	cpse	r0, r1
 818:	d8 f7       	brcc	.-10     	; 0x810 <strnlen_P+0x2>
 81a:	80 95       	com	r24
 81c:	90 95       	com	r25
 81e:	8e 0f       	add	r24, r30
 820:	9f 1f       	adc	r25, r31
 822:	08 95       	ret

00000824 <strnlen>:
 824:	fc 01       	movw	r30, r24
 826:	61 50       	subi	r22, 0x01	; 1
 828:	70 40       	sbci	r23, 0x00	; 0
 82a:	01 90       	ld	r0, Z+
 82c:	01 10       	cpse	r0, r1
 82e:	d8 f7       	brcc	.-10     	; 0x826 <strnlen+0x2>
 830:	80 95       	com	r24
 832:	90 95       	com	r25
 834:	8e 0f       	add	r24, r30
 836:	9f 1f       	adc	r25, r31
 838:	08 95       	ret

0000083a <fputc>:
 83a:	0f 93       	push	r16
 83c:	1f 93       	push	r17
 83e:	cf 93       	push	r28
 840:	df 93       	push	r29
 842:	fb 01       	movw	r30, r22
 844:	23 81       	ldd	r18, Z+3	; 0x03
 846:	21 fd       	sbrc	r18, 1
 848:	03 c0       	rjmp	.+6      	; 0x850 <fputc+0x16>
 84a:	8f ef       	ldi	r24, 0xFF	; 255
 84c:	9f ef       	ldi	r25, 0xFF	; 255
 84e:	2c c0       	rjmp	.+88     	; 0x8a8 <fputc+0x6e>
 850:	22 ff       	sbrs	r18, 2
 852:	16 c0       	rjmp	.+44     	; 0x880 <fputc+0x46>
 854:	46 81       	ldd	r20, Z+6	; 0x06
 856:	57 81       	ldd	r21, Z+7	; 0x07
 858:	24 81       	ldd	r18, Z+4	; 0x04
 85a:	35 81       	ldd	r19, Z+5	; 0x05
 85c:	42 17       	cp	r20, r18
 85e:	53 07       	cpc	r21, r19
 860:	44 f4       	brge	.+16     	; 0x872 <fputc+0x38>
 862:	a0 81       	ld	r26, Z
 864:	b1 81       	ldd	r27, Z+1	; 0x01
 866:	9d 01       	movw	r18, r26
 868:	2f 5f       	subi	r18, 0xFF	; 255
 86a:	3f 4f       	sbci	r19, 0xFF	; 255
 86c:	31 83       	std	Z+1, r19	; 0x01
 86e:	20 83       	st	Z, r18
 870:	8c 93       	st	X, r24
 872:	26 81       	ldd	r18, Z+6	; 0x06
 874:	37 81       	ldd	r19, Z+7	; 0x07
 876:	2f 5f       	subi	r18, 0xFF	; 255
 878:	3f 4f       	sbci	r19, 0xFF	; 255
 87a:	37 83       	std	Z+7, r19	; 0x07
 87c:	26 83       	std	Z+6, r18	; 0x06
 87e:	14 c0       	rjmp	.+40     	; 0x8a8 <fputc+0x6e>
 880:	8b 01       	movw	r16, r22
 882:	ec 01       	movw	r28, r24
 884:	fb 01       	movw	r30, r22
 886:	00 84       	ldd	r0, Z+8	; 0x08
 888:	f1 85       	ldd	r31, Z+9	; 0x09
 88a:	e0 2d       	mov	r30, r0
 88c:	09 95       	icall
 88e:	89 2b       	or	r24, r25
 890:	e1 f6       	brne	.-72     	; 0x84a <fputc+0x10>
 892:	d8 01       	movw	r26, r16
 894:	16 96       	adiw	r26, 0x06	; 6
 896:	8d 91       	ld	r24, X+
 898:	9c 91       	ld	r25, X
 89a:	17 97       	sbiw	r26, 0x07	; 7
 89c:	01 96       	adiw	r24, 0x01	; 1
 89e:	17 96       	adiw	r26, 0x07	; 7
 8a0:	9c 93       	st	X, r25
 8a2:	8e 93       	st	-X, r24
 8a4:	16 97       	sbiw	r26, 0x06	; 6
 8a6:	ce 01       	movw	r24, r28
 8a8:	df 91       	pop	r29
 8aa:	cf 91       	pop	r28
 8ac:	1f 91       	pop	r17
 8ae:	0f 91       	pop	r16
 8b0:	08 95       	ret

000008b2 <__ultoa_invert>:
 8b2:	fa 01       	movw	r30, r20
 8b4:	aa 27       	eor	r26, r26
 8b6:	28 30       	cpi	r18, 0x08	; 8
 8b8:	51 f1       	breq	.+84     	; 0x90e <__stack+0xf>
 8ba:	20 31       	cpi	r18, 0x10	; 16
 8bc:	81 f1       	breq	.+96     	; 0x91e <__stack+0x1f>
 8be:	e8 94       	clt
 8c0:	6f 93       	push	r22
 8c2:	6e 7f       	andi	r22, 0xFE	; 254
 8c4:	6e 5f       	subi	r22, 0xFE	; 254
 8c6:	7f 4f       	sbci	r23, 0xFF	; 255
 8c8:	8f 4f       	sbci	r24, 0xFF	; 255
 8ca:	9f 4f       	sbci	r25, 0xFF	; 255
 8cc:	af 4f       	sbci	r26, 0xFF	; 255
 8ce:	b1 e0       	ldi	r27, 0x01	; 1
 8d0:	3e d0       	rcall	.+124    	; 0x94e <__stack+0x4f>
 8d2:	b4 e0       	ldi	r27, 0x04	; 4
 8d4:	3c d0       	rcall	.+120    	; 0x94e <__stack+0x4f>
 8d6:	67 0f       	add	r22, r23
 8d8:	78 1f       	adc	r23, r24
 8da:	89 1f       	adc	r24, r25
 8dc:	9a 1f       	adc	r25, r26
 8de:	a1 1d       	adc	r26, r1
 8e0:	68 0f       	add	r22, r24
 8e2:	79 1f       	adc	r23, r25
 8e4:	8a 1f       	adc	r24, r26
 8e6:	91 1d       	adc	r25, r1
 8e8:	a1 1d       	adc	r26, r1
 8ea:	6a 0f       	add	r22, r26
 8ec:	71 1d       	adc	r23, r1
 8ee:	81 1d       	adc	r24, r1
 8f0:	91 1d       	adc	r25, r1
 8f2:	a1 1d       	adc	r26, r1
 8f4:	20 d0       	rcall	.+64     	; 0x936 <__stack+0x37>
 8f6:	09 f4       	brne	.+2      	; 0x8fa <__ultoa_invert+0x48>
 8f8:	68 94       	set
 8fa:	3f 91       	pop	r19
 8fc:	2a e0       	ldi	r18, 0x0A	; 10
 8fe:	26 9f       	mul	r18, r22
 900:	11 24       	eor	r1, r1
 902:	30 19       	sub	r19, r0
 904:	30 5d       	subi	r19, 0xD0	; 208
 906:	31 93       	st	Z+, r19
 908:	de f6       	brtc	.-74     	; 0x8c0 <__ultoa_invert+0xe>
 90a:	cf 01       	movw	r24, r30
 90c:	08 95       	ret
 90e:	46 2f       	mov	r20, r22
 910:	47 70       	andi	r20, 0x07	; 7
 912:	40 5d       	subi	r20, 0xD0	; 208
 914:	41 93       	st	Z+, r20
 916:	b3 e0       	ldi	r27, 0x03	; 3
 918:	0f d0       	rcall	.+30     	; 0x938 <__stack+0x39>
 91a:	c9 f7       	brne	.-14     	; 0x90e <__stack+0xf>
 91c:	f6 cf       	rjmp	.-20     	; 0x90a <__stack+0xb>
 91e:	46 2f       	mov	r20, r22
 920:	4f 70       	andi	r20, 0x0F	; 15
 922:	40 5d       	subi	r20, 0xD0	; 208
 924:	4a 33       	cpi	r20, 0x3A	; 58
 926:	18 f0       	brcs	.+6      	; 0x92e <__stack+0x2f>
 928:	49 5d       	subi	r20, 0xD9	; 217
 92a:	31 fd       	sbrc	r19, 1
 92c:	40 52       	subi	r20, 0x20	; 32
 92e:	41 93       	st	Z+, r20
 930:	02 d0       	rcall	.+4      	; 0x936 <__stack+0x37>
 932:	a9 f7       	brne	.-22     	; 0x91e <__stack+0x1f>
 934:	ea cf       	rjmp	.-44     	; 0x90a <__stack+0xb>
 936:	b4 e0       	ldi	r27, 0x04	; 4
 938:	a6 95       	lsr	r26
 93a:	97 95       	ror	r25
 93c:	87 95       	ror	r24
 93e:	77 95       	ror	r23
 940:	67 95       	ror	r22
 942:	ba 95       	dec	r27
 944:	c9 f7       	brne	.-14     	; 0x938 <__stack+0x39>
 946:	00 97       	sbiw	r24, 0x00	; 0
 948:	61 05       	cpc	r22, r1
 94a:	71 05       	cpc	r23, r1
 94c:	08 95       	ret
 94e:	9b 01       	movw	r18, r22
 950:	ac 01       	movw	r20, r24
 952:	0a 2e       	mov	r0, r26
 954:	06 94       	lsr	r0
 956:	57 95       	ror	r21
 958:	47 95       	ror	r20
 95a:	37 95       	ror	r19
 95c:	27 95       	ror	r18
 95e:	ba 95       	dec	r27
 960:	c9 f7       	brne	.-14     	; 0x954 <__stack+0x55>
 962:	62 0f       	add	r22, r18
 964:	73 1f       	adc	r23, r19
 966:	84 1f       	adc	r24, r20
 968:	95 1f       	adc	r25, r21
 96a:	a0 1d       	adc	r26, r0
 96c:	08 95       	ret

0000096e <__prologue_saves__>:
 96e:	2f 92       	push	r2
 970:	3f 92       	push	r3
 972:	4f 92       	push	r4
 974:	5f 92       	push	r5
 976:	6f 92       	push	r6
 978:	7f 92       	push	r7
 97a:	8f 92       	push	r8
 97c:	9f 92       	push	r9
 97e:	af 92       	push	r10
 980:	bf 92       	push	r11
 982:	cf 92       	push	r12
 984:	df 92       	push	r13
 986:	ef 92       	push	r14
 988:	ff 92       	push	r15
 98a:	0f 93       	push	r16
 98c:	1f 93       	push	r17
 98e:	cf 93       	push	r28
 990:	df 93       	push	r29
 992:	cd b7       	in	r28, 0x3d	; 61
 994:	de b7       	in	r29, 0x3e	; 62
 996:	ca 1b       	sub	r28, r26
 998:	db 0b       	sbc	r29, r27
 99a:	0f b6       	in	r0, 0x3f	; 63
 99c:	f8 94       	cli
 99e:	de bf       	out	0x3e, r29	; 62
 9a0:	0f be       	out	0x3f, r0	; 63
 9a2:	cd bf       	out	0x3d, r28	; 61
 9a4:	09 94       	ijmp

000009a6 <__epilogue_restores__>:
 9a6:	2a 88       	ldd	r2, Y+18	; 0x12
 9a8:	39 88       	ldd	r3, Y+17	; 0x11
 9aa:	48 88       	ldd	r4, Y+16	; 0x10
 9ac:	5f 84       	ldd	r5, Y+15	; 0x0f
 9ae:	6e 84       	ldd	r6, Y+14	; 0x0e
 9b0:	7d 84       	ldd	r7, Y+13	; 0x0d
 9b2:	8c 84       	ldd	r8, Y+12	; 0x0c
 9b4:	9b 84       	ldd	r9, Y+11	; 0x0b
 9b6:	aa 84       	ldd	r10, Y+10	; 0x0a
 9b8:	b9 84       	ldd	r11, Y+9	; 0x09
 9ba:	c8 84       	ldd	r12, Y+8	; 0x08
 9bc:	df 80       	ldd	r13, Y+7	; 0x07
 9be:	ee 80       	ldd	r14, Y+6	; 0x06
 9c0:	fd 80       	ldd	r15, Y+5	; 0x05
 9c2:	0c 81       	ldd	r16, Y+4	; 0x04
 9c4:	1b 81       	ldd	r17, Y+3	; 0x03
 9c6:	aa 81       	ldd	r26, Y+2	; 0x02
 9c8:	b9 81       	ldd	r27, Y+1	; 0x01
 9ca:	ce 0f       	add	r28, r30
 9cc:	d1 1d       	adc	r29, r1
 9ce:	0f b6       	in	r0, 0x3f	; 63
 9d0:	f8 94       	cli
 9d2:	de bf       	out	0x3e, r29	; 62
 9d4:	0f be       	out	0x3f, r0	; 63
 9d6:	cd bf       	out	0x3d, r28	; 61
 9d8:	ed 01       	movw	r28, r26
 9da:	08 95       	ret

000009dc <_exit>:
 9dc:	f8 94       	cli

000009de <__stop_program>:
 9de:	ff cf       	rjmp	.-2      	; 0x9de <__stop_program>
