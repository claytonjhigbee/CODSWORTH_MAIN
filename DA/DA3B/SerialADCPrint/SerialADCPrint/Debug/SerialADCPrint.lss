
SerialADCPrint.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  0000081e  000008b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000081e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800114  00800114  000008c6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008c6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000924  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000964  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b39  00000000  00000000  000009a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009f1  00000000  00000000  000014dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003c9  00000000  00000000  00001ece  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000008c  00000000  00000000  00002298  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004fe  00000000  00000000  00002324  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000015b  00000000  00000000  00002822  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000297d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	ee e1       	ldi	r30, 0x1E	; 30
  c8:	f8 e0       	ldi	r31, 0x08	; 8
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 31       	cpi	r26, 0x14	; 20
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a4 e1       	ldi	r26, 0x14	; 20
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	aa 32       	cpi	r26, 0x2A	; 42
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 d5 00 	call	0x1aa	; 0x1aa <main>
  ea:	0c 94 0d 04 	jmp	0x81a	; 0x81a <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <adc_init>:
}
/* INIT ADC */
void adc_init(void)
{
	/** Setup and enable ADC **/
	ADMUX = (0<<REFS1)|    // Reference Selection Bits
  f2:	84 e4       	ldi	r24, 0x44	; 68
  f4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<REFS0)|    // AVcc - external cap at AREF
	(0<<ADLAR)|    // ADC Left Adjust Result
	(1<<MUX2)|     // Analog Channel Selection Bits
	(0<<MUX1)|     // ADC4 (PC4 PIN27)
	(0<<MUX0);
	ADCSRA = (1<<ADEN)|    // ADC ENable
  f8:	85 e8       	ldi	r24, 0x85	; 133
  fa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  fe:	08 95       	ret

00000100 <read_adc>:
}
/* READ ADC PINS */
void read_adc(void)
{
	unsigned char i = 4;
	adc_temp = 0;
 100:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <adc_temp+0x1>
 104:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <adc_temp>
 108:	24 e0       	ldi	r18, 0x04	; 4
	while (i--)
	{
		ADCSRA |= (1<<ADSC);
 10a:	ea e7       	ldi	r30, 0x7A	; 122
 10c:	f0 e0       	ldi	r31, 0x00	; 0
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
 10e:	a8 e7       	ldi	r26, 0x78	; 120
 110:	b0 e0       	ldi	r27, 0x00	; 0
{
	unsigned char i = 4;
	adc_temp = 0;
	while (i--)
	{
		ADCSRA |= (1<<ADSC);
 112:	80 81       	ld	r24, Z
 114:	80 64       	ori	r24, 0x40	; 64
 116:	80 83       	st	Z, r24
		while(ADCSRA & (1<<ADSC));
 118:	80 81       	ld	r24, Z
 11a:	86 fd       	sbrc	r24, 6
 11c:	fd cf       	rjmp	.-6      	; 0x118 <read_adc+0x18>
		adc_temp+= ADC;
 11e:	4d 91       	ld	r20, X+
 120:	5c 91       	ld	r21, X
 122:	11 97       	sbiw	r26, 0x01	; 1
 124:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <adc_temp>
 128:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <adc_temp+0x1>
 12c:	84 0f       	add	r24, r20
 12e:	95 1f       	adc	r25, r21
 130:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <adc_temp+0x1>
 134:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <adc_temp>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 138:	3f ef       	ldi	r19, 0xFF	; 255
 13a:	80 e7       	ldi	r24, 0x70	; 112
 13c:	92 e0       	ldi	r25, 0x02	; 2
 13e:	31 50       	subi	r19, 0x01	; 1
 140:	80 40       	sbci	r24, 0x00	; 0
 142:	90 40       	sbci	r25, 0x00	; 0
 144:	e1 f7       	brne	.-8      	; 0x13e <read_adc+0x3e>
 146:	00 c0       	rjmp	.+0      	; 0x148 <read_adc+0x48>
 148:	00 00       	nop
 14a:	21 50       	subi	r18, 0x01	; 1
/* READ ADC PINS */
void read_adc(void)
{
	unsigned char i = 4;
	adc_temp = 0;
	while (i--)
 14c:	11 f7       	brne	.-60     	; 0x112 <read_adc+0x12>
		ADCSRA |= (1<<ADSC);
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
		_delay_ms(50);
	}
	adc_temp = adc_temp / 4;  // Average a few samples
 14e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <adc_temp>
 152:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <adc_temp+0x1>
 156:	96 95       	lsr	r25
 158:	87 95       	ror	r24
 15a:	96 95       	lsr	r25
 15c:	87 95       	ror	r24
 15e:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <adc_temp+0x1>
 162:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <adc_temp>
 166:	08 95       	ret

00000168 <USART_init>:
}
/* INIT USART (RS-232)  */
void USART_init( unsigned int ubrr )
{
	UBRR0H = (unsigned char)(ubrr>>8);
 168:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
 16c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0);     // Enable RX, TX & RX interrupt
 170:	88 e0       	ldi	r24, 0x08	; 8
 172:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (3 << UCSZ00);    //asynchronous 8 N 1
 176:	86 e0       	ldi	r24, 0x06	; 6
 178:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 17c:	08 95       	ret

0000017e <USART_tx_string>:
}
/* SEND A STRING TO THE RS-232 */
void USART_tx_string( char *data )
{
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
	while ((*data != '\0'))
 182:	fc 01       	movw	r30, r24
 184:	20 81       	ld	r18, Z
 186:	22 23       	and	r18, r18
 188:	69 f0       	breq	.+26     	; 0x1a4 <USART_tx_string+0x26>
 18a:	dc 01       	movw	r26, r24
 18c:	11 96       	adiw	r26, 0x01	; 1
	{
		while (!(UCSR0A & (1 <<UDRE0)));
 18e:	e0 ec       	ldi	r30, 0xC0	; 192
 190:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;
 192:	c6 ec       	ldi	r28, 0xC6	; 198
 194:	d0 e0       	ldi	r29, 0x00	; 0
/* SEND A STRING TO THE RS-232 */
void USART_tx_string( char *data )
{
	while ((*data != '\0'))
	{
		while (!(UCSR0A & (1 <<UDRE0)));
 196:	90 81       	ld	r25, Z
 198:	95 ff       	sbrs	r25, 5
 19a:	fd cf       	rjmp	.-6      	; 0x196 <USART_tx_string+0x18>
		UDR0 = *data;
 19c:	28 83       	st	Y, r18
	UCSR0C = (3 << UCSZ00);    //asynchronous 8 N 1
}
/* SEND A STRING TO THE RS-232 */
void USART_tx_string( char *data )
{
	while ((*data != '\0'))
 19e:	2d 91       	ld	r18, X+
 1a0:	21 11       	cpse	r18, r1
 1a2:	f9 cf       	rjmp	.-14     	; 0x196 <USART_tx_string+0x18>
	{
		while (!(UCSR0A & (1 <<UDRE0)));
		UDR0 = *data;
		data++;
	}
}
 1a4:	df 91       	pop	r29
 1a6:	cf 91       	pop	r28
 1a8:	08 95       	ret

000001aa <main>:
void USART_tx_string( char *data );
volatile unsigned int adc_temp;
char outs[20];
int main(void)
{
	adc_init();             // Initialize the ADC
 1aa:	0e 94 79 00 	call	0xf2	; 0xf2 <adc_init>
	USART_init(BAUD_PRESCALLER);  // Initialize the USART
 1ae:	87 e6       	ldi	r24, 0x67	; 103
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	0e 94 b4 00 	call	0x168	; 0x168 <USART_init>
	USART_tx_string("Connected!\r\n");    // we're alive!
 1b6:	80 e0       	ldi	r24, 0x00	; 0
 1b8:	91 e0       	ldi	r25, 0x01	; 1
 1ba:	0e 94 bf 00 	call	0x17e	; 0x17e <USART_tx_string>
 1be:	2f e7       	ldi	r18, 0x7F	; 127
 1c0:	8a e1       	ldi	r24, 0x1A	; 26
 1c2:	96 e0       	ldi	r25, 0x06	; 6
 1c4:	21 50       	subi	r18, 0x01	; 1
 1c6:	80 40       	sbci	r24, 0x00	; 0
 1c8:	90 40       	sbci	r25, 0x00	; 0
 1ca:	e1 f7       	brne	.-8      	; 0x1c4 <main+0x1a>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <main+0x24>
 1ce:	00 00       	nop
	_delay_ms(125);         // wait a bit
	while(1)
	{
		read_adc();
		snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp);  // print it
 1d0:	0d e0       	ldi	r16, 0x0D	; 13
 1d2:	11 e0       	ldi	r17, 0x01	; 1
 1d4:	0f 2e       	mov	r0, r31
 1d6:	f4 e1       	ldi	r31, 0x14	; 20
 1d8:	ff 2e       	mov	r15, r31
 1da:	f0 2d       	mov	r31, r0
 1dc:	c4 e1       	ldi	r28, 0x14	; 20
 1de:	d1 e0       	ldi	r29, 0x01	; 1
	USART_init(BAUD_PRESCALLER);  // Initialize the USART
	USART_tx_string("Connected!\r\n");    // we're alive!
	_delay_ms(125);         // wait a bit
	while(1)
	{
		read_adc();
 1e0:	0e 94 80 00 	call	0x100	; 0x100 <read_adc>
		snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp);  // print it
 1e4:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <adc_temp>
 1e8:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <adc_temp+0x1>
 1ec:	9f 93       	push	r25
 1ee:	8f 93       	push	r24
 1f0:	1f 93       	push	r17
 1f2:	0f 93       	push	r16
 1f4:	1f 92       	push	r1
 1f6:	ff 92       	push	r15
 1f8:	df 93       	push	r29
 1fa:	cf 93       	push	r28
 1fc:	0e 94 15 01 	call	0x22a	; 0x22a <snprintf>
		USART_tx_string(outs);
 200:	ce 01       	movw	r24, r28
 202:	0e 94 bf 00 	call	0x17e	; 0x17e <USART_tx_string>
 206:	9f e7       	ldi	r25, 0x7F	; 127
 208:	2a e1       	ldi	r18, 0x1A	; 26
 20a:	86 e0       	ldi	r24, 0x06	; 6
 20c:	91 50       	subi	r25, 0x01	; 1
 20e:	20 40       	sbci	r18, 0x00	; 0
 210:	80 40       	sbci	r24, 0x00	; 0
 212:	e1 f7       	brne	.-8      	; 0x20c <main+0x62>
 214:	00 c0       	rjmp	.+0      	; 0x216 <main+0x6c>
 216:	00 00       	nop
 218:	8d b7       	in	r24, 0x3d	; 61
 21a:	9e b7       	in	r25, 0x3e	; 62
 21c:	08 96       	adiw	r24, 0x08	; 8
 21e:	0f b6       	in	r0, 0x3f	; 63
 220:	f8 94       	cli
 222:	9e bf       	out	0x3e, r25	; 62
 224:	0f be       	out	0x3f, r0	; 63
 226:	8d bf       	out	0x3d, r24	; 61
 228:	db cf       	rjmp	.-74     	; 0x1e0 <main+0x36>

0000022a <snprintf>:
 22a:	ae e0       	ldi	r26, 0x0E	; 14
 22c:	b0 e0       	ldi	r27, 0x00	; 0
 22e:	eb e1       	ldi	r30, 0x1B	; 27
 230:	f1 e0       	ldi	r31, 0x01	; 1
 232:	0c 94 e4 03 	jmp	0x7c8	; 0x7c8 <__prologue_saves__+0x1c>
 236:	0d 89       	ldd	r16, Y+21	; 0x15
 238:	1e 89       	ldd	r17, Y+22	; 0x16
 23a:	8f 89       	ldd	r24, Y+23	; 0x17
 23c:	98 8d       	ldd	r25, Y+24	; 0x18
 23e:	26 e0       	ldi	r18, 0x06	; 6
 240:	2c 83       	std	Y+4, r18	; 0x04
 242:	1a 83       	std	Y+2, r17	; 0x02
 244:	09 83       	std	Y+1, r16	; 0x01
 246:	97 ff       	sbrs	r25, 7
 248:	02 c0       	rjmp	.+4      	; 0x24e <snprintf+0x24>
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	90 e8       	ldi	r25, 0x80	; 128
 24e:	01 97       	sbiw	r24, 0x01	; 1
 250:	9e 83       	std	Y+6, r25	; 0x06
 252:	8d 83       	std	Y+5, r24	; 0x05
 254:	ae 01       	movw	r20, r28
 256:	45 5e       	subi	r20, 0xE5	; 229
 258:	5f 4f       	sbci	r21, 0xFF	; 255
 25a:	69 8d       	ldd	r22, Y+25	; 0x19
 25c:	7a 8d       	ldd	r23, Y+26	; 0x1a
 25e:	ce 01       	movw	r24, r28
 260:	01 96       	adiw	r24, 0x01	; 1
 262:	0e 94 45 01 	call	0x28a	; 0x28a <vfprintf>
 266:	4d 81       	ldd	r20, Y+5	; 0x05
 268:	5e 81       	ldd	r21, Y+6	; 0x06
 26a:	57 fd       	sbrc	r21, 7
 26c:	0a c0       	rjmp	.+20     	; 0x282 <snprintf+0x58>
 26e:	2f 81       	ldd	r18, Y+7	; 0x07
 270:	38 85       	ldd	r19, Y+8	; 0x08
 272:	42 17       	cp	r20, r18
 274:	53 07       	cpc	r21, r19
 276:	0c f4       	brge	.+2      	; 0x27a <snprintf+0x50>
 278:	9a 01       	movw	r18, r20
 27a:	f8 01       	movw	r30, r16
 27c:	e2 0f       	add	r30, r18
 27e:	f3 1f       	adc	r31, r19
 280:	10 82       	st	Z, r1
 282:	2e 96       	adiw	r28, 0x0e	; 14
 284:	e4 e0       	ldi	r30, 0x04	; 4
 286:	0c 94 00 04 	jmp	0x800	; 0x800 <__epilogue_restores__+0x1c>

0000028a <vfprintf>:
 28a:	ab e0       	ldi	r26, 0x0B	; 11
 28c:	b0 e0       	ldi	r27, 0x00	; 0
 28e:	eb e4       	ldi	r30, 0x4B	; 75
 290:	f1 e0       	ldi	r31, 0x01	; 1
 292:	0c 94 d6 03 	jmp	0x7ac	; 0x7ac <__prologue_saves__>
 296:	6c 01       	movw	r12, r24
 298:	7b 01       	movw	r14, r22
 29a:	8a 01       	movw	r16, r20
 29c:	fc 01       	movw	r30, r24
 29e:	17 82       	std	Z+7, r1	; 0x07
 2a0:	16 82       	std	Z+6, r1	; 0x06
 2a2:	83 81       	ldd	r24, Z+3	; 0x03
 2a4:	81 ff       	sbrs	r24, 1
 2a6:	cc c1       	rjmp	.+920    	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 2a8:	ce 01       	movw	r24, r28
 2aa:	01 96       	adiw	r24, 0x01	; 1
 2ac:	3c 01       	movw	r6, r24
 2ae:	f6 01       	movw	r30, r12
 2b0:	93 81       	ldd	r25, Z+3	; 0x03
 2b2:	f7 01       	movw	r30, r14
 2b4:	93 fd       	sbrc	r25, 3
 2b6:	85 91       	lpm	r24, Z+
 2b8:	93 ff       	sbrs	r25, 3
 2ba:	81 91       	ld	r24, Z+
 2bc:	7f 01       	movw	r14, r30
 2be:	88 23       	and	r24, r24
 2c0:	09 f4       	brne	.+2      	; 0x2c4 <vfprintf+0x3a>
 2c2:	ba c1       	rjmp	.+884    	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 2c4:	85 32       	cpi	r24, 0x25	; 37
 2c6:	39 f4       	brne	.+14     	; 0x2d6 <vfprintf+0x4c>
 2c8:	93 fd       	sbrc	r25, 3
 2ca:	85 91       	lpm	r24, Z+
 2cc:	93 ff       	sbrs	r25, 3
 2ce:	81 91       	ld	r24, Z+
 2d0:	7f 01       	movw	r14, r30
 2d2:	85 32       	cpi	r24, 0x25	; 37
 2d4:	29 f4       	brne	.+10     	; 0x2e0 <vfprintf+0x56>
 2d6:	b6 01       	movw	r22, r12
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 2de:	e7 cf       	rjmp	.-50     	; 0x2ae <vfprintf+0x24>
 2e0:	91 2c       	mov	r9, r1
 2e2:	21 2c       	mov	r2, r1
 2e4:	31 2c       	mov	r3, r1
 2e6:	ff e1       	ldi	r31, 0x1F	; 31
 2e8:	f3 15       	cp	r31, r3
 2ea:	d8 f0       	brcs	.+54     	; 0x322 <vfprintf+0x98>
 2ec:	8b 32       	cpi	r24, 0x2B	; 43
 2ee:	79 f0       	breq	.+30     	; 0x30e <vfprintf+0x84>
 2f0:	38 f4       	brcc	.+14     	; 0x300 <vfprintf+0x76>
 2f2:	80 32       	cpi	r24, 0x20	; 32
 2f4:	79 f0       	breq	.+30     	; 0x314 <vfprintf+0x8a>
 2f6:	83 32       	cpi	r24, 0x23	; 35
 2f8:	a1 f4       	brne	.+40     	; 0x322 <vfprintf+0x98>
 2fa:	23 2d       	mov	r18, r3
 2fc:	20 61       	ori	r18, 0x10	; 16
 2fe:	1d c0       	rjmp	.+58     	; 0x33a <vfprintf+0xb0>
 300:	8d 32       	cpi	r24, 0x2D	; 45
 302:	61 f0       	breq	.+24     	; 0x31c <vfprintf+0x92>
 304:	80 33       	cpi	r24, 0x30	; 48
 306:	69 f4       	brne	.+26     	; 0x322 <vfprintf+0x98>
 308:	23 2d       	mov	r18, r3
 30a:	21 60       	ori	r18, 0x01	; 1
 30c:	16 c0       	rjmp	.+44     	; 0x33a <vfprintf+0xb0>
 30e:	83 2d       	mov	r24, r3
 310:	82 60       	ori	r24, 0x02	; 2
 312:	38 2e       	mov	r3, r24
 314:	e3 2d       	mov	r30, r3
 316:	e4 60       	ori	r30, 0x04	; 4
 318:	3e 2e       	mov	r3, r30
 31a:	2a c0       	rjmp	.+84     	; 0x370 <vfprintf+0xe6>
 31c:	f3 2d       	mov	r31, r3
 31e:	f8 60       	ori	r31, 0x08	; 8
 320:	1d c0       	rjmp	.+58     	; 0x35c <vfprintf+0xd2>
 322:	37 fc       	sbrc	r3, 7
 324:	2d c0       	rjmp	.+90     	; 0x380 <vfprintf+0xf6>
 326:	20 ed       	ldi	r18, 0xD0	; 208
 328:	28 0f       	add	r18, r24
 32a:	2a 30       	cpi	r18, 0x0A	; 10
 32c:	40 f0       	brcs	.+16     	; 0x33e <vfprintf+0xb4>
 32e:	8e 32       	cpi	r24, 0x2E	; 46
 330:	b9 f4       	brne	.+46     	; 0x360 <vfprintf+0xd6>
 332:	36 fc       	sbrc	r3, 6
 334:	81 c1       	rjmp	.+770    	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 336:	23 2d       	mov	r18, r3
 338:	20 64       	ori	r18, 0x40	; 64
 33a:	32 2e       	mov	r3, r18
 33c:	19 c0       	rjmp	.+50     	; 0x370 <vfprintf+0xe6>
 33e:	36 fe       	sbrs	r3, 6
 340:	06 c0       	rjmp	.+12     	; 0x34e <vfprintf+0xc4>
 342:	8a e0       	ldi	r24, 0x0A	; 10
 344:	98 9e       	mul	r9, r24
 346:	20 0d       	add	r18, r0
 348:	11 24       	eor	r1, r1
 34a:	92 2e       	mov	r9, r18
 34c:	11 c0       	rjmp	.+34     	; 0x370 <vfprintf+0xe6>
 34e:	ea e0       	ldi	r30, 0x0A	; 10
 350:	2e 9e       	mul	r2, r30
 352:	20 0d       	add	r18, r0
 354:	11 24       	eor	r1, r1
 356:	22 2e       	mov	r2, r18
 358:	f3 2d       	mov	r31, r3
 35a:	f0 62       	ori	r31, 0x20	; 32
 35c:	3f 2e       	mov	r3, r31
 35e:	08 c0       	rjmp	.+16     	; 0x370 <vfprintf+0xe6>
 360:	8c 36       	cpi	r24, 0x6C	; 108
 362:	21 f4       	brne	.+8      	; 0x36c <vfprintf+0xe2>
 364:	83 2d       	mov	r24, r3
 366:	80 68       	ori	r24, 0x80	; 128
 368:	38 2e       	mov	r3, r24
 36a:	02 c0       	rjmp	.+4      	; 0x370 <vfprintf+0xe6>
 36c:	88 36       	cpi	r24, 0x68	; 104
 36e:	41 f4       	brne	.+16     	; 0x380 <vfprintf+0xf6>
 370:	f7 01       	movw	r30, r14
 372:	93 fd       	sbrc	r25, 3
 374:	85 91       	lpm	r24, Z+
 376:	93 ff       	sbrs	r25, 3
 378:	81 91       	ld	r24, Z+
 37a:	7f 01       	movw	r14, r30
 37c:	81 11       	cpse	r24, r1
 37e:	b3 cf       	rjmp	.-154    	; 0x2e6 <vfprintf+0x5c>
 380:	98 2f       	mov	r25, r24
 382:	9f 7d       	andi	r25, 0xDF	; 223
 384:	95 54       	subi	r25, 0x45	; 69
 386:	93 30       	cpi	r25, 0x03	; 3
 388:	28 f4       	brcc	.+10     	; 0x394 <vfprintf+0x10a>
 38a:	0c 5f       	subi	r16, 0xFC	; 252
 38c:	1f 4f       	sbci	r17, 0xFF	; 255
 38e:	9f e3       	ldi	r25, 0x3F	; 63
 390:	99 83       	std	Y+1, r25	; 0x01
 392:	0d c0       	rjmp	.+26     	; 0x3ae <vfprintf+0x124>
 394:	83 36       	cpi	r24, 0x63	; 99
 396:	31 f0       	breq	.+12     	; 0x3a4 <vfprintf+0x11a>
 398:	83 37       	cpi	r24, 0x73	; 115
 39a:	71 f0       	breq	.+28     	; 0x3b8 <vfprintf+0x12e>
 39c:	83 35       	cpi	r24, 0x53	; 83
 39e:	09 f0       	breq	.+2      	; 0x3a2 <vfprintf+0x118>
 3a0:	59 c0       	rjmp	.+178    	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 3a2:	21 c0       	rjmp	.+66     	; 0x3e6 <vfprintf+0x15c>
 3a4:	f8 01       	movw	r30, r16
 3a6:	80 81       	ld	r24, Z
 3a8:	89 83       	std	Y+1, r24	; 0x01
 3aa:	0e 5f       	subi	r16, 0xFE	; 254
 3ac:	1f 4f       	sbci	r17, 0xFF	; 255
 3ae:	88 24       	eor	r8, r8
 3b0:	83 94       	inc	r8
 3b2:	91 2c       	mov	r9, r1
 3b4:	53 01       	movw	r10, r6
 3b6:	13 c0       	rjmp	.+38     	; 0x3de <vfprintf+0x154>
 3b8:	28 01       	movw	r4, r16
 3ba:	f2 e0       	ldi	r31, 0x02	; 2
 3bc:	4f 0e       	add	r4, r31
 3be:	51 1c       	adc	r5, r1
 3c0:	f8 01       	movw	r30, r16
 3c2:	a0 80       	ld	r10, Z
 3c4:	b1 80       	ldd	r11, Z+1	; 0x01
 3c6:	36 fe       	sbrs	r3, 6
 3c8:	03 c0       	rjmp	.+6      	; 0x3d0 <vfprintf+0x146>
 3ca:	69 2d       	mov	r22, r9
 3cc:	70 e0       	ldi	r23, 0x00	; 0
 3ce:	02 c0       	rjmp	.+4      	; 0x3d4 <vfprintf+0x14a>
 3d0:	6f ef       	ldi	r22, 0xFF	; 255
 3d2:	7f ef       	ldi	r23, 0xFF	; 255
 3d4:	c5 01       	movw	r24, r10
 3d6:	0e 94 31 03 	call	0x662	; 0x662 <strnlen>
 3da:	4c 01       	movw	r8, r24
 3dc:	82 01       	movw	r16, r4
 3de:	f3 2d       	mov	r31, r3
 3e0:	ff 77       	andi	r31, 0x7F	; 127
 3e2:	3f 2e       	mov	r3, r31
 3e4:	16 c0       	rjmp	.+44     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3e6:	28 01       	movw	r4, r16
 3e8:	22 e0       	ldi	r18, 0x02	; 2
 3ea:	42 0e       	add	r4, r18
 3ec:	51 1c       	adc	r5, r1
 3ee:	f8 01       	movw	r30, r16
 3f0:	a0 80       	ld	r10, Z
 3f2:	b1 80       	ldd	r11, Z+1	; 0x01
 3f4:	36 fe       	sbrs	r3, 6
 3f6:	03 c0       	rjmp	.+6      	; 0x3fe <vfprintf+0x174>
 3f8:	69 2d       	mov	r22, r9
 3fa:	70 e0       	ldi	r23, 0x00	; 0
 3fc:	02 c0       	rjmp	.+4      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fe:	6f ef       	ldi	r22, 0xFF	; 255
 400:	7f ef       	ldi	r23, 0xFF	; 255
 402:	c5 01       	movw	r24, r10
 404:	0e 94 26 03 	call	0x64c	; 0x64c <strnlen_P>
 408:	4c 01       	movw	r8, r24
 40a:	f3 2d       	mov	r31, r3
 40c:	f0 68       	ori	r31, 0x80	; 128
 40e:	3f 2e       	mov	r3, r31
 410:	82 01       	movw	r16, r4
 412:	33 fc       	sbrc	r3, 3
 414:	1b c0       	rjmp	.+54     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 416:	82 2d       	mov	r24, r2
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	88 16       	cp	r8, r24
 41c:	99 06       	cpc	r9, r25
 41e:	b0 f4       	brcc	.+44     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 420:	b6 01       	movw	r22, r12
 422:	80 e2       	ldi	r24, 0x20	; 32
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 42a:	2a 94       	dec	r2
 42c:	f4 cf       	rjmp	.-24     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 42e:	f5 01       	movw	r30, r10
 430:	37 fc       	sbrc	r3, 7
 432:	85 91       	lpm	r24, Z+
 434:	37 fe       	sbrs	r3, 7
 436:	81 91       	ld	r24, Z+
 438:	5f 01       	movw	r10, r30
 43a:	b6 01       	movw	r22, r12
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 442:	21 10       	cpse	r2, r1
 444:	2a 94       	dec	r2
 446:	21 e0       	ldi	r18, 0x01	; 1
 448:	82 1a       	sub	r8, r18
 44a:	91 08       	sbc	r9, r1
 44c:	81 14       	cp	r8, r1
 44e:	91 04       	cpc	r9, r1
 450:	71 f7       	brne	.-36     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 452:	e8 c0       	rjmp	.+464    	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 454:	84 36       	cpi	r24, 0x64	; 100
 456:	11 f0       	breq	.+4      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 458:	89 36       	cpi	r24, 0x69	; 105
 45a:	41 f5       	brne	.+80     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 45c:	f8 01       	movw	r30, r16
 45e:	37 fe       	sbrs	r3, 7
 460:	07 c0       	rjmp	.+14     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 462:	60 81       	ld	r22, Z
 464:	71 81       	ldd	r23, Z+1	; 0x01
 466:	82 81       	ldd	r24, Z+2	; 0x02
 468:	93 81       	ldd	r25, Z+3	; 0x03
 46a:	0c 5f       	subi	r16, 0xFC	; 252
 46c:	1f 4f       	sbci	r17, 0xFF	; 255
 46e:	08 c0       	rjmp	.+16     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 470:	60 81       	ld	r22, Z
 472:	71 81       	ldd	r23, Z+1	; 0x01
 474:	07 2e       	mov	r0, r23
 476:	00 0c       	add	r0, r0
 478:	88 0b       	sbc	r24, r24
 47a:	99 0b       	sbc	r25, r25
 47c:	0e 5f       	subi	r16, 0xFE	; 254
 47e:	1f 4f       	sbci	r17, 0xFF	; 255
 480:	f3 2d       	mov	r31, r3
 482:	ff 76       	andi	r31, 0x6F	; 111
 484:	3f 2e       	mov	r3, r31
 486:	97 ff       	sbrs	r25, 7
 488:	09 c0       	rjmp	.+18     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 48a:	90 95       	com	r25
 48c:	80 95       	com	r24
 48e:	70 95       	com	r23
 490:	61 95       	neg	r22
 492:	7f 4f       	sbci	r23, 0xFF	; 255
 494:	8f 4f       	sbci	r24, 0xFF	; 255
 496:	9f 4f       	sbci	r25, 0xFF	; 255
 498:	f0 68       	ori	r31, 0x80	; 128
 49a:	3f 2e       	mov	r3, r31
 49c:	2a e0       	ldi	r18, 0x0A	; 10
 49e:	30 e0       	ldi	r19, 0x00	; 0
 4a0:	a3 01       	movw	r20, r6
 4a2:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__ultoa_invert>
 4a6:	88 2e       	mov	r8, r24
 4a8:	86 18       	sub	r8, r6
 4aa:	45 c0       	rjmp	.+138    	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 4ac:	85 37       	cpi	r24, 0x75	; 117
 4ae:	31 f4       	brne	.+12     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b0:	23 2d       	mov	r18, r3
 4b2:	2f 7e       	andi	r18, 0xEF	; 239
 4b4:	b2 2e       	mov	r11, r18
 4b6:	2a e0       	ldi	r18, 0x0A	; 10
 4b8:	30 e0       	ldi	r19, 0x00	; 0
 4ba:	25 c0       	rjmp	.+74     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4bc:	93 2d       	mov	r25, r3
 4be:	99 7f       	andi	r25, 0xF9	; 249
 4c0:	b9 2e       	mov	r11, r25
 4c2:	8f 36       	cpi	r24, 0x6F	; 111
 4c4:	c1 f0       	breq	.+48     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4c6:	18 f4       	brcc	.+6      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4c8:	88 35       	cpi	r24, 0x58	; 88
 4ca:	79 f0       	breq	.+30     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4cc:	b5 c0       	rjmp	.+362    	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 4ce:	80 37       	cpi	r24, 0x70	; 112
 4d0:	19 f0       	breq	.+6      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4d2:	88 37       	cpi	r24, 0x78	; 120
 4d4:	21 f0       	breq	.+8      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4d6:	b0 c0       	rjmp	.+352    	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 4d8:	e9 2f       	mov	r30, r25
 4da:	e0 61       	ori	r30, 0x10	; 16
 4dc:	be 2e       	mov	r11, r30
 4de:	b4 fe       	sbrs	r11, 4
 4e0:	0d c0       	rjmp	.+26     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4e2:	fb 2d       	mov	r31, r11
 4e4:	f4 60       	ori	r31, 0x04	; 4
 4e6:	bf 2e       	mov	r11, r31
 4e8:	09 c0       	rjmp	.+18     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4ea:	34 fe       	sbrs	r3, 4
 4ec:	0a c0       	rjmp	.+20     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4ee:	29 2f       	mov	r18, r25
 4f0:	26 60       	ori	r18, 0x06	; 6
 4f2:	b2 2e       	mov	r11, r18
 4f4:	06 c0       	rjmp	.+12     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4f6:	28 e0       	ldi	r18, 0x08	; 8
 4f8:	30 e0       	ldi	r19, 0x00	; 0
 4fa:	05 c0       	rjmp	.+10     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4fc:	20 e1       	ldi	r18, 0x10	; 16
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	02 c0       	rjmp	.+4      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 502:	20 e1       	ldi	r18, 0x10	; 16
 504:	32 e0       	ldi	r19, 0x02	; 2
 506:	f8 01       	movw	r30, r16
 508:	b7 fe       	sbrs	r11, 7
 50a:	07 c0       	rjmp	.+14     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 50c:	60 81       	ld	r22, Z
 50e:	71 81       	ldd	r23, Z+1	; 0x01
 510:	82 81       	ldd	r24, Z+2	; 0x02
 512:	93 81       	ldd	r25, Z+3	; 0x03
 514:	0c 5f       	subi	r16, 0xFC	; 252
 516:	1f 4f       	sbci	r17, 0xFF	; 255
 518:	06 c0       	rjmp	.+12     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 51a:	60 81       	ld	r22, Z
 51c:	71 81       	ldd	r23, Z+1	; 0x01
 51e:	80 e0       	ldi	r24, 0x00	; 0
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	0e 5f       	subi	r16, 0xFE	; 254
 524:	1f 4f       	sbci	r17, 0xFF	; 255
 526:	a3 01       	movw	r20, r6
 528:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__ultoa_invert>
 52c:	88 2e       	mov	r8, r24
 52e:	86 18       	sub	r8, r6
 530:	fb 2d       	mov	r31, r11
 532:	ff 77       	andi	r31, 0x7F	; 127
 534:	3f 2e       	mov	r3, r31
 536:	36 fe       	sbrs	r3, 6
 538:	0d c0       	rjmp	.+26     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 53a:	23 2d       	mov	r18, r3
 53c:	2e 7f       	andi	r18, 0xFE	; 254
 53e:	a2 2e       	mov	r10, r18
 540:	89 14       	cp	r8, r9
 542:	58 f4       	brcc	.+22     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 544:	34 fe       	sbrs	r3, 4
 546:	0b c0       	rjmp	.+22     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 548:	32 fc       	sbrc	r3, 2
 54a:	09 c0       	rjmp	.+18     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 54c:	83 2d       	mov	r24, r3
 54e:	8e 7e       	andi	r24, 0xEE	; 238
 550:	a8 2e       	mov	r10, r24
 552:	05 c0       	rjmp	.+10     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 554:	b8 2c       	mov	r11, r8
 556:	a3 2c       	mov	r10, r3
 558:	03 c0       	rjmp	.+6      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 55a:	b8 2c       	mov	r11, r8
 55c:	01 c0       	rjmp	.+2      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 55e:	b9 2c       	mov	r11, r9
 560:	a4 fe       	sbrs	r10, 4
 562:	0f c0       	rjmp	.+30     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 564:	fe 01       	movw	r30, r28
 566:	e8 0d       	add	r30, r8
 568:	f1 1d       	adc	r31, r1
 56a:	80 81       	ld	r24, Z
 56c:	80 33       	cpi	r24, 0x30	; 48
 56e:	21 f4       	brne	.+8      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 570:	9a 2d       	mov	r25, r10
 572:	99 7e       	andi	r25, 0xE9	; 233
 574:	a9 2e       	mov	r10, r25
 576:	09 c0       	rjmp	.+18     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 578:	a2 fe       	sbrs	r10, 2
 57a:	06 c0       	rjmp	.+12     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 57c:	b3 94       	inc	r11
 57e:	b3 94       	inc	r11
 580:	04 c0       	rjmp	.+8      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 582:	8a 2d       	mov	r24, r10
 584:	86 78       	andi	r24, 0x86	; 134
 586:	09 f0       	breq	.+2      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 588:	b3 94       	inc	r11
 58a:	a3 fc       	sbrc	r10, 3
 58c:	11 c0       	rjmp	.+34     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 58e:	a0 fe       	sbrs	r10, 0
 590:	06 c0       	rjmp	.+12     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 592:	b2 14       	cp	r11, r2
 594:	88 f4       	brcc	.+34     	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 596:	28 0c       	add	r2, r8
 598:	92 2c       	mov	r9, r2
 59a:	9b 18       	sub	r9, r11
 59c:	0e c0       	rjmp	.+28     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 59e:	b2 14       	cp	r11, r2
 5a0:	60 f4       	brcc	.+24     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5a2:	b6 01       	movw	r22, r12
 5a4:	80 e2       	ldi	r24, 0x20	; 32
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 5ac:	b3 94       	inc	r11
 5ae:	f7 cf       	rjmp	.-18     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 5b0:	b2 14       	cp	r11, r2
 5b2:	18 f4       	brcc	.+6      	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5b4:	2b 18       	sub	r2, r11
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5b8:	98 2c       	mov	r9, r8
 5ba:	21 2c       	mov	r2, r1
 5bc:	a4 fe       	sbrs	r10, 4
 5be:	10 c0       	rjmp	.+32     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5c0:	b6 01       	movw	r22, r12
 5c2:	80 e3       	ldi	r24, 0x30	; 48
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 5ca:	a2 fe       	sbrs	r10, 2
 5cc:	17 c0       	rjmp	.+46     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5ce:	a1 fc       	sbrc	r10, 1
 5d0:	03 c0       	rjmp	.+6      	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5d2:	88 e7       	ldi	r24, 0x78	; 120
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5d8:	88 e5       	ldi	r24, 0x58	; 88
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	b6 01       	movw	r22, r12
 5de:	0c c0       	rjmp	.+24     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5e0:	8a 2d       	mov	r24, r10
 5e2:	86 78       	andi	r24, 0x86	; 134
 5e4:	59 f0       	breq	.+22     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5e6:	a1 fe       	sbrs	r10, 1
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5ea:	8b e2       	ldi	r24, 0x2B	; 43
 5ec:	01 c0       	rjmp	.+2      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5ee:	80 e2       	ldi	r24, 0x20	; 32
 5f0:	a7 fc       	sbrc	r10, 7
 5f2:	8d e2       	ldi	r24, 0x2D	; 45
 5f4:	b6 01       	movw	r22, r12
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 5fc:	89 14       	cp	r8, r9
 5fe:	38 f4       	brcc	.+14     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 600:	b6 01       	movw	r22, r12
 602:	80 e3       	ldi	r24, 0x30	; 48
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 60a:	9a 94       	dec	r9
 60c:	f7 cf       	rjmp	.-18     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 60e:	8a 94       	dec	r8
 610:	f3 01       	movw	r30, r6
 612:	e8 0d       	add	r30, r8
 614:	f1 1d       	adc	r31, r1
 616:	80 81       	ld	r24, Z
 618:	b6 01       	movw	r22, r12
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 620:	81 10       	cpse	r8, r1
 622:	f5 cf       	rjmp	.-22     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 624:	22 20       	and	r2, r2
 626:	09 f4       	brne	.+2      	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 628:	42 ce       	rjmp	.-892    	; 0x2ae <vfprintf+0x24>
 62a:	b6 01       	movw	r22, r12
 62c:	80 e2       	ldi	r24, 0x20	; 32
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 634:	2a 94       	dec	r2
 636:	f6 cf       	rjmp	.-20     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 638:	f6 01       	movw	r30, r12
 63a:	86 81       	ldd	r24, Z+6	; 0x06
 63c:	97 81       	ldd	r25, Z+7	; 0x07
 63e:	02 c0       	rjmp	.+4      	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 640:	8f ef       	ldi	r24, 0xFF	; 255
 642:	9f ef       	ldi	r25, 0xFF	; 255
 644:	2b 96       	adiw	r28, 0x0b	; 11
 646:	e2 e1       	ldi	r30, 0x12	; 18
 648:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__epilogue_restores__>

0000064c <strnlen_P>:
 64c:	fc 01       	movw	r30, r24
 64e:	05 90       	lpm	r0, Z+
 650:	61 50       	subi	r22, 0x01	; 1
 652:	70 40       	sbci	r23, 0x00	; 0
 654:	01 10       	cpse	r0, r1
 656:	d8 f7       	brcc	.-10     	; 0x64e <strnlen_P+0x2>
 658:	80 95       	com	r24
 65a:	90 95       	com	r25
 65c:	8e 0f       	add	r24, r30
 65e:	9f 1f       	adc	r25, r31
 660:	08 95       	ret

00000662 <strnlen>:
 662:	fc 01       	movw	r30, r24
 664:	61 50       	subi	r22, 0x01	; 1
 666:	70 40       	sbci	r23, 0x00	; 0
 668:	01 90       	ld	r0, Z+
 66a:	01 10       	cpse	r0, r1
 66c:	d8 f7       	brcc	.-10     	; 0x664 <strnlen+0x2>
 66e:	80 95       	com	r24
 670:	90 95       	com	r25
 672:	8e 0f       	add	r24, r30
 674:	9f 1f       	adc	r25, r31
 676:	08 95       	ret

00000678 <fputc>:
 678:	0f 93       	push	r16
 67a:	1f 93       	push	r17
 67c:	cf 93       	push	r28
 67e:	df 93       	push	r29
 680:	fb 01       	movw	r30, r22
 682:	23 81       	ldd	r18, Z+3	; 0x03
 684:	21 fd       	sbrc	r18, 1
 686:	03 c0       	rjmp	.+6      	; 0x68e <fputc+0x16>
 688:	8f ef       	ldi	r24, 0xFF	; 255
 68a:	9f ef       	ldi	r25, 0xFF	; 255
 68c:	2c c0       	rjmp	.+88     	; 0x6e6 <fputc+0x6e>
 68e:	22 ff       	sbrs	r18, 2
 690:	16 c0       	rjmp	.+44     	; 0x6be <fputc+0x46>
 692:	46 81       	ldd	r20, Z+6	; 0x06
 694:	57 81       	ldd	r21, Z+7	; 0x07
 696:	24 81       	ldd	r18, Z+4	; 0x04
 698:	35 81       	ldd	r19, Z+5	; 0x05
 69a:	42 17       	cp	r20, r18
 69c:	53 07       	cpc	r21, r19
 69e:	44 f4       	brge	.+16     	; 0x6b0 <fputc+0x38>
 6a0:	a0 81       	ld	r26, Z
 6a2:	b1 81       	ldd	r27, Z+1	; 0x01
 6a4:	9d 01       	movw	r18, r26
 6a6:	2f 5f       	subi	r18, 0xFF	; 255
 6a8:	3f 4f       	sbci	r19, 0xFF	; 255
 6aa:	31 83       	std	Z+1, r19	; 0x01
 6ac:	20 83       	st	Z, r18
 6ae:	8c 93       	st	X, r24
 6b0:	26 81       	ldd	r18, Z+6	; 0x06
 6b2:	37 81       	ldd	r19, Z+7	; 0x07
 6b4:	2f 5f       	subi	r18, 0xFF	; 255
 6b6:	3f 4f       	sbci	r19, 0xFF	; 255
 6b8:	37 83       	std	Z+7, r19	; 0x07
 6ba:	26 83       	std	Z+6, r18	; 0x06
 6bc:	14 c0       	rjmp	.+40     	; 0x6e6 <fputc+0x6e>
 6be:	8b 01       	movw	r16, r22
 6c0:	ec 01       	movw	r28, r24
 6c2:	fb 01       	movw	r30, r22
 6c4:	00 84       	ldd	r0, Z+8	; 0x08
 6c6:	f1 85       	ldd	r31, Z+9	; 0x09
 6c8:	e0 2d       	mov	r30, r0
 6ca:	09 95       	icall
 6cc:	89 2b       	or	r24, r25
 6ce:	e1 f6       	brne	.-72     	; 0x688 <fputc+0x10>
 6d0:	d8 01       	movw	r26, r16
 6d2:	16 96       	adiw	r26, 0x06	; 6
 6d4:	8d 91       	ld	r24, X+
 6d6:	9c 91       	ld	r25, X
 6d8:	17 97       	sbiw	r26, 0x07	; 7
 6da:	01 96       	adiw	r24, 0x01	; 1
 6dc:	17 96       	adiw	r26, 0x07	; 7
 6de:	9c 93       	st	X, r25
 6e0:	8e 93       	st	-X, r24
 6e2:	16 97       	sbiw	r26, 0x06	; 6
 6e4:	ce 01       	movw	r24, r28
 6e6:	df 91       	pop	r29
 6e8:	cf 91       	pop	r28
 6ea:	1f 91       	pop	r17
 6ec:	0f 91       	pop	r16
 6ee:	08 95       	ret

000006f0 <__ultoa_invert>:
 6f0:	fa 01       	movw	r30, r20
 6f2:	aa 27       	eor	r26, r26
 6f4:	28 30       	cpi	r18, 0x08	; 8
 6f6:	51 f1       	breq	.+84     	; 0x74c <__ultoa_invert+0x5c>
 6f8:	20 31       	cpi	r18, 0x10	; 16
 6fa:	81 f1       	breq	.+96     	; 0x75c <__ultoa_invert+0x6c>
 6fc:	e8 94       	clt
 6fe:	6f 93       	push	r22
 700:	6e 7f       	andi	r22, 0xFE	; 254
 702:	6e 5f       	subi	r22, 0xFE	; 254
 704:	7f 4f       	sbci	r23, 0xFF	; 255
 706:	8f 4f       	sbci	r24, 0xFF	; 255
 708:	9f 4f       	sbci	r25, 0xFF	; 255
 70a:	af 4f       	sbci	r26, 0xFF	; 255
 70c:	b1 e0       	ldi	r27, 0x01	; 1
 70e:	3e d0       	rcall	.+124    	; 0x78c <__ultoa_invert+0x9c>
 710:	b4 e0       	ldi	r27, 0x04	; 4
 712:	3c d0       	rcall	.+120    	; 0x78c <__ultoa_invert+0x9c>
 714:	67 0f       	add	r22, r23
 716:	78 1f       	adc	r23, r24
 718:	89 1f       	adc	r24, r25
 71a:	9a 1f       	adc	r25, r26
 71c:	a1 1d       	adc	r26, r1
 71e:	68 0f       	add	r22, r24
 720:	79 1f       	adc	r23, r25
 722:	8a 1f       	adc	r24, r26
 724:	91 1d       	adc	r25, r1
 726:	a1 1d       	adc	r26, r1
 728:	6a 0f       	add	r22, r26
 72a:	71 1d       	adc	r23, r1
 72c:	81 1d       	adc	r24, r1
 72e:	91 1d       	adc	r25, r1
 730:	a1 1d       	adc	r26, r1
 732:	20 d0       	rcall	.+64     	; 0x774 <__ultoa_invert+0x84>
 734:	09 f4       	brne	.+2      	; 0x738 <__ultoa_invert+0x48>
 736:	68 94       	set
 738:	3f 91       	pop	r19
 73a:	2a e0       	ldi	r18, 0x0A	; 10
 73c:	26 9f       	mul	r18, r22
 73e:	11 24       	eor	r1, r1
 740:	30 19       	sub	r19, r0
 742:	30 5d       	subi	r19, 0xD0	; 208
 744:	31 93       	st	Z+, r19
 746:	de f6       	brtc	.-74     	; 0x6fe <__ultoa_invert+0xe>
 748:	cf 01       	movw	r24, r30
 74a:	08 95       	ret
 74c:	46 2f       	mov	r20, r22
 74e:	47 70       	andi	r20, 0x07	; 7
 750:	40 5d       	subi	r20, 0xD0	; 208
 752:	41 93       	st	Z+, r20
 754:	b3 e0       	ldi	r27, 0x03	; 3
 756:	0f d0       	rcall	.+30     	; 0x776 <__ultoa_invert+0x86>
 758:	c9 f7       	brne	.-14     	; 0x74c <__ultoa_invert+0x5c>
 75a:	f6 cf       	rjmp	.-20     	; 0x748 <__ultoa_invert+0x58>
 75c:	46 2f       	mov	r20, r22
 75e:	4f 70       	andi	r20, 0x0F	; 15
 760:	40 5d       	subi	r20, 0xD0	; 208
 762:	4a 33       	cpi	r20, 0x3A	; 58
 764:	18 f0       	brcs	.+6      	; 0x76c <__ultoa_invert+0x7c>
 766:	49 5d       	subi	r20, 0xD9	; 217
 768:	31 fd       	sbrc	r19, 1
 76a:	40 52       	subi	r20, 0x20	; 32
 76c:	41 93       	st	Z+, r20
 76e:	02 d0       	rcall	.+4      	; 0x774 <__ultoa_invert+0x84>
 770:	a9 f7       	brne	.-22     	; 0x75c <__ultoa_invert+0x6c>
 772:	ea cf       	rjmp	.-44     	; 0x748 <__ultoa_invert+0x58>
 774:	b4 e0       	ldi	r27, 0x04	; 4
 776:	a6 95       	lsr	r26
 778:	97 95       	ror	r25
 77a:	87 95       	ror	r24
 77c:	77 95       	ror	r23
 77e:	67 95       	ror	r22
 780:	ba 95       	dec	r27
 782:	c9 f7       	brne	.-14     	; 0x776 <__ultoa_invert+0x86>
 784:	00 97       	sbiw	r24, 0x00	; 0
 786:	61 05       	cpc	r22, r1
 788:	71 05       	cpc	r23, r1
 78a:	08 95       	ret
 78c:	9b 01       	movw	r18, r22
 78e:	ac 01       	movw	r20, r24
 790:	0a 2e       	mov	r0, r26
 792:	06 94       	lsr	r0
 794:	57 95       	ror	r21
 796:	47 95       	ror	r20
 798:	37 95       	ror	r19
 79a:	27 95       	ror	r18
 79c:	ba 95       	dec	r27
 79e:	c9 f7       	brne	.-14     	; 0x792 <__ultoa_invert+0xa2>
 7a0:	62 0f       	add	r22, r18
 7a2:	73 1f       	adc	r23, r19
 7a4:	84 1f       	adc	r24, r20
 7a6:	95 1f       	adc	r25, r21
 7a8:	a0 1d       	adc	r26, r0
 7aa:	08 95       	ret

000007ac <__prologue_saves__>:
 7ac:	2f 92       	push	r2
 7ae:	3f 92       	push	r3
 7b0:	4f 92       	push	r4
 7b2:	5f 92       	push	r5
 7b4:	6f 92       	push	r6
 7b6:	7f 92       	push	r7
 7b8:	8f 92       	push	r8
 7ba:	9f 92       	push	r9
 7bc:	af 92       	push	r10
 7be:	bf 92       	push	r11
 7c0:	cf 92       	push	r12
 7c2:	df 92       	push	r13
 7c4:	ef 92       	push	r14
 7c6:	ff 92       	push	r15
 7c8:	0f 93       	push	r16
 7ca:	1f 93       	push	r17
 7cc:	cf 93       	push	r28
 7ce:	df 93       	push	r29
 7d0:	cd b7       	in	r28, 0x3d	; 61
 7d2:	de b7       	in	r29, 0x3e	; 62
 7d4:	ca 1b       	sub	r28, r26
 7d6:	db 0b       	sbc	r29, r27
 7d8:	0f b6       	in	r0, 0x3f	; 63
 7da:	f8 94       	cli
 7dc:	de bf       	out	0x3e, r29	; 62
 7de:	0f be       	out	0x3f, r0	; 63
 7e0:	cd bf       	out	0x3d, r28	; 61
 7e2:	09 94       	ijmp

000007e4 <__epilogue_restores__>:
 7e4:	2a 88       	ldd	r2, Y+18	; 0x12
 7e6:	39 88       	ldd	r3, Y+17	; 0x11
 7e8:	48 88       	ldd	r4, Y+16	; 0x10
 7ea:	5f 84       	ldd	r5, Y+15	; 0x0f
 7ec:	6e 84       	ldd	r6, Y+14	; 0x0e
 7ee:	7d 84       	ldd	r7, Y+13	; 0x0d
 7f0:	8c 84       	ldd	r8, Y+12	; 0x0c
 7f2:	9b 84       	ldd	r9, Y+11	; 0x0b
 7f4:	aa 84       	ldd	r10, Y+10	; 0x0a
 7f6:	b9 84       	ldd	r11, Y+9	; 0x09
 7f8:	c8 84       	ldd	r12, Y+8	; 0x08
 7fa:	df 80       	ldd	r13, Y+7	; 0x07
 7fc:	ee 80       	ldd	r14, Y+6	; 0x06
 7fe:	fd 80       	ldd	r15, Y+5	; 0x05
 800:	0c 81       	ldd	r16, Y+4	; 0x04
 802:	1b 81       	ldd	r17, Y+3	; 0x03
 804:	aa 81       	ldd	r26, Y+2	; 0x02
 806:	b9 81       	ldd	r27, Y+1	; 0x01
 808:	ce 0f       	add	r28, r30
 80a:	d1 1d       	adc	r29, r1
 80c:	0f b6       	in	r0, 0x3f	; 63
 80e:	f8 94       	cli
 810:	de bf       	out	0x3e, r29	; 62
 812:	0f be       	out	0x3f, r0	; 63
 814:	cd bf       	out	0x3d, r28	; 61
 816:	ed 01       	movw	r28, r26
 818:	08 95       	ret

0000081a <_exit>:
 81a:	f8 94       	cli

0000081c <__stop_program>:
 81c:	ff cf       	rjmp	.-2      	; 0x81c <__stop_program>
